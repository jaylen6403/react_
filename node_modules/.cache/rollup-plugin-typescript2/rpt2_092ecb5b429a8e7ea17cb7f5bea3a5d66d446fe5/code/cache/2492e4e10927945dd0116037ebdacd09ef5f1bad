{"code":"import { __rest } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useSelect } from 'downshift';\r\nimport { LumaDropDownBox } from '../../LumaDropdownBox';\r\nimport { LumaSingleDropDownOption } from '../../LumaDropdown/LumaSingleDropDown/LumaSingleDropDownOption';\r\nimport { LumaButton } from '../LumaButton';\r\nimport { Root } from './LumaButtonDropdown.style';\r\nexport const LumaButtonDropdown = (_a) => {\r\n    var { id, dropdownItems, onChangeDropdown, dropdownPosition = 'bottom' } = _a, rest = __rest(_a, [\"id\", \"dropdownItems\", \"onChangeDropdown\", \"dropdownPosition\"]);\r\n    const { isOpen, getMenuProps, getItemProps, highlightedIndex, getToggleButtonProps, } = useSelect({\r\n        items: dropdownItems || [],\r\n        itemToString: (item) => { var _a; return (_a = item === null || item === void 0 ? void 0 : item.label) !== null && _a !== void 0 ? _a : ''; },\r\n        onSelectedItemChange({ selectedItem }) {\r\n            onChangeDropdown === null || onChangeDropdown === void 0 ? void 0 : onChangeDropdown(selectedItem !== null && selectedItem !== void 0 ? selectedItem : null);\r\n        },\r\n    });\r\n    const { split, fullWidth } = rest, restProps = __rest(rest, [\"split\", \"fullWidth\"]);\r\n    return (_jsxs(Root, { children: [_jsx(LumaButton, Object.assign({ dropdown: { isDropdown: !split, isOpen, getToggleButtonProps }, split: split, fullWidth: true }, restProps), void 0), _jsx(LumaDropDownBox, { size: split ? `${dropdownPosition}` : 'medium', variant: split ? `no-border-${dropdownPosition}` : 'standard', isOpen: isOpen, items: dropdownItems || [], getMenuProps: getMenuProps, highlightedIndex: highlightedIndex, getItemProps: getItemProps, renderComponent: _jsx(LumaSingleDropDownOption, {}, void 0), itemToString: (item) => { var _a; return (_a = item === null || item === void 0 ? void 0 : item.label) !== null && _a !== void 0 ? _a : ''; }, id: id }, void 0)] }, void 0));\r\n};\r\n//# sourceMappingURL=LumaButtonDropdown.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/downshift/typings/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDropdown/LumaDropDownBasicType.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDropdownBox/index.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDropdown/LumaSingleDropDown/LumaSingleDropDownOption.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaButton/LumaButton.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaButton/ButtonDropdown/LumaButtonDropdown.style.ts"],"map":"{\"version\":3,\"file\":\"LumaButtonDropdown.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../libs/design-system/src/lib/components-Luma/components/LumaButton/ButtonDropdown/LumaButtonDropdown.tsx\"],\"names\":[],\"mappings\":\";;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAEtC,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AACxD,OAAO,EAAE,wBAAwB,EAAE,MAAM,gEAAgE,CAAC;AAC1G,OAAO,EAAE,UAAU,EAAmB,MAAM,eAAe,CAAC;AAC5D,OAAO,EAAE,IAAI,EAAE,MAAM,4BAA4B,CAAC;AAqBlD,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,EAMb,EAAE,EAAE;QANS,EACjC,EAAE,EACF,aAAa,EACb,gBAAgB,EAChB,gBAAgB,GAAG,QAAQ,OAEP,EADjB,IAAI,cAL0B,+DAMlC,CADQ;IAEP,MAAM,EACJ,MAAM,EACN,YAAY,EACZ,YAAY,EACZ,gBAAgB,EAChB,oBAAoB,GACrB,GAAG,SAAS,CAAC;QACZ,KAAK,EAAE,aAAa,IAAI,EAAE;QAC1B,YAAY,EAAE,CAAC,IAAI,EAAE,EAAE,WAAC,OAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,mCAAI,EAAE,CAAA,EAAA;QACzC,oBAAoB,CAAC,EAAE,YAAY,EAAE;YACnC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,YAAY,aAAZ,YAAY,cAAZ,YAAY,GAAI,IAAI,CAAC,CAAC;QAC3C,CAAC;KACF,CAAC,CAAC;IACH,MAAM,EAAE,KAAK,EAAE,SAAS,KAAmB,IAAI,EAAlB,SAAS,UAAK,IAAI,EAAzC,sBAAkC,CAAO,CAAC;IAEhD,OAAO,CACL,MAAC,IAAI,eACH,KAAC,UAAU,kBACT,QAAQ,EAAE,EAAE,UAAU,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,oBAAoB,EAAE,EAC9D,KAAK,EAAE,KAAK,EACZ,SAAS,UACL,SAAS,UACb,EACF,KAAC,eAAe,IACd,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,gBAAgB,EAAE,CAAC,CAAC,CAAC,QAAQ,EAC9C,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,aAAa,gBAAgB,EAAE,CAAC,CAAC,CAAC,UAAU,EAC7D,MAAM,EAAE,MAAM,EACd,KAAK,EAAE,aAAa,IAAI,EAAE,EAC1B,YAAY,EAAE,YAAY,EAC1B,gBAAgB,EAAE,gBAAgB,EAClC,YAAY,EAAE,YAAY,EAC1B,eAAe,EAAE,KAAC,wBAAwB,aAAG,EAC7C,YAAY,EAAE,CAAC,IAAI,EAAE,EAAE,WAAC,OAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,mCAAI,EAAE,CAAA,EAAA,EACzC,EAAE,EAAE,EAAE,WACN,YACG,CACR,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components-Luma/components/LumaButton/ButtonDropdown/LumaButtonDropdown.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { DataItemProps } from '../../LumaDropdown/LumaDropDownBasicType';\r\nimport { LumaButtonProps } from '../LumaButton';\r\nexport interface DropdownButtonProps extends LumaButtonProps {\r\n    /**\r\n     * unique key for the dropdown\r\n     */\r\n    id: string;\r\n    /**\r\n     * Array items that will be in the dropdown list\r\n     */\r\n    dropdownItems?: DataItemProps[];\r\n    /**\r\n     * onChange action on dropdown.\r\n     */\r\n    onChangeDropdown?: (newItem: DataItemProps | null) => void;\r\n    /**\r\n     * Specifies if dropdown list open to the top or to the bottom in the split button.\r\n     */\r\n    dropdownPosition?: 'top' | 'bottom';\r\n}\r\nexport declare const LumaButtonDropdown: ({ id, dropdownItems, onChangeDropdown, dropdownPosition, ...rest }: DropdownButtonProps) => JSX.Element;\r\n"}}
