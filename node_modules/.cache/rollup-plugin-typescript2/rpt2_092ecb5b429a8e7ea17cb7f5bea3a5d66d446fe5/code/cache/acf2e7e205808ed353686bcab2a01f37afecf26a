{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useState } from 'react';\r\nimport { Logo } from '../../Logo/Logo';\r\nimport lumaLogo from '../../../assets/logos/lumaLogo.svg';\r\nimport { MobileMenuWrapper, LogoContainer, MobileMenuIcon, MobileMenuButton, MobileNavWrapper, MobileTabConatiner, PoweredByLogoContainer, } from './MobileMenu.styles';\r\nimport { MobileTabButton } from '../MobileTabButton/MobileTabButton';\r\nimport { MobileDropdownTab } from '../MobileDropdown/MobileDropdown';\r\nimport { ProfileDropdown } from '../ProfileDropdown/ProfileDropdown';\r\nimport { PoweredByLumaLogo } from '../PoweredByLumaLogo/PoweredByLumaLogo';\r\nimport { isTabDropdown } from '../utils/navTabUtils';\r\nexport const MobileMenu = ({ issuerLogo, logoWidth, logoHeight, menuAriaLabel, tabs, handleNavigate, activeTab, setActiveTab, variantType, parentActiveTab, setParentActiveTab, userName, isMobile, logout, }) => {\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [activeMobileDropdown, setActiveMobileDropdown] = useState(null);\r\n    return (_jsxs(MobileMenuWrapper, Object.assign({ variantType: variantType, isOpen: menuOpen }, { children: [_jsxs(MobileNavWrapper, Object.assign({ variantType: variantType, isOpen: menuOpen }, { children: [_jsx(MobileMenuButton, Object.assign({ name: \"mobile menu\", \"aria-label\": menuAriaLabel, onClick: () => setMenuOpen(!menuOpen) }, { children: _jsx(MobileMenuIcon, { iconCode: menuOpen ? 'times' : 'bars', prefix: \"far\", variantType: variantType }, void 0) }), void 0), _jsx(LogoContainer, Object.assign({ width: logoWidth, height: logoHeight }, { children: _jsx(Logo, { imageSource: issuerLogo ? issuerLogo : lumaLogo }, void 0) }), void 0)] }), void 0), menuOpen && variantType === 'secondary' ? (_jsx(PoweredByLogoContainer, { children: _jsx(PoweredByLumaLogo, { isMobile: true }, void 0) }, void 0)) : null, _jsxs(MobileTabConatiner, { children: [menuOpen &&\r\n                        tabs.map((tab) => {\r\n                            if (isTabDropdown(tab)) {\r\n                                return (_jsx(MobileDropdownTab, { tab: tab, variantType: variantType, activeTab: activeTab, setActiveTab: setActiveTab, menuOpen: menuOpen, setMenuOpen: setMenuOpen, handleNavigate: handleNavigate, parentActiveTab: parentActiveTab, setParentActiveTab: setParentActiveTab, activeMobileDropdown: activeMobileDropdown, setActiveMobileDropdown: setActiveMobileDropdown }, `${new Date().getTime()} ${tab.title}`));\r\n                            }\r\n                            else {\r\n                                return (_jsx(MobileTabButton, { item: tab, variantType: variantType, activeTab: activeTab, setActiveTab: setActiveTab, menuOpen: menuOpen, setMenuOpen: setMenuOpen, handleNavigate: handleNavigate, setParentActiveTab: setParentActiveTab }, `${new Date().getTime()} ${tab.title}`));\r\n                            }\r\n                        }), menuOpen ? (_jsx(ProfileDropdown, { userName: userName, isMobile: isMobile, variantType: variantType, logout: logout, activeMobileDropdown: activeMobileDropdown, setActiveMobileDropdown: setActiveMobileDropdown }, void 0)) : null] }, void 0)] }), void 0));\r\n};\r\n//# sourceMappingURL=MobileMenu.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Logo/Logo.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/MobileMenu/MobileMenu.styles.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/MobileTabButton/MobileTabButton.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/MobileDropdown/MobileDropdown.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/ProfileDropdown/ProfileDropdown.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/index.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/PoweredByLumaLogo/PoweredByLumaLogo.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/GlobalNav.types.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/utils/navTabUtils.ts"],"map":"{\"version\":3,\"file\":\"MobileMenu.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components/GlobalNav/MobileMenu/MobileMenu.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components/GlobalNav/MobileMenu/MobileMenu.d.ts","writeByteOrderMark":false,"text":"import { Dispatch, SetStateAction } from 'react';\r\nimport { NavTabType, Variant } from '..';\r\nimport { NavigateHandlerType } from '../GlobalNav.types';\r\ninterface Props {\r\n    userName: string;\r\n    isMobile: boolean;\r\n    logout: () => void;\r\n    /**\r\n     * outside company logo img source\r\n     */\r\n    issuerLogo?: string;\r\n    /**\r\n     * width property of logo\r\n     */\r\n    logoWidth?: string;\r\n    /**\r\n     * height property of logo\r\n     */\r\n    logoHeight?: string;\r\n    /**\r\n     * styling variant, primary if default luma environment, secondary for whitelabel\r\n     */\r\n    variantType: Variant;\r\n    /**\r\n     * aria label for the bars/mobile menu button\r\n     */\r\n    menuAriaLabel: string;\r\n    /**\r\n     * array of data that will define and complie navbar tabs (names, links, dropdown boolean)\r\n     */\r\n    tabs: NavTabType[];\r\n    /**\r\n     * current active tab, passed in for active tab styling\r\n     */\r\n    activeTab: string;\r\n    /**\r\n     * sets the active tab\r\n     */\r\n    setActiveTab: Dispatch<SetStateAction<string>>;\r\n    /**\r\n     * on click handler for navigation\r\n     */\r\n    handleNavigate: NavigateHandlerType;\r\n    parentActiveTab: string | undefined;\r\n    setParentActiveTab: Dispatch<SetStateAction<string | undefined>>;\r\n}\r\nexport declare const MobileMenu: ({ issuerLogo, logoWidth, logoHeight, menuAriaLabel, tabs, handleNavigate, activeTab, setActiveTab, variantType, parentActiveTab, setParentActiveTab, userName, isMobile, logout, }: Props) => JSX.Element;\r\nexport {};\r\n"}}
