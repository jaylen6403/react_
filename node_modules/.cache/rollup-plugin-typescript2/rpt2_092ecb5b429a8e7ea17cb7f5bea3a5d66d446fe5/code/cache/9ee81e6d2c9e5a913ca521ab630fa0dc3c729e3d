{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useSelect } from 'downshift';\r\nimport { MobileTabButton, MobileTabWrapper, ActiveButtonHighlight, MobileDropdownWrapper, DropdownIcon, MobileListButton, MobileListWrapper, } from './MobileDropdown.styles';\r\nexport const MobileDropdownTab = ({ tab, activeMobileDropdown, setActiveMobileDropdown, variantType, parentActiveTab, setParentActiveTab, activeTab, setActiveTab, menuOpen, setMenuOpen, handleNavigate, }) => {\r\n    const { title, children } = tab;\r\n    const { getToggleButtonProps, getMenuProps, getItemProps } = useSelect({\r\n        items: children,\r\n    });\r\n    const buttonProps = Object.assign({}, getToggleButtonProps());\r\n    const menuProps = Object.assign({}, getMenuProps({}, { suppressRefError: true }));\r\n    const dropdownOpen = activeMobileDropdown === title;\r\n    const dropdownButtonClick = (name) => {\r\n        if (dropdownOpen) {\r\n            setActiveMobileDropdown(null);\r\n        }\r\n        else {\r\n            setActiveMobileDropdown(name);\r\n        }\r\n    };\r\n    const listItemClick = (item) => {\r\n        setActiveTab(item.title);\r\n        handleNavigate(item);\r\n        setMenuOpen(!menuOpen);\r\n        setActiveMobileDropdown(null);\r\n        setParentActiveTab(title);\r\n    };\r\n    return (_jsxs(\"div\", { children: [_jsxs(MobileTabWrapper, Object.assign({ dropdownActive: dropdownOpen, variantType: variantType }, { children: [_jsxs(MobileTabButton, Object.assign({}, buttonProps, { onClick: () => dropdownButtonClick(title), variantType: variantType, isDropdown: dropdownOpen, isActive: title === parentActiveTab }, { children: [title, _jsx(DropdownIcon, { iconCode: dropdownOpen ? 'angle-up' : 'angle-down', prefix: \"far\", variantType: variantType }, void 0)] }), void 0), _jsx(ActiveButtonHighlight, { isActive: title === activeTab || parentActiveTab === title, variantType: variantType }, void 0)] }), void 0), dropdownOpen ? (_jsx(MobileDropdownWrapper, Object.assign({ variantType: variantType }, menuProps, { role: \"menu\" }, { children: dropdownOpen &&\r\n                    children.map((item, index) => {\r\n                        const itemProps = getItemProps({\r\n                            item,\r\n                            index,\r\n                        });\r\n                        return (_jsx(MobileListWrapper, { children: _jsx(MobileListButton, Object.assign({}, itemProps, { onClick: () => listItemClick(item), variantType: variantType, isDropdown: true, role: \"menuitem\" }, { children: item.title }), void 0) }, `${new Date().getTime()}${item}${index}`));\r\n                    }) }), void 0)) : null] }, void 0));\r\n};\r\n//# sourceMappingURL=MobileDropdown.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/downshift/typings/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/MobileDropdown/MobileDropdown.styles.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/GlobalNav.types.ts"],"map":"{\"version\":3,\"file\":\"MobileDropdown.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components/GlobalNav/MobileDropdown/MobileDropdown.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components/GlobalNav/MobileDropdown/MobileDropdown.d.ts","writeByteOrderMark":false,"text":"import { Dispatch, SetStateAction } from 'react';\r\nimport { NavigateHandlerType, NavTabTypeWithChildren, Variant } from '../GlobalNav.types';\r\ninterface Props {\r\n    tab: NavTabTypeWithChildren;\r\n    variantType: Variant;\r\n    activeTab: string;\r\n    setActiveTab: Dispatch<SetStateAction<string>>;\r\n    menuOpen: boolean;\r\n    setMenuOpen: Dispatch<SetStateAction<boolean>>;\r\n    handleNavigate: NavigateHandlerType;\r\n    activeMobileDropdown: string | null;\r\n    setActiveMobileDropdown: Dispatch<SetStateAction<string | null>>;\r\n    parentActiveTab: string | undefined;\r\n    setParentActiveTab: Dispatch<SetStateAction<string | undefined>>;\r\n}\r\nexport declare const MobileDropdownTab: ({ tab, activeMobileDropdown, setActiveMobileDropdown, variantType, parentActiveTab, setParentActiveTab, activeTab, setActiveTab, menuOpen, setMenuOpen, handleNavigate, }: Props) => JSX.Element;\r\nexport {};\r\n"}}
