{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { ToggleButtonContainer, Title, ButtonWrapper, } from './LumaToggleButton.styles';\r\nimport { LumaButton } from '../LumaButton';\r\nexport const LumaToggleButton = ({ activeValue, fieldValues, title, size = 'toggle_medium', onClick, }) => {\r\n    return (_jsxs(ToggleButtonContainer, { children: [title && _jsx(Title, { children: title }, void 0), _jsx(ButtonWrapper, { children: fieldValues.map(({ label, paramName, isDisabled }) => {\r\n                    const onButtonClick = () => {\r\n                        onClick(paramName);\r\n                    };\r\n                    const isActive = paramName === activeValue;\r\n                    return (_jsx(LumaButton, Object.assign({ variant: isActive ? 'toggle_active' : 'toggle_inactive', size: size, disabled: isDisabled || false, onClick: onButtonClick }, { children: label }), paramName));\r\n                }) }, void 0)] }, void 0));\r\n};\r\n//# sourceMappingURL=LumaToggleButton.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaToggleButton/LumaToggleButton.styles.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaButton/index.ts"],"map":"{\"version\":3,\"file\":\"LumaToggleButton.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components-Luma/components/LumaToggleButton/LumaToggleButton.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EACL,qBAAqB,EACrB,KAAK,EACL,aAAa,GACd,MAAM,2BAA2B,CAAC;AACnC,OAAO,EAAE,UAAU,EAAmB,MAAM,eAAe,CAAC;AA+B5D,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,EAC/B,WAAW,EACX,WAAW,EACX,KAAK,EACL,IAAI,GAAG,eAAe,EACtB,OAAO,GACW,EAAE,EAAE;IACtB,OAAO,CACL,MAAC,qBAAqB,eACnB,KAAK,IAAI,KAAC,KAAK,cAAE,KAAK,WAAS,EAChC,KAAC,aAAa,cACX,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,EAAE,EAAE;oBACpD,MAAM,aAAa,GAAG,GAAG,EAAE;wBACzB,OAAO,CAAC,SAAS,CAAC,CAAC;oBACrB,CAAC,CAAC;oBACF,MAAM,QAAQ,GAAG,SAAS,KAAK,WAAW,CAAC;oBAC3C,OAAO,CACL,KAAC,UAAU,kBAET,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,iBAAiB,EACvD,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,UAAU,IAAI,KAAK,EAC7B,OAAO,EAAE,aAAa,gBAErB,KAAK,KAND,SAAS,CAOH,CACd,CAAC;gBACJ,CAAC,CAAC,WACY,YACM,CACzB,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components-Luma/components/LumaToggleButton/LumaToggleButton.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { LumaButtonProps } from '../LumaButton';\r\ninterface FieldValues {\r\n    paramName: string;\r\n    label: string;\r\n    isDisabled?: boolean;\r\n}\r\nexport interface ToggleButtonProps {\r\n    /**\r\n     * Currently selected value.\r\n     */\r\n    activeValue: string;\r\n    /**\r\n     * List of toggles.\r\n     */\r\n    fieldValues: FieldValues[];\r\n    /**\r\n     * The title toggle for the button that will be displayed above.\r\n     */\r\n    title?: string;\r\n    /**\r\n     * Button size.\r\n     */\r\n    size?: LumaButtonProps['size'];\r\n    /**\r\n     * Handler of click which receives paramName of clicked button.\r\n     */\r\n    onClick: (paramName: string) => void;\r\n}\r\nexport declare const LumaToggleButton: ({ activeValue, fieldValues, title, size, onClick, }: ToggleButtonProps) => JSX.Element;\r\nexport {};\r\n"}}
