{"code":"import { createElement as _createElement } from \"react\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useState } from 'react';\r\nimport { useSelect } from 'downshift';\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport { DropdownButton, DropdownListButton, DropdownIcon, DropdownMenu, DropdownWrapper, DropdownButtonWrapper, } from './DropdownNavTab.styles';\r\nexport const DropdownNavTab = ({ tab, activeTab, setActiveTab, handleNavigate, variantType, parentActiveTab, setParentActiveTab, }) => {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const { title, children } = tab;\r\n    const { getToggleButtonProps, getMenuProps, getItemProps } = useSelect({\r\n        items: children,\r\n    });\r\n    const buttonProps = Object.assign({}, getToggleButtonProps());\r\n    const menuProps = Object.assign({}, getMenuProps({}, { suppressRefError: true }));\r\n    const dropdownButtonClick = () => {\r\n        setDropdownOpen(!dropdownOpen);\r\n    };\r\n    const listItemClick = (item) => {\r\n        const skipTabUpdate = handleNavigate(item);\r\n        setDropdownOpen(false);\r\n        if (skipTabUpdate) {\r\n            return;\r\n        }\r\n        setActiveTab(item.title);\r\n        setParentActiveTab(title);\r\n    };\r\n    return (_jsx(\"div\", { children: _jsxs(OutsideClickHandler, Object.assign({ onOutsideClick: () => {\r\n                setDropdownOpen(false);\r\n            } }, { children: [_jsx(DropdownButtonWrapper, { children: _jsxs(DropdownButton, Object.assign({}, buttonProps, { isActive: activeTab === title || parentActiveTab === title, variantType: variantType, onClick: dropdownButtonClick }, { children: [title, _jsx(DropdownIcon, { iconCode: dropdownOpen ? 'angle-up' : 'angle-down', prefix: \"far\", variantType: variantType }, void 0)] }), void 0) }, void 0), dropdownOpen ? (_jsx(DropdownWrapper, { children: _jsx(DropdownMenu, Object.assign({}, menuProps, { \"aria-labelledby\": buttonProps.id, role: \"menu\" }, { children: dropdownOpen &&\r\n                            children.map((item, index) => {\r\n                                const itemProps = getItemProps({ item, index });\r\n                                return (_createElement(DropdownListButton, Object.assign({}, itemProps, { key: `${item}${index}`, \"aria-label\": item.title, \"aria-selected\": undefined, isActive: activeTab === item.title, variantType: variantType, onClick: () => listItemClick(item), role: \"menuitem\" }), item.title));\r\n                            }) }), void 0) }, void 0)) : null] }), void 0) }, void 0));\r\n};\r\n//# sourceMappingURL=DropdownNavTab.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/downshift/typings/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react-outside-click-handler/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/DropdownNavTab/DropdownNavTab.styles.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/GlobalNav.types.ts"],"map":"{\"version\":3,\"file\":\"DropdownNavTab.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components/GlobalNav/DropdownNavTab/DropdownNavTab.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components/GlobalNav/DropdownNavTab/DropdownNavTab.d.ts","writeByteOrderMark":false,"text":"import { Dispatch, SetStateAction } from 'react';\r\nimport { NavTabTypeWithChildren, Variant, NavigateHandlerType } from '../GlobalNav.types';\r\ninterface Props {\r\n    tab: NavTabTypeWithChildren;\r\n    activeTab: string;\r\n    handleNavigate: NavigateHandlerType;\r\n    setActiveTab: Dispatch<SetStateAction<string>>;\r\n    variantType: Variant;\r\n    parentActiveTab: string | undefined;\r\n    setParentActiveTab: Dispatch<SetStateAction<string | undefined>>;\r\n}\r\nexport declare const DropdownNavTab: ({ tab, activeTab, setActiveTab, handleNavigate, variantType, parentActiveTab, setParentActiveTab, }: Props) => JSX.Element;\r\nexport {};\r\n"}}
