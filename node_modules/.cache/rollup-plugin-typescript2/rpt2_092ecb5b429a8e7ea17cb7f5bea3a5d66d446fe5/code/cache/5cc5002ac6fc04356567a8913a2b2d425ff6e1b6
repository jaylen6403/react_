{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport * as React from 'react';\r\nimport { DropDownBox, DropDownListElement, DropDownSection, InnerBox, } from './LumaDropdownBox.style';\r\nexport const LumaDropDownBox = ({ items, disabled, getMenuProps, getItemProps, isOpen = false, highlightedIndex, size = 'medium', renderComponent, selectedItem = null, itemToString = (item) => { var _a; return (_a = item === null || item === void 0 ? void 0 : item.label) !== null && _a !== void 0 ? _a : ''; }, variant = 'standard', selectedItems, id, errorTemplate, }) => {\r\n    const menuProps = getMenuProps ? getMenuProps() : {};\r\n    return (_jsx(DropDownBox, Object.assign({ size: size, isOpen: isOpen, variant: variant }, menuProps, { \"aria-labelledby\": `${id}Label` }, { children: _jsx(InnerBox, { children: isOpen &&\r\n                (items.length\r\n                    ? items.map((item, index) => {\r\n                        var _a;\r\n                        let isSelected = false;\r\n                        if (selectedItem && item) {\r\n                            isSelected =\r\n                                itemToString(selectedItem) === itemToString(item);\r\n                        }\r\n                        const itemProps = getItemProps\r\n                            ? getItemProps({\r\n                                item: item,\r\n                                index,\r\n                                disabled: item.isDisabled,\r\n                            })\r\n                            : {};\r\n                        return (_jsxs(React.Fragment, { children: [item.sectionName && (_jsx(DropDownSection, { children: item === null || item === void 0 ? void 0 : item.sectionName }, void 0)), _jsx(DropDownListElement, Object.assign({ isHighlighted: highlightedIndex === index, \"data-testid\": `dropdown-item-${(_a = item.label) === null || _a === void 0 ? void 0 : _a.toLowerCase().replace(' ', '_')}` }, itemProps, { children: React.cloneElement(renderComponent, {\r\n                                        selectedItems,\r\n                                        item,\r\n                                        items,\r\n                                        disabled,\r\n                                        selectedItem,\r\n                                        isSelected,\r\n                                        variant,\r\n                                    }) }), void 0)] }, `${item}${index}`));\r\n                    })\r\n                    : errorTemplate !== null && errorTemplate !== void 0 ? errorTemplate : null) }, void 0) }), void 0));\r\n};\r\n//# sourceMappingURL=LumaDropDownBox.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDropdown/LumaDropDownBasicType.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDropdownBox/LumaDropdownBox.style.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/downshift/typings/index.d.ts"],"map":"{\"version\":3,\"file\":\"LumaDropDownBox.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components-Luma/components/LumaDropdownBox/LumaDropDownBox.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EACL,WAAW,EACX,mBAAmB,EACnB,eAAe,EACf,QAAQ,GACT,MAAM,yBAAyB,CAAC;AA2BjC,MAAM,CAAC,MAAM,eAAe,GAAG,CAAQ,EACrC,KAAK,EACL,QAAQ,EACR,YAAY,EACZ,YAAY,EACZ,MAAM,GAAG,KAAK,EACd,gBAAgB,EAChB,IAAI,GAAG,QAAQ,EACf,eAAe,EACf,YAAY,GAAG,IAAI,EACnB,YAAY,GAAG,CAAC,IAA0B,EAAE,EAAE,WAAC,OAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,mCAAI,EAAE,CAAA,EAAA,EAChE,OAAO,GAAG,UAAU,EACpB,aAAa,EACb,EAAE,EACF,aAAa,GACc,EAAE,EAAE;IAC/B,MAAM,SAAS,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IACrD,OAAO,CACL,KAAC,WAAW,kBACV,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,IACZ,SAAS,uBACI,GAAG,EAAE,OAAO,gBAE7B,KAAC,QAAQ,cACN,MAAM;gBACL,CAAC,KAAK,CAAC,MAAM;oBACX,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAmB,EAAE,KAAa,EAAE,EAAE;;wBAC/C,IAAI,UAAU,GAAG,KAAK,CAAC;wBACvB,IAAI,YAAY,IAAI,IAAI,EAAE;4BACxB,UAAU;gCACR,YAAY,CAAC,YAAY,CAAC,KAAK,YAAY,CAAC,IAAI,CAAC,CAAC;yBACrD;wBACD,MAAM,SAAS,GAAG,YAAY;4BAC5B,CAAC,CAAC,YAAY,CAAC;gCACX,IAAI,EAAE,IAAY;gCAClB,KAAK;gCACL,QAAQ,EAAE,IAAI,CAAC,UAAU;6BAC1B,CAAC;4BACJ,CAAC,CAAC,EAAE,CAAC;wBACP,OAAO,CACL,MAAC,KAAK,CAAC,QAAQ,eACZ,IAAI,CAAC,WAAW,IAAI,CACnB,KAAC,eAAe,cAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,WAAmB,CACvD,EACD,KAAC,mBAAmB,kBAClB,aAAa,EAAE,gBAAgB,KAAK,KAAK,iBAC5B,iBAAiB,MAAA,IAAI,CAAC,KAAK,0CACpC,WAAW,GACZ,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAClB,SAAS,cAEZ,KAAK,CAAC,YAAY,CACjB,eAAqC,EACrC;wCACE,aAAa;wCACb,IAAI;wCACJ,KAAK;wCACL,QAAQ;wCACR,YAAY;wCACZ,UAAU;wCACV,OAAO;qCACR,CACF,YACmB,KAvBH,GAAG,IAAI,GAAG,KAAK,EAAE,CAwBrB,CAClB,CAAC;oBACJ,CAAC,CAAC;oBACJ,CAAC,CAAC,aAAa,aAAb,aAAa,cAAb,aAAa,GAAI,IAAI,CAAC,WACnB,YACC,CACf,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components-Luma/components/LumaDropdownBox/LumaDropDownBox.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport { DataItemProps, SizeType } from '../LumaDropdown/LumaDropDownBasicType';\r\nimport { UseComboboxGetItemPropsOptions } from 'downshift';\r\n/** Interface for dropdown box */\r\nexport interface DropDownBoxInterface<Item> {\r\n    disabled?: boolean;\r\n    items: Item[];\r\n    getMenuProps?: () => void;\r\n    getItemProps?: (options: UseComboboxGetItemPropsOptions<Item>) => void;\r\n    isOpen?: boolean;\r\n    highlightedIndex?: number;\r\n    size?: SizeType;\r\n    renderComponent?: React.ReactElement<{\r\n        item: Item;\r\n    }>;\r\n    itemToString?: (item: DataItemProps | null) => string;\r\n    selectedItem?: DataItemProps | null;\r\n    variant?: 'standard' | 'underlier' | 'single' | 'multi' | 'no-border-top' | 'no-border-bottom';\r\n    id: string;\r\n    selectedItems?: DataItemProps[];\r\n    errorTemplate?: React.ReactElement;\r\n}\r\nexport declare const LumaDropDownBox: <Item>({ items, disabled, getMenuProps, getItemProps, isOpen, highlightedIndex, size, renderComponent, selectedItem, itemToString, variant, selectedItems, id, errorTemplate, }: DropDownBoxInterface<Item>) => JSX.Element;\r\n"}}
