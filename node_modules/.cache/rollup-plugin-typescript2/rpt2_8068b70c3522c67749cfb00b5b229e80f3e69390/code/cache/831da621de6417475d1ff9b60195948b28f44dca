{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { NavTabButton } from '../NavTabButton/NavTabButton';\r\nimport { NavTabBarContainer, NavTabBarWrapper } from './NavTabBar.styles';\r\nimport { DropdownNavTab } from '../DropdownNavTab/DropdownNavTab';\r\nimport { PoweredByLumaLogo } from '../PoweredByLumaLogo/PoweredByLumaLogo';\r\nimport { isTabDropdown } from '../utils/navTabUtils';\r\nexport var NavTabBar = function (_a) {\r\n    var tabs = _a.tabs, activeTab = _a.activeTab, setActiveTab = _a.setActiveTab, handleNavigate = _a.handleNavigate, variantType = _a.variantType, parentActiveTab = _a.parentActiveTab, setParentActiveTab = _a.setParentActiveTab;\r\n    return (_jsxs(NavTabBarWrapper, { children: [_jsx(NavTabBarContainer, { children: tabs.map(function (tab, idx) {\r\n                    if (isTabDropdown(tab)) {\r\n                        return (_jsx(DropdownNavTab, { tab: tab, activeTab: activeTab, setActiveTab: setActiveTab, parentActiveTab: parentActiveTab, setParentActiveTab: setParentActiveTab, handleNavigate: handleNavigate, variantType: variantType }, \"\".concat(new Date().getTime(), \" \").concat(tab.title)));\r\n                    }\r\n                    else {\r\n                        return (_jsx(NavTabButton, { tab: tab, setActiveTab: setActiveTab, setParentActiveTab: setParentActiveTab, variantType: variantType, activeTab: activeTab, handleNavigate: handleNavigate }, \"\".concat(new Date().getTime(), \" \").concat(tab.title)));\r\n                    }\r\n                }) }, void 0), variantType === 'secondary' ? (_jsx(PoweredByLumaLogo, { isMobile: false }, void 0)) : null] }, void 0));\r\n};\r\n//# sourceMappingURL=NavTabBar.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/NavTabButton/NavTabButton.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/NavTabBar/NavTabBar.styles.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/DropdownNavTab/DropdownNavTab.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/PoweredByLumaLogo/PoweredByLumaLogo.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/GlobalNav.types.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/utils/navTabUtils.ts"],"map":"{\"version\":3,\"file\":\"NavTabBar.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components/GlobalNav/NavTabBar/NavTabBar.tsx\"],\"names\":[],\"mappings\":\";AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAC5D,OAAO,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAC1E,OAAO,EAAE,cAAc,EAAE,MAAM,kCAAkC,CAAC;AAClE,OAAO,EAAE,iBAAiB,EAAE,MAAM,wCAAwC,CAAC;AAE3E,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AA2BrD,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,EAQT;QAPf,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,YAAY,kBAAA,EACZ,cAAc,oBAAA,EACd,WAAW,iBAAA,EACX,eAAe,qBAAA,EACf,kBAAkB,wBAAA;IAElB,OAAO,CACL,MAAC,gBAAgB,eACf,KAAC,kBAAkB,cAChB,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG;oBACjB,IAAI,aAAa,CAAC,GAAG,CAAC,EAAE;wBACtB,OAAO,CACL,KAAC,cAAc,IAEb,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,SAAS,EACpB,YAAY,EAAE,YAAY,EAC1B,eAAe,EAAE,eAAe,EAChC,kBAAkB,EAAE,kBAAkB,EACtC,cAAc,EAAE,cAAc,EAC9B,WAAW,EAAE,WAAW,IAPnB,UAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,cAAI,GAAG,CAAC,KAAK,CAAE,CAQ3C,CACH,CAAC;qBACH;yBAAM;wBACL,OAAO,CACL,KAAC,YAAY,IAEX,GAAG,EAAE,GAAG,EACR,YAAY,EAAE,YAAY,EAC1B,kBAAkB,EAAE,kBAAkB,EACtC,WAAW,EAAE,WAAW,EACxB,SAAS,EAAE,SAAS,EACpB,cAAc,EAAE,cAAc,IANzB,UAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,cAAI,GAAG,CAAC,KAAK,CAAE,CAO3C,CACH,CAAC;qBACH;gBACH,CAAC,CAAC,WACiB,EACpB,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAC7B,KAAC,iBAAiB,IAAC,QAAQ,EAAE,KAAK,WAAI,CACvC,CAAC,CAAC,CAAC,IAAI,YACS,CACpB,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components/GlobalNav/NavTabBar/NavTabBar.d.ts","writeByteOrderMark":false,"text":"import { Dispatch, SetStateAction } from 'react';\r\nimport { NavigateHandlerType, NavTabType, Variant } from '../GlobalNav.types';\r\ninterface NavTabBarProps {\r\n    /**\r\n     * array of data that will define and complie navbar tabs (titles, routes, dropdown boolean)\r\n     */\r\n    tabs: NavTabType[];\r\n    /**\r\n     * styling variant, primary if default luma environment, secondary for whitelabel\r\n     */\r\n    variantType: Variant;\r\n    /**\r\n     * current active tab, passed in for active tab styling\r\n     */\r\n    activeTab: string;\r\n    /**\r\n     * sets the active tab\r\n     */\r\n    setActiveTab: Dispatch<SetStateAction<string>>;\r\n    /**\r\n     * on click handler for navigation and seting active tab\r\n     */\r\n    handleNavigate: NavigateHandlerType;\r\n    parentActiveTab: string | undefined;\r\n    setParentActiveTab: Dispatch<SetStateAction<string | undefined>>;\r\n}\r\nexport declare const NavTabBar: ({ tabs, activeTab, setActiveTab, handleNavigate, variantType, parentActiveTab, setParentActiveTab, }: NavTabBarProps) => JSX.Element;\r\nexport {};\r\n"}}
