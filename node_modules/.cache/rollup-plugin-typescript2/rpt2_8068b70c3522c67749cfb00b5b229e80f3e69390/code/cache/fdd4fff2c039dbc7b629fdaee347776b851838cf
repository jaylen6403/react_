{"code":"import { __assign } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useState, useEffect } from 'react';\r\nimport { NavTabBar } from './NavTabBar/NavTabBar';\r\nimport { TopNavBar } from './TopNavBar/TopNavBar';\r\nimport { MobileMenu } from './MobileMenu/MobileMenu';\r\nimport { GlobalNavContainer } from './GlobalNav.styles';\r\nexport var GlobalNav = function (_a) {\r\n    var userName = _a.userName, logout = _a.logout, tabs = _a.tabs, issuerLogo = _a.issuerLogo, logoWidth = _a.logoWidth, logoHeight = _a.logoHeight, accountAriaLabel = _a.accountAriaLabel, menuAriaLabel = _a.menuAriaLabel, handleNavigate = _a.handleNavigate;\r\n    var _b = useState(window.innerWidth < 916), isMobile = _b[0], setIsMobile = _b[1];\r\n    var _c = useState(''), activeTab = _c[0], setActiveTab = _c[1];\r\n    var _d = useState(undefined), parentActiveTab = _d[0], setParentActiveTab = _d[1];\r\n    var variantType = issuerLogo ? 'secondary' : 'primary';\r\n    useEffect(function () {\r\n        var handleResizeWindow = function () { return setIsMobile(window.innerWidth < 916); };\r\n        window.addEventListener('resize', handleResizeWindow);\r\n        return function () {\r\n            window.removeEventListener('resize', handleResizeWindow);\r\n        };\r\n    }, []);\r\n    useEffect(function () {\r\n        var getInitialTabName = function () {\r\n            var pathname = window.location.pathname;\r\n            for (var i = 0; i < tabs.length; i++) {\r\n                var currentObj = tabs[i];\r\n                if (currentObj.route && pathname.startsWith(currentObj.route)) {\r\n                    return currentObj.title;\r\n                }\r\n                if (currentObj.title === 'TRADE' &&\r\n                    pathname.split('/').includes('secondaries')) {\r\n                    return currentObj.title;\r\n                }\r\n                if (currentObj.children) {\r\n                    for (var i_1 = 0; i_1 < currentObj.children.length; i_1++) {\r\n                        var currOptionObj = currentObj.children[i_1];\r\n                        if (currOptionObj.route === pathname) {\r\n                            setParentActiveTab(currentObj.title);\r\n                            return currOptionObj.title;\r\n                        }\r\n                    }\r\n                }\r\n                if (pathname.includes('product-details')) {\r\n                    return 'LIFECYCLE';\r\n                }\r\n            }\r\n            return 'HOME';\r\n        };\r\n        var pathname = getInitialTabName();\r\n        setActiveTab(pathname);\r\n    }, [tabs]);\r\n    if (isMobile) {\r\n        return (_jsx(GlobalNavContainer, __assign({ title: \"Mobile Navigation\" }, { children: _jsx(MobileMenu, { variantType: variantType, issuerLogo: issuerLogo, logoWidth: logoWidth, logoHeight: logoHeight, menuAriaLabel: menuAriaLabel, tabs: tabs, activeTab: activeTab, setActiveTab: setActiveTab, handleNavigate: handleNavigate, parentActiveTab: parentActiveTab, setParentActiveTab: setParentActiveTab, userName: userName, isMobile: isMobile, logout: logout }, void 0) }), void 0));\r\n    }\r\n    else {\r\n        return (_jsxs(GlobalNavContainer, __assign({ title: \"Main Navigation\" }, { children: [_jsx(TopNavBar, { variantType: variantType, issuerLogo: issuerLogo, logoWidth: logoWidth, logoHeight: logoHeight, accountAriaLabel: accountAriaLabel, userName: userName, isMobile: isMobile, logout: logout }, void 0), _jsx(NavTabBar, { tabs: tabs, variantType: variantType, activeTab: activeTab, setActiveTab: setActiveTab, parentActiveTab: parentActiveTab, setParentActiveTab: setParentActiveTab, handleNavigate: handleNavigate }, void 0)] }), void 0));\r\n    }\r\n};\r\n//# sourceMappingURL=GlobalNav.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/NavTabBar/NavTabBar.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/TopNavBar/TopNavBar.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/MobileMenu/MobileMenu.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/GlobalNav.styles.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/GlobalNav.types.ts"],"map":"{\"version\":3,\"file\":\"GlobalNav.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../libs/design-system/src/lib/components/GlobalNav/GlobalNav.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components/GlobalNav/GlobalNav.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { NavigateHandlerType, NavTabType } from './GlobalNav.types';\r\ninterface GlobalNavProps {\r\n    userName: string;\r\n    logout: () => void;\r\n    /**\r\n     * array of data that will define and compile navbar tabs (names, links, dropdown boolean)\r\n     */\r\n    tabs: NavTabType[];\r\n    /**\r\n     * outside company logo img source\r\n     */\r\n    issuerLogo?: string;\r\n    /**\r\n     * width property of logo\r\n     */\r\n    logoWidth?: string;\r\n    /**\r\n     * height property of logo\r\n     */\r\n    logoHeight?: string;\r\n    /**\r\n     * aria label for the profile/account button\r\n     */\r\n    accountAriaLabel: string;\r\n    /**\r\n     * aria label for the bars/mobile menu button\r\n     */\r\n    menuAriaLabel: string;\r\n    /**\r\n     * on click handler for navigation and setting active tab\r\n     */\r\n    handleNavigate: NavigateHandlerType;\r\n}\r\nexport declare const GlobalNav: ({ userName, logout, tabs, issuerLogo, logoWidth, logoHeight, accountAriaLabel, menuAriaLabel, handleNavigate, }: GlobalNavProps) => JSX.Element;\r\nexport {};\r\n"}}
