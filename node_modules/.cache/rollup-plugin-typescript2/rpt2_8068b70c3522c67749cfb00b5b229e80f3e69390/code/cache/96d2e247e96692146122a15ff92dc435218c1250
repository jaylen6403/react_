{"code":"import { __assign } from \"tslib\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { Portal } from '../Portal/Portal';\r\nimport { ModalBackground, ModalContainer } from './Modal.styles';\r\nexport var Modal = function (_a) {\r\n    var id = _a.id, children = _a.children, _b = _a.isOpen, isOpen = _b === void 0 ? false : _b, background = _a.background, top = _a.top, left = _a.left, position = _a.position;\r\n    return (_jsx(Portal, __assign({ id: id }, { children: _jsx(ModalBackground, __assign({ isOpen: isOpen, background: background, top: top, left: left, position: position }, { children: _jsx(ModalContainer, { children: children }, void 0) }), void 0) }), void 0));\r\n};\r\n//# sourceMappingURL=Modal.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Portal/Portal.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Modal/Modal.styles.ts"],"map":"{\"version\":3,\"file\":\"Modal.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../libs/design-system/src/lib/components/Modal/Modal.tsx\"],\"names\":[],\"mappings\":\";;AACA,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAYjE,MAAM,CAAC,IAAM,KAAK,GAAG,UAAC,EAQT;QAPX,EAAE,QAAA,EACF,QAAQ,cAAA,EACR,cAAc,EAAd,MAAM,mBAAG,KAAK,KAAA,EACd,UAAU,gBAAA,EACV,GAAG,SAAA,EACH,IAAI,UAAA,EACJ,QAAQ,cAAA;IAER,OAAO,CACL,KAAC,MAAM,aAAC,EAAE,EAAE,EAAE,gBACZ,KAAC,eAAe,aACd,MAAM,EAAE,MAAM,EACd,UAAU,EAAE,UAAU,EACtB,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,QAAQ,gBAElB,KAAC,cAAc,cAAE,QAAQ,WAAkB,YAC3B,YACX,CACV,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components/Modal/Modal.d.ts","writeByteOrderMark":false,"text":"import { ReactNode } from 'react';\r\ndeclare type ModalProps = {\r\n    id?: string;\r\n    children: ReactNode;\r\n    isOpen: boolean;\r\n    background?: string;\r\n    top?: string;\r\n    left?: string;\r\n    position?: string;\r\n};\r\nexport declare const Modal: ({ id, children, isOpen, background, top, left, position, }: ModalProps) => JSX.Element;\r\nexport {};\r\n"}}
