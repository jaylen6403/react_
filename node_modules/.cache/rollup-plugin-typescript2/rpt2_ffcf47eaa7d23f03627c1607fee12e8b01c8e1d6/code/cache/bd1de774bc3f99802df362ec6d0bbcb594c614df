{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { IconSwitchContainer, IconSwitchItem, Input, Label, Marker, } from './LumaIconSwitch.style';\r\nimport { LumaIcon } from '../../LumaIcon';\r\nexport const LumaIconSwitch = ({ icons, sizeVariant, checked, disabled = false, onChange, }) => {\r\n    return (_jsxs(IconSwitchContainer, Object.assign({ disabled: disabled, sizeVariant: sizeVariant }, { children: [_jsxs(IconSwitchItem, Object.assign({ sizeVariant: sizeVariant }, { children: [_jsx(Input, { type: \"checkbox\", checked: !checked, onChange: onChange, disabled: disabled, id: \"checkbox\" }, void 0), _jsx(Label, Object.assign({ disabled: disabled, htmlFor: \"checkbox\" }, { children: _jsx(LumaIcon, { iconCode: icons.left, type: !checked ? 'solid' : 'light' }, void 0) }), void 0), _jsx(Marker, { sizeVariant: sizeVariant, disabled: disabled }, void 0)] }), void 0), _jsx(IconSwitchItem, Object.assign({ sizeVariant: sizeVariant }, { children: _jsx(Label, Object.assign({ disabled: disabled, htmlFor: \"checkbox\" }, { children: _jsx(LumaIcon, { iconCode: icons.right, type: checked ? 'solid' : 'light' }, void 0) }), void 0) }), void 0)] }), void 0));\r\n};\r\n//# sourceMappingURL=LumaIconSwitch.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaToggleSwitch/IconSwitch/LumaIconSwitch.style.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaIcon/index.ts"],"map":"{\"version\":3,\"file\":\"LumaIconSwitch.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../libs/design-system/src/lib/components-Luma/components/LumaToggleSwitch/IconSwitch/LumaIconSwitch.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EACL,mBAAmB,EACnB,cAAc,EACd,KAAK,EACL,KAAK,EACL,MAAM,GACP,MAAM,wBAAwB,CAAC;AAChC,OAAO,EAAE,QAAQ,EAAY,MAAM,gBAAgB,CAAC;AAyBpD,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,EAC7B,KAAK,EACL,WAAW,EACX,OAAO,EACP,QAAQ,GAAG,KAAK,EAChB,QAAQ,GACQ,EAAE,EAAE;IACpB,OAAO,CACL,MAAC,mBAAmB,kBAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,iBAC/D,MAAC,cAAc,kBAAC,WAAW,EAAE,WAAW,iBACtC,KAAC,KAAK,IACJ,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,CAAC,OAAO,EACjB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,EAClB,EAAE,EAAC,UAAU,WACb,EACF,KAAC,KAAK,kBAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAC,UAAU,gBAC3C,KAAC,QAAQ,IAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,WAAI,YAChE,EACR,KAAC,MAAM,IAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,WAAI,aACzC,EACjB,KAAC,cAAc,kBAAC,WAAW,EAAE,WAAW,gBACtC,KAAC,KAAK,kBAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAC,UAAU,gBAC3C,KAAC,QAAQ,IAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,WAAI,YAChE,YACO,aACG,CACvB,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components-Luma/components/LumaToggleSwitch/IconSwitch/LumaIconSwitch.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { IconCode } from '../../LumaIcon';\r\nexport interface IconSwitchProps {\r\n    /**\r\n     * defines the icons that will be displayed on the right and left side of the switch\r\n     */\r\n    icons: {\r\n        left: IconCode;\r\n        right: IconCode;\r\n    };\r\n    /**\r\n     * defines the icons that will be displayed on the right and left side of the switch\r\n     */\r\n    sizeVariant: 'small' | 'x_small';\r\n    /**\r\n     * if the value is true then the marker is on the right. If false - on the left.\r\n     */\r\n    checked: boolean;\r\n    /**\r\n     * Is switch disabled.\r\n     */\r\n    disabled?: boolean;\r\n    /**\r\n     * Change handler.\r\n     */\r\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\nexport declare const LumaIconSwitch: ({ icons, sizeVariant, checked, disabled, onChange, }: IconSwitchProps) => JSX.Element;\r\n"}}
