{"code":"import styled, { css } from 'styled-components';\r\nimport { LumaColor } from '../../LumaColors';\r\nimport { LumaFont } from '../../LumaFonts/LumaFonts';\r\nconst VARIANT_MAP = {\r\n    default: {\r\n        textColor: LumaColor.NEUTRAL_80,\r\n        cursor: 'pointer',\r\n        borderColor: LumaColor.NEUTRAL_40,\r\n        backgroundColor: LumaColor.NEUTRAL_00_WHITE,\r\n    },\r\n    disabled: {\r\n        textColor: LumaColor.NEUTRAL_40,\r\n        cursor: 'default',\r\n        borderColor: LumaColor.NEUTRAL_30,\r\n    },\r\n    hover: {\r\n        textColor: LumaColor.NEUTRAL_60,\r\n    },\r\n    checkedNotDisabled: {\r\n        backgroundColor: LumaColor.NEUTRAL_40,\r\n    },\r\n    checkedAndDisabled: {\r\n        borderColor: LumaColor.NEUTRAL_20,\r\n        backgroundColor: LumaColor.NEUTRAL_20,\r\n        textColor: LumaColor.NEUTRAL_40,\r\n    },\r\n};\r\nexport const CheckboxContainer = styled.label `\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.75rem;\n  font-family: ${LumaFont.DEFAULT.REGULAR};\n  cursor: ${VARIANT_MAP['default'].cursor};\n  color: ${VARIANT_MAP['default'].textColor};\n  &:hover:not([disabled]) {\n    color: ${VARIANT_MAP['hover'].textColor};\n  }\n  ${(props) => props.disabled &&\r\n    css `\n      color: ${VARIANT_MAP['disabled'].textColor};\n      cursor: ${VARIANT_MAP['disabled'].cursor};\n    `}\n`;\r\nexport const HiddenCheckbox = styled.input.attrs({ type: 'checkbox' }) `\n  clip: rect(0 0 0 0);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\r\nexport const StyledCheckbox = styled.div `\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 1rem;\n  min-width: 1rem;\n  height: 1rem;\n  font-size: 0.75rem;\n  background-color: ${VARIANT_MAP['default'].backgroundColor};\n  border: 1px solid ${VARIANT_MAP['default'].borderColor};\n  border-radius: 3px;\n  border-color: ${(props) => props.disabled\r\n    ? VARIANT_MAP['disabled'].borderColor\r\n    : VARIANT_MAP['default'].borderColor};\n  color: ${VARIANT_MAP['default'].textColor};\n  ${(props) => `\n    ${props.checked &&\r\n    `background-color: ${VARIANT_MAP['checkedNotDisabled'].backgroundColor};`}\n    ${props.disabled &&\r\n    props.checked &&\r\n    `\n      border-color: ${VARIANT_MAP['checkedAndDisabled'].borderColor};\n      background-color: ${VARIANT_MAP['checkedAndDisabled'].backgroundColor};\n      color: ${VARIANT_MAP['checkedAndDisabled'].textColor};`}\n  `}\n`;\r\n//# sourceMappingURL=LumaCheckbox.style.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/styled-components/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaCheckbox/LumaCheckbox.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/LumaColors/index.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/LumaFonts/LumaFonts.ts"],"map":"{\"version\":3,\"file\":\"LumaCheckbox.style.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components-Luma/components/LumaCheckbox/LumaCheckbox.style.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,MAAM,EAAE,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAC;AAGhD,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAC7C,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AAErD,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE;QACP,SAAS,EAAE,SAAS,CAAC,UAAU;QAC/B,MAAM,EAAE,SAAS;QACjB,WAAW,EAAE,SAAS,CAAC,UAAU;QACjC,eAAe,EAAE,SAAS,CAAC,gBAAgB;KAC5C;IACD,QAAQ,EAAE;QACR,SAAS,EAAE,SAAS,CAAC,UAAU;QAC/B,MAAM,EAAE,SAAS;QACjB,WAAW,EAAE,SAAS,CAAC,UAAU;KAClC;IACD,KAAK,EAAE;QACL,SAAS,EAAE,SAAS,CAAC,UAAU;KAChC;IACD,kBAAkB,EAAE;QAClB,eAAe,EAAE,SAAS,CAAC,UAAU;KACtC;IACD,kBAAkB,EAAE;QAClB,WAAW,EAAE,SAAS,CAAC,UAAU;QACjC,eAAe,EAAE,SAAS,CAAC,UAAU;QACrC,SAAS,EAAE,SAAS,CAAC,UAAU;KAChC;CACO,CAAC;AAEX,MAAM,CAAC,MAAM,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAE5C;;;;;;iBAMgB,QAAQ,CAAC,OAAO,CAAC,OAAO;YAC7B,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM;WAC9B,WAAW,CAAC,SAAS,CAAC,CAAC,SAAS;;aAE9B,WAAW,CAAC,OAAO,CAAC,CAAC,SAAS;;IAEvC,CAAC,KAAK,EAAE,EAAE,CACV,KAAK,CAAC,QAAQ;IACd,GAAG,CAAA;eACQ,WAAW,CAAC,UAAU,CAAC,CAAC,SAAS;gBAChC,WAAW,CAAC,UAAU,CAAC,CAAC,MAAM;KACzC;CACJ,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAA;;;;;;;CAOrE,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,MAAM,CAAC,GAAG,CAEvC;;;;;;;;sBAQqB,WAAW,CAAC,SAAS,CAAC,CAAC,eAAe;sBACtC,WAAW,CAAC,SAAS,CAAC,CAAC,WAAW;;kBAEtC,CAAC,KAAK,EAAE,EAAE,CACxB,KAAK,CAAC,QAAQ;IACZ,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,WAAW;IACrC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,WAAW;WAC/B,WAAW,CAAC,SAAS,CAAC,CAAC,SAAS;IACvC,CAAC,KAAK,EAAE,EAAE,CACV;MAEE,KAAK,CAAC,OAAO;IACb,qBAAqB,WAAW,CAAC,oBAAoB,CAAC,CAAC,eAAe,GACxE;MAEE,KAAK,CAAC,QAAQ;IACd,KAAK,CAAC,OAAO;IACb;sBACgB,WAAW,CAAC,oBAAoB,CAAC,CAAC,WAAW;0BACzC,WAAW,CAAC,oBAAoB,CAAC,CAAC,eAAe;eAC5D,WAAW,CAAC,oBAAoB,CAAC,CAAC,SAAS,GACtD;GACD;CACF,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components-Luma/components/LumaCheckbox/LumaCheckbox.style.d.ts","writeByteOrderMark":false,"text":"import type { CheckboxProps } from './LumaCheckbox';\r\nexport declare const CheckboxContainer: import(\"styled-components\").StyledComponent<\"label\", any, Pick<CheckboxProps, \"checked\" | \"disabled\">, never>;\r\nexport declare const HiddenCheckbox: import(\"styled-components\").StyledComponent<\"input\", any, {\r\n    type: \"checkbox\";\r\n}, \"type\">;\r\nexport declare const StyledCheckbox: import(\"styled-components\").StyledComponent<\"div\", any, Pick<CheckboxProps, \"checked\" | \"disabled\">, never>;\r\n"}}
