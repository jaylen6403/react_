{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport * as React from 'react';\r\nimport { useSelect } from 'downshift';\r\nimport { StyledButton } from './SingleSelect.styles';\r\nimport { Root, Menu, MenuItem, Divider, DropdownIcon, } from '../DropdownBase.styles';\r\nexport function SingleSelect({ ariaLabel, ariaLabelledBy, className, hasIndicator, id, items, onChange, onBlur, variant = 'primary', selectedItem, placeholder, noHighlight, iconCode = 'chevron-down', iconPrefix = 'fal', }) {\r\n    const { isOpen, getToggleButtonProps, getMenuProps, highlightedIndex, getItemProps, selectItem, reset, } = useSelect({\r\n        id,\r\n        items,\r\n        initialSelectedItem: selectedItem,\r\n        onSelectedItemChange({ selectedItem: selectedItemEvent }) {\r\n            onChange === null || onChange === void 0 ? void 0 : onChange(selectedItemEvent);\r\n        },\r\n    });\r\n    React.useEffect(() => {\r\n        if (!selectedItem) {\r\n            reset();\r\n        }\r\n        else {\r\n            selectItem(selectedItem);\r\n        }\r\n    }, [selectedItem, reset, selectItem]);\r\n    const buttonProps = Object.assign({}, getToggleButtonProps());\r\n    return (_jsxs(Root, Object.assign({ className: className, isOpen: isOpen, onBlur: (e) => {\r\n            if (e.relatedTarget && e.relatedTarget === buttonProps.ref.current) {\r\n                return;\r\n            }\r\n            onBlur === null || onBlur === void 0 ? void 0 : onBlur();\r\n        }, variant: variant }, { children: [_jsxs(StyledButton, Object.assign({}, buttonProps, { \"aria-haspopup\": \"menu\", \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, variant: variant }, { children: [(selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.display) || placeholder, hasIndicator && (_jsx(DropdownIcon, { iconCode: iconCode, prefix: iconPrefix }, void 0))] }), void 0), _jsx(Menu, Object.assign({}, getMenuProps(), { \"aria-labelledby\": buttonProps.id }, { children: isOpen &&\r\n                    items.map((item, index) => {\r\n                        const itemProps = getItemProps({\r\n                            item,\r\n                            index,\r\n                            disabled: item.isDisabled,\r\n                        });\r\n                        return (_jsxs(React.Fragment, { children: [_jsx(MenuItem, Object.assign({}, itemProps, { hasSectionBreak: item.hasSectionBreak, isHighlighted: !noHighlight && highlightedIndex === index, variant: variant }, { children: item.display }), void 0), item.hasSectionBreak && _jsx(Divider, {}, void 0)] }, `${item.display}-${index}`));\r\n                    }) }), void 0)] }), void 0));\r\n}\r\n//# sourceMappingURL=SingleSelect.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/downshift/typings/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Dropdown/SingleSelect/SingleSelect.styles.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Dropdown/DropdownBase.types.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Icon/Icon.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Dropdown/DropdownBase.styles.ts"],"map":"{\"version\":3,\"file\":\"SingleSelect.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components/Dropdown/SingleSelect/SingleSelect.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AACtC,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAGrD,OAAO,EACL,IAAI,EACJ,IAAI,EACJ,QAAQ,EAER,OAAO,EACP,YAAY,GACb,MAAM,wBAAwB,CAAC;AAwBhC,MAAM,UAAU,YAAY,CAAI,EAC9B,SAAS,EACT,cAAc,EACd,SAAS,EACT,YAAY,EACZ,EAAE,EACF,KAAK,EACL,QAAQ,EACR,MAAM,EACN,OAAO,GAAG,SAAS,EACnB,YAAY,EACZ,WAAW,EACX,WAAW,EACX,QAAQ,GAAG,cAAc,EACzB,UAAU,GAAG,KAAK,GACG;IACrB,MAAM,EACJ,MAAM,EACN,oBAAoB,EACpB,YAAY,EACZ,gBAAgB,EAChB,YAAY,EACZ,UAAU,EACV,KAAK,GACN,GAAG,SAAS,CAAC;QACZ,EAAE;QACF,KAAK;QACL,mBAAmB,EAAE,YAAY;QACjC,oBAAoB,CAAC,EAAE,YAAY,EAAE,iBAAiB,EAAE;YACtD,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,iBAAiB,CAAC,CAAC;QAChC,CAAC;KACF,CAAC,CAAC;IAEH,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,CAAC,YAAY,EAAE;YACjB,KAAK,EAAE,CAAC;SACT;aAAM;YACL,UAAU,CAAC,YAAY,CAAC,CAAC;SAC1B;IACH,CAAC,EAAE,CAAC,YAAY,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;IAEtC,MAAM,WAAW,qBACZ,oBAAoB,EAAE,CAC1B,CAAC;IAEF,OAAO,CACL,MAAC,IAAI,kBACH,SAAS,EAAE,SAAS,EACpB,MAAM,EAAE,MAAM,EACd,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE;YACZ,IAAI,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC,aAAa,KAAK,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE;gBAClE,OAAO;aACR;YACD,MAAM,aAAN,MAAM,uBAAN,MAAM,EAAI,CAAC;QACb,CAAC,EACD,OAAO,EAAE,OAAO,iBAEhB,MAAC,YAAY,oBACP,WAAW,qBACD,MAAM,gBACR,SAAS,qBACJ,cAAc,EAC/B,OAAO,EAAE,OAAO,iBAEf,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,OAAO,KAAI,WAAW,EACpC,YAAY,IAAI,CACf,KAAC,YAAY,IAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,WAAI,CACzD,aACY,EAEf,KAAC,IAAI,oBAAK,YAAY,EAAE,uBAAmB,WAAW,CAAC,EAAE,gBACtD,MAAM;oBACL,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;wBACxB,MAAM,SAAS,GAAG,YAAY,CAAC;4BAC7B,IAAI;4BACJ,KAAK;4BACL,QAAQ,EAAE,IAAI,CAAC,UAAU;yBAC1B,CAAC,CAAC;wBAEH,OAAO,CACL,MAAC,KAAK,CAAC,QAAQ,eACb,KAAC,QAAQ,oBACH,SAAS,IACb,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,aAAa,EAAE,CAAC,WAAW,IAAI,gBAAgB,KAAK,KAAK,EACzD,OAAO,EAAE,OAAO,gBAEf,IAAI,CAAC,OAAO,YACJ,EAEV,IAAI,CAAC,eAAe,IAAI,KAAC,OAAO,aAAG,KAVjB,GAAG,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE,CAW9B,CAClB,CAAC;oBACJ,CAAC,CAAC,YACC,aACF,CACR,CAAC;AACJ,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components/Dropdown/SingleSelect/SingleSelect.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport { BaseMenuItem } from '../DropdownBase.types';\r\nimport { IconCode } from '../../Icon/Icon';\r\nimport { Variant } from '../DropdownBase.styles';\r\nexport interface MenuItem<T> extends BaseMenuItem {\r\n    value: T;\r\n}\r\ninterface SingleSelectProps<T> {\r\n    ariaLabel?: string;\r\n    ariaLabelledBy?: string;\r\n    className?: string;\r\n    hasIndicator?: boolean;\r\n    id?: string;\r\n    isDisabled?: boolean;\r\n    items: MenuItem<T>[];\r\n    onBlur?: () => void;\r\n    onChange?: (item?: MenuItem<T> | null) => void;\r\n    placeholder: React.ReactNode;\r\n    selectedItem?: MenuItem<T>;\r\n    variant: Variant;\r\n    noHighlight?: boolean;\r\n    iconCode?: IconCode;\r\n    iconPrefix?: 'fal' | 'fas' | 'far';\r\n}\r\nexport declare function SingleSelect<T>({ ariaLabel, ariaLabelledBy, className, hasIndicator, id, items, onChange, onBlur, variant, selectedItem, placeholder, noHighlight, iconCode, iconPrefix, }: SingleSelectProps<T>): JSX.Element;\r\nexport {};\r\n"}}
