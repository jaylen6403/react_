{"code":"import { __rest } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useState } from 'react';\r\nimport { useCombobox } from 'downshift';\r\nimport { TextSearchContainer, InputContainer, HiddenInput, HelperText, SearchIcon, DropDownItemWrapper, DropItem, ClearIcon, } from './LumaTextSearch.style';\r\nimport { LumaStatus } from '../LumaStatus';\r\nimport { LumaIcon } from '../LumaIcon';\r\nimport { LumaDropDownBox } from '../LumaDropdownBox';\r\nexport const RenderContent = ({ item, variant }) => {\r\n    return (_jsxs(DropDownItemWrapper, Object.assign({ variant: variant }, { children: [variant !== 'standard' ? (_jsx(DropItem, Object.assign({ variant: variant }, { children: item === null || item === void 0 ? void 0 : item.id }), void 0)) : null, _jsx(DropItem, Object.assign({ variant: variant }, { children: item === null || item === void 0 ? void 0 : item.label }), void 0)] }), void 0));\r\n};\r\nexport const LumaTextSearch = (_a) => {\r\n    var { id, placeholder = '', className, error, readOnly, fullWidth, disabled, helperText, sizeVariant = 'medium', items = [], handleSelectItem, handleChange, handleBlur, itemToString, inputAriaLabel, buttonAriaLabel, renderContent, variant = 'standard', defaultValue, errorTemplate = (_jsx(LumaStatus, { variant: \"failed\", statusBorder: true, ariaLabel: \"failStatus\" }, void 0)) } = _a, rest = __rest(_a, [\"id\", \"placeholder\", \"className\", \"error\", \"readOnly\", \"fullWidth\", \"disabled\", \"helperText\", \"sizeVariant\", \"items\", \"handleSelectItem\", \"handleChange\", \"handleBlur\", \"itemToString\", \"inputAriaLabel\", \"buttonAriaLabel\", \"renderContent\", \"variant\", \"defaultValue\", \"errorTemplate\"]);\r\n    const [inputValue, setInputValue] = useState(defaultValue || '');\r\n    const [isFocus, setIsFocus] = useState(false);\r\n    const { isOpen, getMenuProps, getInputProps, getComboboxProps, getItemProps, highlightedIndex, reset, } = useCombobox({\r\n        itemToString,\r\n        inputValue,\r\n        items,\r\n        onInputValueChange: ({ inputValue }) => {\r\n            setInputValue(inputValue);\r\n            handleChange === null || handleChange === void 0 ? void 0 : handleChange(inputValue);\r\n            return;\r\n        },\r\n        onSelectedItemChange({ selectedItem: selectedItemEvent }) {\r\n            handleSelectItem === null || handleSelectItem === void 0 ? void 0 : handleSelectItem(selectedItemEvent);\r\n            reset();\r\n        },\r\n    });\r\n    const inputProps = getInputProps({\r\n        'aria-label': inputAriaLabel,\r\n        'aria-labelledby': '',\r\n    });\r\n    return (_jsxs(TextSearchContainer, Object.assign({ sizeVariant: sizeVariant, fullWidth: fullWidth, className: className }, getComboboxProps(), { children: [_jsxs(InputContainer, Object.assign({ sizeVariant: sizeVariant, id: id, error: error, placeholder: placeholder }, { children: [_jsx(SearchIcon, Object.assign({ disabled: disabled }, { children: _jsx(LumaIcon, { iconCode: \"magnifying-glass\" }, void 0) }), void 0), _jsx(HiddenInput, Object.assign({ value: inputValue, placeholder: placeholder, onFocus: () => {\r\n                            setIsFocus(!isFocus);\r\n                        }, onBlur: () => {\r\n                            setIsFocus(!isFocus);\r\n                        }, disabled: disabled, readOnly: readOnly }, inputProps, rest), void 0), inputValue && !readOnly && (_jsx(ClearIcon, Object.assign({ type: \"button\", \"aria-label\": buttonAriaLabel, onClick: () => {\r\n                            reset();\r\n                        } }, { children: _jsx(LumaIcon, { iconCode: \"times\" }, void 0) }), void 0))] }), void 0), helperText && _jsx(HelperText, Object.assign({ error: error }, { children: helperText }), void 0), _jsx(LumaDropDownBox, { size: sizeVariant, isOpen: isOpen, items: items, getMenuProps: getMenuProps, highlightedIndex: highlightedIndex, getItemProps: getItemProps, renderComponent: _jsx(RenderContent, {}, void 0), itemToString: itemToString, variant: variant, id: id, errorTemplate: errorTemplate }, void 0)] }), void 0));\r\n};\r\n//# sourceMappingURL=LumaTextSearch.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/downshift/typings/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaTextSearch/LumaTextSearch.style.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaStatus/index.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaIcon/index.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDropdownBox/index.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDropdown/LumaDropDownBasicType.ts"],"map":"{\"version\":3,\"file\":\"LumaTextSearch.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components-Luma/components/LumaTextSearch/LumaTextSearch.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components-Luma/components/LumaTextSearch/LumaTextSearch.d.ts","writeByteOrderMark":false,"text":"import { ReactElement, FocusEvent } from 'react';\r\nimport { SIZE_MAP } from './LumaTextSearch.style';\r\nimport { DataItemProps, TextSearchItem } from '../LumaDropdown/LumaDropDownBasicType';\r\nexport interface TextSearchProps<Item> {\r\n    /**Give a unique id for the field */\r\n    id: string;\r\n    /**ClassName is the normal class */\r\n    className?: string;\r\n    /**Error will act when user need to show validation error */\r\n    error?: boolean;\r\n    /**helperText will show a label below the box for showing information or error message */\r\n    helperText?: string;\r\n    /**component will be readonly*/\r\n    readOnly?: boolean;\r\n    /**fullwidth will make the field 100% width  */\r\n    fullWidth?: boolean;\r\n    /**disabled will disable the field\r\n     * @default false\r\n     */\r\n    disabled?: boolean;\r\n    /**size will make the field small, medium or large size\r\n     * @default medium\r\n     */\r\n    sizeVariant?: keyof typeof SIZE_MAP;\r\n    /**act like a placeholder */\r\n    placeholder?: string;\r\n    /**data array for dropdown */\r\n    items: Item[];\r\n    /**action item selection a dropdown */\r\n    handleSelectItem?: (item: Item | null | undefined) => void;\r\n    /**action item on change item */\r\n    handleChange?: (value: string | undefined) => void;\r\n    /**action item on blur*/\r\n    handleBlur?: (e: FocusEvent<HTMLInputElement>) => void;\r\n    /**action to output string */\r\n    itemToString?: (item: DataItemProps | TextSearchItem | null) => string;\r\n    /**Template of the dropdown item */\r\n    renderContent: ReactElement<{\r\n        item: Item;\r\n    }>;\r\n    /**Input box aria label */\r\n    inputAriaLabel: string;\r\n    /**button box aria label */\r\n    buttonAriaLabel: string;\r\n    /**variant: this props will change dropdown result\r\n     * Two main format of dropdown result will be:\r\n     * standard:\r\n     * -------------------------\r\n     * -- <option>            --\r\n     * -- <option>            --\r\n     * -------------------------\r\n     * underlier:\r\n     * -------------------------\r\n     * -- xxxxxx | <option>   --\r\n     * -- xxxxxx | <option>   --\r\n     * -------------------------\r\n     * @default standard\r\n     */\r\n    variant?: 'standard' | 'underlier';\r\n    /**ErrorMessage Template */\r\n    errorTemplate?: ReactElement;\r\n    /**Default value that will be shown in Text Search*/\r\n    defaultValue?: string;\r\n}\r\ndeclare type RenderContentProps = {\r\n    item?: {\r\n        label: string;\r\n        id: string;\r\n    };\r\n    variant?: 'standard' | 'underlier';\r\n};\r\nexport declare const RenderContent: ({ item, variant }: RenderContentProps) => JSX.Element;\r\nexport declare const LumaTextSearch: <Item>({ id, placeholder, className, error, readOnly, fullWidth, disabled, helperText, sizeVariant, items, handleSelectItem, handleChange, handleBlur, itemToString, inputAriaLabel, buttonAriaLabel, renderContent, variant, defaultValue, errorTemplate, ...rest }: TextSearchProps<Item>) => JSX.Element;\r\nexport {};\r\n"}}
