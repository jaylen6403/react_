{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Portal } from '../Portal/Portal';\r\nimport { DrawerBackground, CloseIcon, DrawerContainer, CloseIconWrapper, } from './Drawer.styles';\r\nexport const Drawer = ({ id, children, isOpen = false, closeDrawer = () => {\r\n    /* do nothing */\r\n}, hasOverlay = true, }) => {\r\n    const [onToggle, setOnToggle] = useState(false);\r\n    const reqElement = useRef(null);\r\n    const escFunction = (event) => {\r\n        event.key === 'Escape' && animateCloseDrawer();\r\n    };\r\n    const clickBackground = (event) => {\r\n        const target = event.target;\r\n        if (target.children[0] === reqElement.current) {\r\n            animateCloseDrawer();\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        setOnToggle(isOpen);\r\n    }, [isOpen]);\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', escFunction, false);\r\n        return () => {\r\n            document.removeEventListener('keydown', escFunction, false);\r\n        };\r\n    });\r\n    const animateCloseDrawer = () => {\r\n        /* this function allows for the animation to complete before the drawer closes */\r\n        setOnToggle(false);\r\n        setTimeout(() => closeDrawer(), 300);\r\n    };\r\n    return (_jsx(Portal, Object.assign({ id: id }, { children: _jsx(DrawerBackground, Object.assign({ hasOverlay: hasOverlay, isOpen: isOpen, onClick: (event) => clickBackground(event) }, { children: _jsxs(DrawerContainer, Object.assign({ onToggle: onToggle, ref: reqElement }, { children: [_jsx(CloseIconWrapper, Object.assign({ onClick: animateCloseDrawer }, { children: _jsx(CloseIcon, { iconCode: \"close\" }, void 0) }), void 0), children] }), void 0) }), void 0) }), void 0));\r\n};\r\n//# sourceMappingURL=Drawer.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Portal/Portal.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Drawer/Drawer.styles.ts"],"map":"{\"version\":3,\"file\":\"Drawer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../libs/design-system/src/lib/components/Drawer/Drawer.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAa,SAAS,EAAE,MAAM,EAAc,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC3E,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EACL,gBAAgB,EAChB,SAAS,EACT,eAAe,EACf,gBAAgB,GACjB,MAAM,iBAAiB,CAAC;AAUzB,MAAM,CAAC,MAAM,MAAM,GAAG,CAAC,EACrB,EAAE,EACF,QAAQ,EACR,MAAM,GAAG,KAAK,EACd,WAAW,GAAG,GAAG,EAAE;IACjB,gBAAgB;AAClB,CAAC,EACD,UAAU,GAAG,IAAI,GACL,EAAE,EAAE;IAChB,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAChD,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAChC,MAAM,WAAW,GAAG,CAAC,KAAoB,EAAQ,EAAE;QACjD,KAAK,CAAC,GAAG,KAAK,QAAQ,IAAI,kBAAkB,EAAE,CAAC;IACjD,CAAC,CAAC;IAEF,MAAM,eAAe,GAAG,CAAC,KAAiC,EAAQ,EAAE;QAClE,MAAM,MAAM,GAAG,KAAK,CAAC,MAAwB,CAAC;QAC9C,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,OAAO,EAAE;YAC7C,kBAAkB,EAAE,CAAC;SACtB;IACH,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,WAAW,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAEb,SAAS,CAAC,GAAG,EAAE;QACb,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;QACzD,OAAO,GAAS,EAAE;YAChB,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;QAC9D,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IACH,MAAM,kBAAkB,GAAG,GAAG,EAAE;QAC9B,iFAAiF;QACjF,WAAW,CAAC,KAAK,CAAC,CAAC;QACnB,UAAU,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE,EAAE,GAAG,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,OAAO,CACL,KAAC,MAAM,kBAAC,EAAE,EAAE,EAAE,gBACZ,KAAC,gBAAgB,kBACf,UAAU,EAAE,UAAU,EACtB,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC,gBAE1C,MAAC,eAAe,kBAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,UAAU,iBAClD,KAAC,gBAAgB,kBAAC,OAAO,EAAE,kBAAkB,gBAC3C,KAAC,SAAS,IAAC,QAAQ,EAAC,OAAO,WAAG,YACb,EAClB,QAAQ,aACO,YACD,YACZ,CACV,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components/Drawer/Drawer.d.ts","writeByteOrderMark":false,"text":"import { ReactNode } from 'react';\r\ninterface DrawerProps {\r\n    id?: string;\r\n    children: ReactNode;\r\n    isOpen: boolean;\r\n    closeDrawer?: () => void;\r\n    hasOverlay?: boolean;\r\n}\r\nexport declare const Drawer: ({ id, children, isOpen, closeDrawer, hasOverlay, }: DrawerProps) => JSX.Element;\r\nexport {};\r\n"}}
