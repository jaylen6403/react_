{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useRef, useState } from 'react';\r\nimport { ValidUntilButton, ValidUntilInput } from './LumaValidUntil.styles';\r\nexport function LumaValidUntil({ onChange, inputDataTestId = 'input-valid_until', buttonDataTestId = 'button-valid_until', }) {\r\n    const [focus, setFocus] = useState(false);\r\n    const [validUntil, setValidUntil] = useState(null);\r\n    const inputRef = useRef(document.createElement('input'));\r\n    return focus ? (_jsx(ValidUntilInput, { type: \"number\", ref: inputRef, \"data-testid\": inputDataTestId, value: validUntil !== null && validUntil !== void 0 ? validUntil : '', min: \"0\", onFocus: () => setFocus(true), onBlur: () => setFocus(false), onKeyDown: (event) => {\r\n            if (event.key === 'Enter') {\r\n                const value = inputRef.current.value;\r\n                setValidUntil(value ? Number(value) : null);\r\n                onChange(value ? Number(value) : undefined);\r\n                setFocus(false);\r\n            }\r\n        }, onChange: (event) => {\r\n            const value = event.target.value;\r\n            setValidUntil(value ? Number(value) : null);\r\n            onChange(value ? Number(value) : undefined);\r\n        } }, void 0)) : (_jsx(ValidUntilButton, Object.assign({ \"data-testid\": buttonDataTestId, onClick: () => {\r\n            setFocus(true);\r\n            setTimeout(() => { var _a; return (_a = inputRef === null || inputRef === void 0 ? void 0 : inputRef.current) === null || _a === void 0 ? void 0 : _a.focus(); }, 0);\r\n        } }, { children: (validUntil || validUntil === 0) && _jsxs(\"span\", { children: [validUntil, \" minutes\"] }, void 0) }), void 0));\r\n}\r\n//# sourceMappingURL=LumaValidUntil.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaValidUntil/LumaValidUntil.styles.tsx"],"map":"{\"version\":3,\"file\":\"LumaValidUntil.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components-Luma/components/LumaValidUntil/LumaValidUntil.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,EAAE,gBAAgB,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAS5E,MAAM,UAAU,cAAc,CAAC,EAC7B,QAAQ,EACR,eAAe,GAAG,mBAAmB,EACrC,gBAAgB,GAAG,oBAAoB,GACnB;IACpB,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAC;IAClE,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;IAEzD,OAAO,KAAK,CAAC,CAAC,CAAC,CACb,KAAC,eAAe,IACd,IAAI,EAAC,QAAQ,EACb,GAAG,EAAE,QAAQ,iBACA,eAAe,EAC5B,KAAK,EAAE,UAAU,aAAV,UAAU,cAAV,UAAU,GAAI,EAAE,EACvB,GAAG,EAAC,GAAG,EACP,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAC7B,MAAM,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,EAC7B,SAAS,EAAE,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;gBACzB,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;gBACrC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAC5C,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBAC5C,QAAQ,CAAC,KAAK,CAAC,CAAC;aACjB;QACH,CAAC,EACD,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE;YAClB,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YACjC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAC9C,CAAC,WACD,CACH,CAAC,CAAC,CAAC,CACF,KAAC,gBAAgB,iCACF,gBAAgB,EAC7B,OAAO,EAAE,GAAG,EAAE;YACZ,QAAQ,CAAC,IAAI,CAAC,CAAC;YACf,UAAU,CAAC,GAAG,EAAE,WAAC,OAAA,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,0CAAE,KAAK,EAAE,CAAA,EAAA,EAAE,CAAC,CAAC,CAAC;QAClD,CAAC,gBAEA,CAAC,UAAU,IAAI,UAAU,KAAK,CAAC,CAAC,IAAI,2BAAO,UAAU,wBAAgB,YACrD,CACpB,CAAC;AACJ,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components-Luma/components/LumaValidUntil/LumaValidUntil.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nexport declare type LumaValidUntilProps = {\r\n    /** Callback with entered minutes passed in as argument */\r\n    onChange: (validUntil: number | undefined) => void;\r\n    inputDataTestId?: string;\r\n    buttonDataTestId?: string;\r\n};\r\nexport declare function LumaValidUntil({ onChange, inputDataTestId, buttonDataTestId, }: LumaValidUntilProps): JSX.Element;\r\n"}}
