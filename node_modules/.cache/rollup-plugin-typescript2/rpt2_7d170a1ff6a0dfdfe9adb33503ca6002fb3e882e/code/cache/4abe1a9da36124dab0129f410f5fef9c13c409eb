{"code":"import { __assign } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useEffect } from 'react';\r\nimport { MessageCol, MessageStyle, MessageContent, MessageTitle, MessageColoredIcon, MessageExitIcon, FlatXButton, } from './Message.style';\r\nexport var Message = function (_a) {\r\n    var \r\n    /**\r\n     * Title of the message\r\n     */\r\n    title = _a.title, \r\n    /**\r\n     * Description of the message (optional)\r\n     */\r\n    description = _a.description, \r\n    /**\r\n     * If true, hide the message. By default: false\r\n     */\r\n    _b = _a.showMessage, \r\n    /**\r\n     * If true, hide the message. By default: false\r\n     */\r\n    showMessage = _b === void 0 ? false : _b, setShowMessage = _a.setShowMessage, \r\n    /**\r\n     * In seconds. By default: 3 seconds (subject to change)\r\n     */\r\n    _c = _a.timer, \r\n    /**\r\n     * In seconds. By default: 3 seconds (subject to change)\r\n     */\r\n    timer = _c === void 0 ? 3 : _c, \r\n    /**\r\n     * Message Type will decide the style of the Message:\r\n     *  (Default) info: Blue Message\r\n     *  success: Green Message\r\n     *  warn: Yellow Message\r\n     *  error: Red Message\r\n     */\r\n    _d = _a.messageType, \r\n    /**\r\n     * Message Type will decide the style of the Message:\r\n     *  (Default) info: Blue Message\r\n     *  success: Green Message\r\n     *  warn: Yellow Message\r\n     *  error: Red Message\r\n     */\r\n    messageType = _d === void 0 ? 'info' : _d;\r\n    var iconCode = {\r\n        info: 'circle-check',\r\n        success: 'circle-check',\r\n        error: 'circle-xmark',\r\n        warn: 'circle-exclamation',\r\n    }[messageType];\r\n    // if message shouldn't be off, start timer\r\n    useEffect(function () {\r\n        var timeout = setTimeout(function () { return setShowMessage(false); }, timer * 1000);\r\n        return function () { return clearTimeout(timeout); };\r\n    }, [showMessage, timer, setShowMessage]);\r\n    if (!showMessage)\r\n        return null;\r\n    return (_jsxs(MessageStyle, __assign({ messageType: messageType }, { children: [_jsx(MessageColoredIcon, { iconCode: iconCode }, void 0), _jsxs(MessageCol, __assign({ role: \"alert\" }, { children: [_jsx(MessageTitle, { children: title }, void 0), description ? _jsx(MessageContent, { children: description }, void 0) : null] }), void 0), _jsx(FlatXButton, __assign({ onClick: function () { return setShowMessage(false); } }, { children: _jsx(MessageExitIcon, { iconCode: \"times\" }, void 0) }), void 0)] }), void 0));\r\n};\r\n//# sourceMappingURL=Message.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Icon/Icon.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Message/Message.style.ts"],"map":"{\"version\":3,\"file\":\"Message.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../libs/design-system/src/lib/components/Message/Message.tsx\"],\"names\":[],\"mappings\":\";;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,OAAO,EACL,UAAU,EACV,YAAY,EACZ,cAAc,EACd,YAAY,EACZ,kBAAkB,EAClB,eAAe,EACf,WAAW,GACZ,MAAM,iBAAiB,CAAC;AAazB,MAAM,CAAC,IAAM,OAAO,GAAG,UAAC,EA0BT;;IAzBb;;OAEG;IACH,KAAK,WAAA;IACL;;OAEG;IACH,WAAW,iBAAA;IACX;;OAEG;IACH,mBAAmB;IAHnB;;OAEG;IACH,WAAW,mBAAG,KAAK,KAAA,EACnB,cAAc,oBAAA;IACd;;OAEG;IACH,aAAS;IAHT;;OAEG;IACH,KAAK,mBAAG,CAAC,KAAA;IACT;;;;;;OAMG;IACH,mBAAoB;IAPpB;;;;;;OAMG;IACH,WAAW,mBAAG,MAAM,KAAA;IAEpB,IAAM,QAAQ,GAAa;QACzB,IAAI,EAAE,cAAc;QACpB,OAAO,EAAE,cAAc;QACvB,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,oBAAoB;KAC3B,CAAC,WAAW,CAAa,CAAC;IAC3B,2CAA2C;IAC3C,SAAS,CAAC;QACR,IAAM,OAAO,GAAG,UAAU,CAAC,cAAM,OAAA,cAAc,CAAC,KAAK,CAAC,EAArB,CAAqB,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;QACtE,OAAO,cAAM,OAAA,YAAY,CAAC,OAAO,CAAC,EAArB,CAAqB,CAAC;IACrC,CAAC,EAAE,CAAC,WAAW,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC;IACzC,IAAI,CAAC,WAAW;QAAE,OAAO,IAAI,CAAC;IAC9B,OAAO,CACL,MAAC,YAAY,aAAC,WAAW,EAAE,WAAW,iBACpC,KAAC,kBAAkB,IAAC,QAAQ,EAAE,QAAQ,WAAI,EAC1C,MAAC,UAAU,aAAC,IAAI,EAAC,OAAO,iBACtB,KAAC,YAAY,cAAE,KAAK,WAAgB,EACnC,WAAW,CAAC,CAAC,CAAC,KAAC,cAAc,cAAE,WAAW,WAAkB,CAAC,CAAC,CAAC,IAAI,aACzD,EACb,KAAC,WAAW,aAAC,OAAO,EAAE,cAAM,OAAA,cAAc,CAAC,KAAK,CAAC,EAArB,CAAqB,gBAC/C,KAAC,eAAe,IAAC,QAAQ,EAAC,OAAO,WAAG,YACxB,aACD,CAChB,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components/Message/Message.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nexport declare type MessageType = 'info' | 'success' | 'error' | 'warn';\r\nexport interface MessageProps {\r\n    title: string;\r\n    showMessage: boolean;\r\n    setShowMessage: (value: boolean) => void;\r\n    messageType?: MessageType;\r\n    description?: string;\r\n    timer?: number;\r\n}\r\nexport declare const Message: ({ title, description, showMessage, setShowMessage, timer, messageType, }: MessageProps) => JSX.Element | null;\r\n"}}
