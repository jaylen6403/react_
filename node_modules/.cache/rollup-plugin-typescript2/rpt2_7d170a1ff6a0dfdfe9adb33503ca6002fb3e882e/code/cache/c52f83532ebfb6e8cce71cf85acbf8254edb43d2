{"code":"import { __assign, __spreadArray } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport * as React from 'react';\r\nimport { useMultipleSelection, useSelect } from 'downshift';\r\nimport { Button, Divider, DropdownIcon, Menu, MenuItem, Root, } from '../DropdownBase.styles';\r\nimport { CheckboxIcon } from './MultiSelect.styles';\r\nexport function MultiSelect(_a) {\r\n    var _b = _a.actions, actions = _b === void 0 ? [] : _b, ariaLabel = _a.ariaLabel, ariaLabelledBy = _a.ariaLabelledBy, className = _a.className, hasIndicator = _a.hasIndicator, id = _a.id, isDisabled = _a.isDisabled, items = _a.items, onBlur = _a.onBlur, onChange = _a.onChange, placeholder = _a.placeholder, selectedItems = _a.selectedItems, _c = _a.variant, variant = _c === void 0 ? 'primary' : _c;\r\n    var allItems = React.useMemo(function () { return __spreadArray(__spreadArray([], actions, true), items, true); }, [actions, items]);\r\n    var _d = useMultipleSelection({\r\n        selectedItems: selectedItems,\r\n    }), getDropdownProps = _d.getDropdownProps, setSelectedItems = _d.setSelectedItems;\r\n    React.useEffect(function () {\r\n        setSelectedItems(selectedItems);\r\n    }, [setSelectedItems, selectedItems]);\r\n    var selectedItemsSet = React.useMemo(function () { return new Set(selectedItems); }, [selectedItems]);\r\n    var handleChange = React.useCallback(function (selectedItem) {\r\n        if (!onChange || (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.onClick)) {\r\n            return;\r\n        }\r\n        if (selectedItemsSet.has(selectedItem)) {\r\n            selectedItemsSet.delete(selectedItem);\r\n        }\r\n        else {\r\n            selectedItemsSet.add(selectedItem);\r\n        }\r\n        onChange(Array.from(selectedItemsSet), selectedItem);\r\n    }, [onChange, selectedItemsSet]);\r\n    var handleChangeRef = React.useRef(handleChange);\r\n    React.useEffect(function () {\r\n        handleChangeRef.current = handleChange;\r\n    }, [handleChange]);\r\n    var _e = useSelect({\r\n        selectedItem: null,\r\n        id: id,\r\n        items: allItems,\r\n        stateReducer: function (state, actionAndChanges) {\r\n            var changes = actionAndChanges.changes, type = actionAndChanges.type;\r\n            switch (type) {\r\n                case useSelect.stateChangeTypes.MenuKeyDownEnter:\r\n                case useSelect.stateChangeTypes.MenuKeyDownSpaceButton:\r\n                case useSelect.stateChangeTypes.ItemClick: {\r\n                    return __assign(__assign({}, state), { selectedItem: changes.selectedItem, isOpen: true });\r\n                }\r\n            }\r\n            return __assign(__assign({}, state), changes);\r\n        },\r\n        onStateChange: function (_a) {\r\n            var type = _a.type, selectedItem = _a.selectedItem;\r\n            switch (type) {\r\n                case useSelect.stateChangeTypes.MenuKeyDownEnter:\r\n                case useSelect.stateChangeTypes.MenuKeyDownSpaceButton:\r\n                case useSelect.stateChangeTypes.ItemClick: {\r\n                    if (!selectedItem) {\r\n                        return;\r\n                    }\r\n                    if (selectedItem.onClick) {\r\n                        return selectedItem.onClick();\r\n                    }\r\n                    handleChangeRef.current(selectedItem);\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        },\r\n    }), isOpen = _e.isOpen, getToggleButtonProps = _e.getToggleButtonProps, getMenuProps = _e.getMenuProps, highlightedIndex = _e.highlightedIndex, getItemProps = _e.getItemProps;\r\n    var buttonProps = __assign({}, getToggleButtonProps(getDropdownProps({ disabled: isDisabled, preventKeyAction: isOpen })));\r\n    return (_jsxs(Root, __assign({ className: className, isOpen: isOpen, onBlur: function (e) {\r\n            if (e.relatedTarget && e.relatedTarget === buttonProps.ref.current) {\r\n                return;\r\n            }\r\n            onBlur === null || onBlur === void 0 ? void 0 : onBlur();\r\n        }, variant: variant }, { children: [_jsxs(Button, __assign({}, buttonProps, { \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy }, { children: [placeholder, hasIndicator && _jsx(DropdownIcon, { iconCode: \"chevron-down\" }, void 0)] }), void 0), _jsx(Menu, __assign({}, getMenuProps(), { \"aria-labelledby\": buttonProps.id }, { children: isOpen &&\r\n                    allItems.map(function (item, index) {\r\n                        var isAction = item.onClick;\r\n                        return (_jsxs(React.Fragment, { children: [_jsxs(MenuItem, __assign({}, getItemProps({\r\n                                    item: item,\r\n                                    index: index,\r\n                                    disabled: item.isDisabled,\r\n                                }), { alignment: item.alignment, hasSectionBreak: item.hasSectionBreak, isAction: isAction, isHighlighted: highlightedIndex === index, variant: variant, width: item.width }, { children: [!isAction && (_jsx(CheckboxIcon, { iconCode: selectedItemsSet.has(item) ? 'check-square' : 'square' }, void 0)), item.display] }), void 0), item.hasSectionBreak && _jsx(Divider, {}, void 0)] }, \"\".concat(item.display, \"-\").concat(index)));\r\n                    }) }), void 0)] }), void 0));\r\n}\r\n//# sourceMappingURL=MultiSelect.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/downshift/typings/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Dropdown/DropdownBase.styles.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Dropdown/DropdownBase.types.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Dropdown/MultiSelect/MultiSelect.styles.ts"],"map":"{\"version\":3,\"file\":\"MultiSelect.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components/Dropdown/MultiSelect/MultiSelect.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components/Dropdown/MultiSelect/MultiSelect.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport { Variant } from '../DropdownBase.styles';\r\nimport { BaseMenuItem } from '../DropdownBase.types';\r\nexport interface MenuItem<T> extends BaseMenuItem {\r\n    /**\r\n     * Text alignment.\r\n     */\r\n    alignment?: 'left' | 'center' | 'right';\r\n    /**\r\n     * Only for Action Links - Click handler for that action link.\r\n     */\r\n    onClick?: () => void;\r\n    /**\r\n     * Meta data to be attached to an item.\r\n     */\r\n    meta?: T;\r\n    /**\r\n     * Width of the item.\r\n     */\r\n    width?: string;\r\n}\r\ninterface MultiSelectProps<T> {\r\n    /**\r\n     * Action links to be rendered on top of checkboxes.\r\n     */\r\n    actions?: MenuItem<T>[];\r\n    /**\r\n     * Aria label for the select button in case id is not passed and linked aria-labelledby.\r\n     */\r\n    ariaLabel?: string;\r\n    /**\r\n     * Aria labelledby.\r\n     */\r\n    ariaLabelledBy?: string;\r\n    /**\r\n     * Available className to be attached to the root element.\r\n     */\r\n    className?: string;\r\n    /**\r\n     * Option to include the chevron indicator.\r\n     */\r\n    hasIndicator?: boolean;\r\n    /**\r\n     * Id to be attached to a button.\r\n     */\r\n    id?: string;\r\n    /**\r\n     * Disable the select button.\r\n     */\r\n    isDisabled?: boolean;\r\n    /**\r\n     * Multi-select checkbox items.\r\n     */\r\n    items: MenuItem<T>[];\r\n    /**\r\n     * Handler for blur event.\r\n     */\r\n    onBlur?: () => void;\r\n    /**\r\n     * Handler for change event which includes the suggested list of items and the item clicked.\r\n     */\r\n    onChange?: (items: MenuItem<T>[], meta: MenuItem<T>) => void;\r\n    /**\r\n     * Text for select button.\r\n     */\r\n    placeholder: React.ReactNode;\r\n    /**\r\n     * List of selected items to be checked.\r\n     */\r\n    selectedItems: MenuItem<T>[];\r\n    /**\r\n     * Style variant.\r\n     */\r\n    variant: Variant;\r\n}\r\nexport declare function MultiSelect<T>({ actions, ariaLabel, ariaLabelledBy, className, hasIndicator, id, isDisabled, items, onBlur, onChange, placeholder, selectedItems, variant, }: MultiSelectProps<T>): JSX.Element;\r\nexport {};\r\n"}}
