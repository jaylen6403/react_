{"code":"import { __assign, __rest } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { CheckboxContainer, StyledCheckbox, HiddenCheckbox, } from './LumaCheckbox.style';\r\nimport { LumaIcon } from '../LumaIcon';\r\nexport var LumaCheckbox = function (_a) {\r\n    var label = _a.label, _b = _a.disabled, disabled = _b === void 0 ? false : _b, _c = _a.checked, checked = _c === void 0 ? false : _c, checkboxKey = _a.checkboxKey, onChange = _a.onChange, rest = __rest(_a, [\"label\", \"disabled\", \"checked\", \"checkboxKey\", \"onChange\"]);\r\n    return (_jsxs(CheckboxContainer, __assign({ disabled: disabled, checked: checked, htmlFor: \"checkbox \".concat(checkboxKey) }, { children: [_jsx(HiddenCheckbox, __assign({ type: \"checkbox\", checked: checked, onChange: onChange, disabled: disabled, id: \"checkbox \".concat(checkboxKey) }, rest), checkboxKey), _jsx(StyledCheckbox, __assign({ checked: checked, disabled: disabled }, { children: checked && _jsx(LumaIcon, { iconCode: 'check' }, void 0) }), void 0), label] }), checkboxKey));\r\n};\r\n//# sourceMappingURL=LumaCheckbox.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaCheckbox/LumaCheckbox.style.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaIcon/index.ts"],"map":"{\"version\":3,\"file\":\"LumaCheckbox.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components-Luma/components/LumaCheckbox/LumaCheckbox.tsx\"],\"names\":[],\"mappings\":\";;AAAA,OAAO,EACL,iBAAiB,EACjB,cAAc,EACd,cAAc,GACf,MAAM,sBAAsB,CAAC;AAC9B,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAyBvC,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,EAOb;IANd,IAAA,KAAK,WAAA,EACL,gBAAgB,EAAhB,QAAQ,mBAAG,KAAK,KAAA,EAChB,eAAe,EAAf,OAAO,mBAAG,KAAK,KAAA,EACf,WAAW,iBAAA,EACX,QAAQ,cAAA,EACL,IAAI,cANoB,2DAO5B,CADQ;IAEP,OAAO,CACL,MAAC,iBAAiB,aAChB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAEhB,OAAO,EAAE,mBAAY,WAAW,CAAE,iBAElC,KAAC,cAAc,aACb,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,EAClB,EAAE,EAAE,mBAAY,WAAW,CAAE,IAEzB,IAAI,GADH,WAAW,CAEhB,EACF,KAAC,cAAc,aAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,gBACjD,OAAO,IAAI,KAAC,QAAQ,IAAC,QAAQ,EAAE,OAAO,WAAI,YAC5B,EAChB,KAAK,MAfD,WAAW,CAgBE,CACrB,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components-Luma/components/LumaCheckbox/LumaCheckbox.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nexport interface CheckboxProps extends React.HTMLAttributes<HTMLInputElement> {\r\n    /**\r\n     * The label that is rendered to the right of the checkbox marker.\r\n     */\r\n    label?: React.ReactNode;\r\n    /**\r\n     * Determines whether the checkbox is disabled.\r\n     */\r\n    disabled?: boolean;\r\n    /**\r\n     * Determines whether the checkbox is checked.\r\n     */\r\n    checked?: boolean;\r\n    /**\r\n     * React key prop from checkbox.\r\n     */\r\n    checkboxKey: string;\r\n    /**\r\n     * onChange action on checkbox.\r\n     */\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\nexport declare const LumaCheckbox: ({ label, disabled, checked, checkboxKey, onChange, ...rest }: CheckboxProps) => JSX.Element;\r\n"}}
