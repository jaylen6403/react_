{"code":"import { __assign } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useSelect } from 'downshift';\r\nimport { MobileTabButton, MobileDropdownWrapper, MobileListButton, MobileListWrapper, MobileTabWrapper, DropdownIcon, } from './ProfileMobileDropdown.styles';\r\nexport var ProfileMobileDropdown = function (_a) {\r\n    var userName = _a.userName, items = _a.items, activeMobileDropdown = _a.activeMobileDropdown, setActiveMobileDropdown = _a.setActiveMobileDropdown, variantType = _a.variantType;\r\n    var _b = useSelect({\r\n        items: items,\r\n    }), getToggleButtonProps = _b.getToggleButtonProps, getMenuProps = _b.getMenuProps, getItemProps = _b.getItemProps;\r\n    var buttonProps = __assign({}, getToggleButtonProps());\r\n    var menuProps = __assign({}, getMenuProps({}, { suppressRefError: true }));\r\n    var dropdownOpen = activeMobileDropdown === 'profile';\r\n    var dropdownButtonClick = function (name) {\r\n        if (setActiveMobileDropdown) {\r\n            if (dropdownOpen) {\r\n                setActiveMobileDropdown(null);\r\n            }\r\n            else {\r\n                setActiveMobileDropdown(name);\r\n            }\r\n        }\r\n    };\r\n    return (_jsxs(\"div\", { children: [_jsx(MobileTabWrapper, __assign({ variantType: variantType, dropdownActive: dropdownOpen }, { children: _jsxs(MobileTabButton, __assign({}, buttonProps, { onClick: function () { return dropdownButtonClick('profile'); }, variantType: variantType, isDropdown: dropdownOpen, isActive: dropdownOpen }, { children: [\"PROFILE\", _jsx(DropdownIcon, { iconCode: dropdownOpen ? 'angle-up' : 'angle-down', prefix: \"far\", variantType: variantType }, void 0)] }), void 0) }), void 0), dropdownOpen ? (_jsx(MobileDropdownWrapper, __assign({ variantType: variantType }, menuProps, { role: \"menu\" }, { children: dropdownOpen &&\r\n                    items.map(function (item, index) {\r\n                        var itemProps = getItemProps({\r\n                            item: item,\r\n                            index: index,\r\n                        });\r\n                        if (item.showItem) {\r\n                            return (_jsx(MobileListWrapper, { children: _jsx(MobileListButton, __assign({}, itemProps, { onClick: item.onClick, disabled: item.disabled, \"aria-selected\": undefined, variantType: variantType, isDropdown: true, role: \"menuitem\", isUsername: item.name === userName }, { children: item.name }), void 0) }, \"\".concat(new Date().getTime()).concat(item).concat(index)));\r\n                        }\r\n                        else {\r\n                            return null;\r\n                        }\r\n                    }) }), void 0)) : null] }, void 0));\r\n};\r\n//# sourceMappingURL=ProfileMobileDropdown.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/downshift/typings/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/index.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/ProfileMobileDropdown/ProfileMobileDropdown.styles.ts"],"map":"{\"version\":3,\"file\":\"ProfileMobileDropdown.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components/GlobalNav/ProfileMobileDropdown/ProfileMobileDropdown.tsx\"],\"names\":[],\"mappings\":\";;AACA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAItC,OAAO,EACL,eAAe,EACf,qBAAqB,EACrB,gBAAgB,EAChB,iBAAiB,EACjB,gBAAgB,EAChB,YAAY,GACb,MAAM,gCAAgC,CAAC;AAexC,MAAM,CAAC,IAAM,qBAAqB,GAAG,UAAC,EAM9B;QALN,QAAQ,cAAA,EACR,KAAK,WAAA,EACL,oBAAoB,0BAAA,EACpB,uBAAuB,6BAAA,EACvB,WAAW,iBAAA;IAEL,IAAA,KAAuD,SAAS,CAAC;QACrE,KAAK,OAAA;KACN,CAAC,EAFM,oBAAoB,0BAAA,EAAE,YAAY,kBAAA,EAAE,YAAY,kBAEtD,CAAC;IACH,IAAM,WAAW,gBACZ,oBAAoB,EAAE,CAC1B,CAAC;IACF,IAAM,SAAS,gBAAQ,YAAY,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAE,CAAC;IACtE,IAAM,YAAY,GAAG,oBAAoB,KAAK,SAAS,CAAC;IAExD,IAAM,mBAAmB,GAAG,UAAC,IAAY;QACvC,IAAI,uBAAuB,EAAE;YAC3B,IAAI,YAAY,EAAE;gBAChB,uBAAuB,CAAC,IAAI,CAAC,CAAC;aAC/B;iBAAM;gBACL,uBAAuB,CAAC,IAAI,CAAC,CAAC;aAC/B;SACF;IACH,CAAC,CAAC;IACF,OAAO,CACL,0BACE,KAAC,gBAAgB,aAAC,WAAW,EAAE,WAAW,EAAE,cAAc,EAAE,YAAY,gBACtE,MAAC,eAAe,eACV,WAAW,IACf,OAAO,EAAE,cAAM,OAAA,mBAAmB,CAAC,SAAS,CAAC,EAA9B,CAA8B,EAC7C,WAAW,EAAE,WAAW,EACxB,UAAU,EAAE,YAAY,EACxB,QAAQ,EAAE,YAAY,4BAGtB,KAAC,YAAY,IACX,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,EAClD,MAAM,EAAC,KAAK,EACZ,WAAW,EAAE,WAAW,WACxB,aACc,YACD,EAClB,YAAY,CAAC,CAAC,CAAC,CACd,KAAC,qBAAqB,aACpB,WAAW,EAAE,WAAW,IACpB,SAAS,IACb,IAAI,EAAC,MAAM,gBAEV,YAAY;oBACX,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK;wBACpB,IAAM,SAAS,GAAG,YAAY,CAAC;4BAC7B,IAAI,MAAA;4BACJ,KAAK,OAAA;yBACN,CAAC,CAAC;wBACH,IAAI,IAAI,CAAC,QAAQ,EAAE;4BACjB,OAAO,CACL,KAAC,iBAAiB,cAGhB,KAAC,gBAAgB,eACX,SAAS,IACb,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ,mBACR,SAAS,EACxB,WAAW,EAAE,WAAW,EACxB,UAAU,EAAE,IAAI,EAChB,IAAI,EAAC,UAAU,EACf,UAAU,EAAE,IAAI,CAAC,IAAI,KAAK,QAAQ,gBAEjC,IAAI,CAAC,IAAI,YACO,IAbd,UAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,SAAG,IAAI,SAAG,KAAK,CAAE,CAc3B,CACrB,CAAC;yBACH;6BAAM;4BACL,OAAO,IAAI,CAAC;yBACb;oBACH,CAAC,CAAC,YACkB,CACzB,CAAC,CAAC,CAAC,IAAI,YACJ,CACP,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components/GlobalNav/ProfileMobileDropdown/ProfileMobileDropdown.d.ts","writeByteOrderMark":false,"text":"import { SetStateAction, Dispatch } from 'react';\r\nimport type { Variant } from '..';\r\ninterface Props {\r\n    userName: string;\r\n    items: {\r\n        name: string;\r\n        showItem: boolean;\r\n        onClick: null | (() => void);\r\n        disabled: boolean;\r\n    }[];\r\n    activeMobileDropdown?: string | null;\r\n    setActiveMobileDropdown?: Dispatch<SetStateAction<string | null>>;\r\n    variantType: Variant;\r\n}\r\nexport declare const ProfileMobileDropdown: ({ userName, items, activeMobileDropdown, setActiveMobileDropdown, variantType, }: Props) => JSX.Element;\r\nexport {};\r\n"}}
