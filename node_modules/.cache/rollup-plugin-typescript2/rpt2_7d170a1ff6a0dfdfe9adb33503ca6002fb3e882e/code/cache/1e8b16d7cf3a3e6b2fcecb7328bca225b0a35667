{"code":"import { __assign, __rest } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport { Root } from './LumaDatePicker.styles';\r\nimport { LumaTextEntry } from '../LumaTextEntry';\r\nimport { LumaIcon } from '../LumaIcon';\r\nimport { DatePickerDropDown } from './Components/LumaDatePickerDropDown';\r\nimport { DateFormatter } from '@luma-fe-workspace/utility';\r\nexport var LumaDatePicker = function (_a) {\r\n    var id = _a.id, onChange = _a.onChange, onBlur = _a.onBlur, defaultValue = _a.defaultValue, label = _a.label, error = _a.error, helperText = _a.helperText, fullWidth = _a.fullWidth, disabled = _a.disabled, _b = _a.size, size = _b === void 0 ? 'medium' : _b, _c = _a.variant, variant = _c === void 0 ? 'date' : _c, _d = _a.inputFormat, inputFormat = _d === void 0 ? undefined : _d, _e = _a.isOpen, isOpen = _e === void 0 ? false : _e, rest = __rest(_a, [\"id\", \"onChange\", \"onBlur\", \"defaultValue\", \"label\", \"error\", \"helperText\", \"fullWidth\", \"disabled\", \"size\", \"variant\", \"inputFormat\", \"isOpen\"]);\r\n    var _f = React.useState(defaultValue), dateValue = _f[0], setDateValue = _f[1];\r\n    var _g = React.useState(isOpen), isDropdownOpen = _g[0], setIsDropdownOpen = _g[1];\r\n    useEffect(function () {\r\n        setDateValue(defaultValue);\r\n    }, [defaultValue]);\r\n    var formattedDateValue = dateValue !== undefined\r\n        ? inputFormat !== undefined\r\n            ? DateFormatter.formatLocalDate(dateValue, inputFormat)\r\n            : dateValue.toLocaleDateString()\r\n        : undefined;\r\n    var onChangeHandler = function (newValue) {\r\n        setDateValue(newValue);\r\n        setIsDropdownOpen(false);\r\n        onChange === null || onChange === void 0 ? void 0 : onChange(newValue);\r\n    };\r\n    var styleCalendarIcon = {\r\n        fontSize: '0.5rem',\r\n    };\r\n    return (_jsx(Root, __assign({ size: size, value: formattedDateValue, fullWidth: fullWidth, disabled: disabled }, { children: _jsxs(OutsideClickHandler, __assign({ onOutsideClick: function () { return setIsDropdownOpen(false); } }, { children: [_jsx(LumaTextEntry, __assign({ type: \"text\", sizeVariant: size, value: formattedDateValue, label: label, helperText: helperText, readOnly: true, disabled: disabled, error: error, fullWidth: fullWidth, onBlur: onBlur, onFocus: function () { return setIsDropdownOpen(true); }, icon: _jsx(LumaIcon, { type: \"regular\", iconCode: \"calendar\", style: styleCalendarIcon }, void 0), useByDropdown: true }, rest), void 0), isDropdownOpen ? (_jsx(DatePickerDropDown, { onChangeHandler: onChangeHandler, variant: variant, isOpen: isDropdownOpen, size: size, selected: dateValue }, void 0)) : null] }), void 0) }), void 0));\r\n};\r\n//# sourceMappingURL=LumaDatePicker.js.map","references":["/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@types/react-outside-click-handler/index.d.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDatePicker/LumaDatePicker.styles.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaTextEntry/index.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaIcon/index.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDatePicker/Components/LumaDatePickerDropDown.tsx","/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaIcon/index.ts","/Users/jchen/Documents/GitHub/luma-fe-workspace/dist/libs/utility/src/index.d.ts"],"map":"{\"version\":3,\"file\":\"LumaDatePicker.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../libs/design-system/src/lib/components-Luma/components/LumaDatePicker/LumaDatePicker.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/.cache/rollup-plugin-typescript2/placeholder/lib/components-Luma/components/LumaDatePicker/LumaDatePicker.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport { IconCode } from '../LumaIcon';\r\nexport declare type InputFormatType = 'MM/dd/yyyy' | 'dd/MM/yyyy' | 'MM-dd-yyyy' | 'dd-MM-yyyy' | 'yyyy-dd-MM' | 'yyyy-MM-dd' | 'yyyy/dd/MM' | 'yyyy/MM/dd';\r\nexport interface DatePickerProps {\r\n    /**Unique identifier of the field */\r\n    id: string;\r\n    /**onchange event*/\r\n    onChange?: (newDate: Date) => void;\r\n    /**onBlur event*/\r\n    onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\r\n    /**onfocus event*/\r\n    onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void;\r\n    /**Mode/Type of field*/\r\n    variant?: 'date' | 'time' | 'datetime';\r\n    /**value of the field */\r\n    defaultValue?: Date;\r\n    label?: string;\r\n    error?: boolean;\r\n    helperText?: string;\r\n    fullWidth?: boolean;\r\n    /**disabled will disable the field*/\r\n    disabled?: boolean;\r\n    /**size will make the field small, medium or large size*/\r\n    size?: 'small' | 'medium' | 'large';\r\n    /**Format of date */\r\n    inputFormat?: InputFormatType;\r\n    /**value to toggle calendar dropdown */\r\n    isOpen?: boolean;\r\n    /**icons for calendar */\r\n    icon?: IconCode;\r\n}\r\nexport declare const LumaDatePicker: ({ id, onChange, onBlur, defaultValue, label, error, helperText, fullWidth, disabled, size, variant, inputFormat, isOpen, ...rest }: DatePickerProps) => JSX.Element;\r\n"}}
