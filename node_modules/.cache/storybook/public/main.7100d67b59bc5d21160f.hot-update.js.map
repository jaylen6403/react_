{"version":3,"file":"main.7100d67b59bc5d21160f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAAA;AAAA;AAKA;AAAA;AAAA;AASA;AAAA;AAAA;AAYA;AAAA;AAAA;AAKA;AAAA;AAAA;AAMA;AAAA;AAAA;AAQA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AC/CA;;AAkBA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AAEA;AAAA;AAAA;AAMA;AAAA;AAAA;AAUA;AAAA;AAAA;AASA;AAAA;AAAA;AAIA;AAAA;AAAA;AAGA;AAAA;AAKA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACvCA;;AAsBA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AA0DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;AAEA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AA5BA;AAqCA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://luma-fe-workspace/./libs/luma/lifecyclemanager/src/components/AnnuityPdfs/Components/PerformanceSummary/PerformanceSummary.styles.ts","webpack://luma-fe-workspace/./libs/luma/lifecyclemanager/src/components/AnnuityPdfs/Components/PerformanceSummary/PerformanceSummary.tsx","webpack://luma-fe-workspace/./libs/luma/lifecyclemanager/src/components/AnnuityPdfs/Components/UnderlyingPerformanceComponent/UnderlyingPerformance.styles.ts","webpack://luma-fe-workspace/./libs/luma/lifecyclemanager/src/components/AnnuityPdfs/Components/UnderlyingPerformanceComponent/UnderlyingPerformance.tsx","webpack://luma-fe-workspace/./libs/luma/lifecyclemanager/src/components/AnnuityPdfs/Components/UnderlyingPerformanceComponent/UnderlyingPerformance.stories.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SummaryGroup = styled.div`\n  padding-left: 18px;\n  position: relative;\n`;\n\nexport const SummaryTitleContainer = styled.div`\n  padding-bottom: 20px;\n  color: #2f3336;\n  font-family: 'IBMPlexSans-Bold', Helvetica;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 700;\n`;\n\nexport const SummaryTitle = styled.div`\n  display: flex;\n  align-items: center;\n  &:after {\n    content: '';\n    height: 1px;\n    background-color: black;\n    flex-grow: 1;\n    margin-left: 1rem;\n  }\n`;\n\nexport const SummaryTable = styled.table`\n  padding-left: 10px;\n  padding-bottom: 5px;\n`;\n\nexport const SummaryContainer = styled.div`\n  display: flex;\n  margin-right: auto;\n  gap: 40px;\n`;\n\nexport const SummaryField = styled.div`\n  color: #2f3336;\n  font-family: 'IBMPlexSans-Regular', Helvetica;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  padding-bottom: 10px;\n`;\nexport const SummaryValue = styled.th`\n  color: #2f3336;\n  font-family: 'IBMPlexSans-Regular', Helvetica;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 600;\n`;\n","import {\n  SummaryGroup,\n  SummaryTitleContainer,\n  SummaryContainer,\n  SummaryField,\n  SummaryValue,\n  SummaryTitle,\n} from './PerformanceSummary.styles';\n\ninterface PerformanceSummaryElement {\n  field: string;\n  value: string | number;\n}\n\ninterface PerformanceSummaryProps {\n  data: PerformanceSummaryElement[];\n  performanceSummaryTitle: string;\n}\nexport const PerformanceSummary = ({\n  data,\n  performanceSummaryTitle,\n}: PerformanceSummaryProps) => {\n  return (\n    <section>\n      <SummaryGroup>\n        <SummaryTitleContainer>\n          <SummaryTitle>{performanceSummaryTitle}</SummaryTitle>\n        </SummaryTitleContainer>\n        <SummaryContainer>\n          {data.map((dataElement: PerformanceSummaryElement, index: number) => (\n            <div key={index}>\n              <SummaryField>{dataElement.field}</SummaryField>\n              <SummaryValue>{dataElement.value}</SummaryValue>\n            </div>\n          ))}\n        </SummaryContainer>\n      </SummaryGroup>\n    </section>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PerformanceChartSection = styled.section`\n  padding-left: 30px;\n  color: #2f3336;\n  font-style: normal;\n`;\n\nexport const UnderlyingPerformanceTitle = styled.div`\n  display: table;\n  width: 100%;\n  table-layout: fixed;\n  padding: 8px;\n  font-family: 'IBMPlexSans-Bold', Helvetica;\n  font-size: 10px;\n  font-weight: 700;\n`;\n\nexport const UnderlyingPerformanceField = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  width: 100%;\n  display: inline-block;\n  font-family: 'IBMPlexSans-Regular', Helvetica;\n  font-size: 8px;\n  font-weight: 400;\n`;\nexport const UnderlyingPerformanceValue = styled(UnderlyingPerformanceField)`\n  background-color: #f2f4f5;\n`;\n\nexport const TickerKey = styled.span<{ color: string }>`\n  width: 10px;\n  height: 10px;\n  border: 3px solid ${(props) => props.color};\n  border-radius: 5px;\n  margin-right: 5px;\n`;\n\nexport const UnderlyingProductListContainer = styled.ul`\n  display: table;\n  table-layout: fixed;\n  padding: 8px;\n  > li {\n    display: table-cell;\n    min-width: 100px;\n  }\n`;\n","import {\n  TickerKey,\n  UnderlyingProductListContainer,\n  PerformanceChartSection,\n  UnderlyingPerformanceTitle,\n  UnderlyingPerformanceField,\n  UnderlyingPerformanceValue,\n} from './UnderlyingPerformance.styles';\n\ninterface UnderlyingPerformanceElement {\n  field: string;\n  value: string | number;\n  color?: string;\n}\n\ninterface UnderlyingPerformanceProps {\n  title: string;\n  color: string;\n  underlyingTicker: string;\n  data: UnderlyingPerformanceElement[];\n}\n\nexport const UnderlyingPerformance = ({\n  title,\n  data,\n}: UnderlyingPerformanceProps) => {\n  return (\n    <PerformanceChartSection>\n      <div>\n        <UnderlyingPerformanceTitle>{title}</UnderlyingPerformanceTitle>\n        <div>\n          <UnderlyingPerformanceField>\n            <UnderlyingProductListContainer>\n              {data.map(\n                (dataElement: UnderlyingPerformanceElement, index: number) => (\n                  <li key={index}>{dataElement.field}</li>\n                )\n              )}\n            </UnderlyingProductListContainer>\n          </UnderlyingPerformanceField>\n          <UnderlyingPerformanceValue>\n            <UnderlyingProductListContainer>\n              {data.map(\n                (dataElement: UnderlyingPerformanceElement, index: number) => {\n                  if (dataElement.color) {\n                    return (\n                      <li>\n                        <TickerKey color={dataElement.color} />\n                        {dataElement.value}\n                      </li>\n                    );\n                  } else {\n                    return <li key={index}>{dataElement.value}</li>;\n                  }\n                }\n              )}\n            </UnderlyingProductListContainer>\n          </UnderlyingPerformanceValue>\n        </div>\n        {/* <img\n          className=\"line-graph\"\n          src=\"./img/performance-report---luma-bitmap-F4884C4B-1BFD-43DD-903B-98C545195D32.png\"\n          alt=\"todo-graph\"\n        /> */}\n        {/* <div className=\"graph-legend\">\n          <div className=\"graph-legend-text\">\n            <div className=\"ibmplexsans-medium-mine-shaft-6px\">\n              <span className=\"rectangle-index\"></span>Underlying\n            </div>\n            <div className=\"ibmplexsans-medium-mine-shaft-6px\">\n              <span className=\"rectangle-base\"></span>Initial Level\n            </div>\n            <div className=\"ibmplexsans-medium-mine-shaft-6px\">\n              <span className=\"rectangle-coupon-threshhold\"></span>Coupon\n              Threshhold\n            </div>\n            <div className=\"ibmplexsans-medium-mine-shaft-6px\">\n              <span className=\"rectangle-principal-threshhold\"></span>Principal\n              Threshold (Not shown if Principal Threshold = Coupon Threshold)\n            </div>\n          </div>\n        </div> */}\n      </div>\n    </PerformanceChartSection>\n  );\n};\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { UnderlyingPerformance } from './UnderlyingPerformance';\\n\\nexport default {\\n  title: 'Lifecycle Manager 2/Annuity Pdf Components/Underlying Performance',\\n  component: UnderlyingPerformance,\\n  parameters: {},\\n} as ComponentMeta<typeof UnderlyingPerformance>;\\n\\nconst Template: ComponentStory<typeof UnderlyingPerformance> = (args) => {\\n  return <UnderlyingPerformance {...args} />;\\n};\\n\\nexport const UnderlyingPerformanceComponent = Template.bind({});\\nUnderlyingPerformanceComponent.args = {\\n  title: 'Underlying Performance',\\n  data: [\\n    {\\n      field: 'Underlying Ticker',\\n      value: 'AFK',\\n      color: '#228ed4',\\n    },\\n    {\\n      field: 'Underlying Name',\\n      value: 'Russell 2000',\\n    },\\n    {\\n      field: 'Strike Price',\\n      value: 2285.32,\\n    },\\n    {\\n      field: 'Buffer Level',\\n      value: 1985.35,\\n    },\\n    {\\n      field: 'Buffer',\\n      value: 19,\\n    },\\n    {\\n      field: 'Indicative Return',\\n      value: 16.61,\\n    },\\n    {\\n      field: 'Active UL',\\n      value: 'YES',\\n    },\\n  ],\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"UnderlyingPerformanceComponent\":{\"startLoc\":{\"col\":63,\"line\":10},\"endLoc\":{\"col\":1,\"line\":12},\"startBody\":{\"col\":63,\"line\":10},\"endBody\":{\"col\":1,\"line\":12}}};\n    \nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { UnderlyingPerformance } from './UnderlyingPerformance';\n\nexport default {\n  title: 'Lifecycle Manager 2/Annuity Pdf Components/Underlying Performance',\n  component: UnderlyingPerformance,\n  parameters: {},\n} as ComponentMeta<typeof UnderlyingPerformance>;\n\nconst Template: ComponentStory<typeof UnderlyingPerformance> = (args) => {\n  return <UnderlyingPerformance {...args} />;\n};\n\nexport const UnderlyingPerformanceComponent = Template.bind({});\nUnderlyingPerformanceComponent.args = {\n  title: 'Underlying Performance',\n  data: [\n    {\n      field: 'Underlying Ticker',\n      value: 'AFK',\n      color: '#228ed4',\n    },\n    {\n      field: 'Underlying Name',\n      value: 'Russell 2000',\n    },\n    {\n      field: 'Strike Price',\n      value: 2285.32,\n    },\n    {\n      field: 'Buffer Level',\n      value: 1985.35,\n    },\n    {\n      field: 'Buffer',\n      value: 19,\n    },\n    {\n      field: 'Indicative Return',\n      value: 16.61,\n    },\n    {\n      field: 'Active UL',\n      value: 'YES',\n    },\n  ],\n};\n\n\n\nUnderlyingPerformanceComponent.parameters = { storySource: { source: \"(args) => {\\n  return <UnderlyingPerformance {...args} />;\\n}\" }, ...UnderlyingPerformanceComponent.parameters };"],"names":[],"sourceRoot":""}