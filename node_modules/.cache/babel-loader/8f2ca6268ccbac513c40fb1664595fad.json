{"ast":null,"code":"/* eslint no-restricted-imports: \"off\" */\nimport { addMilliseconds, addMinutes, addDays, addWeeks, addMonths, isBefore, endOfMonth, differenceInMilliseconds, subMinutes } from 'date-fns';\nimport { toDate } from 'date-fns-tz';\nexport class DateHelper {} // export const DateHelper = {\n//   Add: {\n//     Week: DateHelper.addWeek,\n//   },\n// };\n//\n// export namespace DateTest {\n//   export class Add {\n//     static Months = () => 1;\n//   }\n// }\n\nDateHelper.addMinutes = (date, amount) => addMinutes(date, amount);\n\nDateHelper.addDays = (date, amount) => addDays(date, amount);\n\nDateHelper.addWeek = date => addDays(date, 7);\n\nDateHelper.addWeeks = (date, amount) => addWeeks(date, amount);\n\nDateHelper.convertToUTC = date => toDate(date, {\n  timeZone: 'UTC'\n});\n\nDateHelper.isDateBefore = (dateA, dateB) => isBefore(dateA, dateB);\n\nDateHelper.addMilliseconds = (date, amount) => addMilliseconds(date, amount);\n\nDateHelper.differenceInMilliseconds = (firstDate, secondDate) => differenceInMilliseconds(firstDate, secondDate);\n\nDateHelper.addMonths = (date, amount) => addMonths(date, amount);\n\nDateHelper.endOfMonth = date => endOfMonth(date);\n\nDateHelper.subtractMinutes = (date, amount) => subMinutes(date, amount);\n\nDateHelper.underThirtyDaysOld = date => {\n  const thirtyDaysInMilliseconds = 2592000000;\n  const todayTimeInMilliseconds = new Date().getTime();\n  return todayTimeInMilliseconds - date.getTime() <= thirtyDaysInMilliseconds;\n};","map":{"version":3,"names":["addMilliseconds","addMinutes","addDays","addWeeks","addMonths","isBefore","endOfMonth","differenceInMilliseconds","subMinutes","toDate","DateHelper","date","amount","addWeek","convertToUTC","timeZone","isDateBefore","dateA","dateB","firstDate","secondDate","subtractMinutes","underThirtyDaysOld","thirtyDaysInMilliseconds","todayTimeInMilliseconds","Date","getTime"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/utility/src/lib/helper/date-helper/date.helper.ts"],"sourcesContent":["/* eslint no-restricted-imports: \"off\" */\nimport {\n  addMilliseconds,\n  addMinutes,\n  addDays,\n  addWeeks,\n  addMonths,\n  isBefore,\n  endOfMonth,\n  differenceInMilliseconds,\n  subMinutes,\n} from 'date-fns';\nimport { toDate } from 'date-fns-tz';\n\nexport class DateHelper {\n  /**\n   * Returns the date N minutes in the future.\n   *\n   * @param {Date} date - the Date object you want to edit\n   * @param {number} amount - how many minutes to be added\n   * @returns {Date} a Date object 7 minutes in the future\n   *\n   */\n  static addMinutes = (date: Date, amount: number): Date =>\n    addMinutes(date, amount);\n\n  /**\n   * Returns the date N days in the future.\n   *\n   * @param {Date} date - the Date object you want to edit\n   * @param {number} amount - how many days to be added\n   * @returns {Date} a Date object 7 days in the future\n   *\n   */\n  static addDays = (date: Date, amount: number): Date => addDays(date, amount);\n\n  /**\n   * Returns the date 7 days in the future.\n   *\n   * @param {Date} date - the Date object you want to edit\n   * @returns {Date} a Date object 7 days in the future\n   *\n   */\n  static addWeek = (date: Date): Date => addDays(date, 7);\n\n  /**\n   * Returns the date N weeks in the future.\n   *\n   * @param {Date} date - the Date object you want to edit\n   * @param {number} amount - how many weeks to be added\n   * @returns {Date} a Date object N days in the future\n   *\n   */\n  static addWeeks = (date: Date, amount: number): Date =>\n    addWeeks(date, amount);\n\n  /**\n   * Returns the date converted to UTC\n   *\n   * @param {Date} date - takes in a date/string/number, which gets converted to timezone: UTC\n   * @returns {Date} a Date object converted to UTC\n   *\n   */\n  static convertToUTC = (date: Date | string | number): Date =>\n    toDate(date, { timeZone: 'UTC' });\n\n  /**\n   * Returns true if dateA is before dateB\n   *\n   * @param {Date} dateA\n   * @param {Date} dateB\n   * @returns {Boolean}\n   */\n  static isDateBefore = (dateA: Date | number, dateB: Date | number): boolean =>\n    isBefore(dateA, dateB);\n\n  static addMilliseconds = (date: Date | number, amount: number): Date =>\n    addMilliseconds(date, amount);\n\n  static differenceInMilliseconds = (\n    firstDate: Date,\n    secondDate: Date\n  ): number => differenceInMilliseconds(firstDate, secondDate);\n\n  static addMonths = (date: Date | number, amount: number) =>\n    addMonths(date, amount);\n\n  static endOfMonth = (date: Date | number) => endOfMonth(date);\n\n  static subtractMinutes = (date: Date | number, amount: number): Date =>\n    subMinutes(date, amount);\n\n  /**\n   * Returns true if the date is less than or equal to 30 days old\n   *\n   * @param {Date} date\n   * @returns {Boolean}\n   */\n  static underThirtyDaysOld = (date: Date): boolean => {\n    const thirtyDaysInMilliseconds = 2592000000;\n    const todayTimeInMilliseconds = new Date().getTime();\n\n    return todayTimeInMilliseconds - date.getTime() <= thirtyDaysInMilliseconds;\n  };\n}\n\n// export const DateHelper = {\n//   Add: {\n//     Week: DateHelper.addWeek,\n//   },\n// };\n//\n// export namespace DateTest {\n//   export class Add {\n//     static Months = () => 1;\n//   }\n// }\n"],"mappings":"AAAA;AACA,SACEA,eADF,EAEEC,UAFF,EAGEC,OAHF,EAIEC,QAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,UAPF,EAQEC,wBARF,EASEC,UATF,QAUO,UAVP;AAWA,SAASC,MAAT,QAAuB,aAAvB;AAEA,OAAO,MAAMC,UAAN,CAAiB,E,CA4FxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAtGaA,U,CASJT,U,GAAa,CAACU,IAAD,EAAaC,MAAb,KAClBX,UAAU,CAACU,IAAD,EAAOC,MAAP,C;;AAVDF,U,CAoBJR,O,GAAU,CAACS,IAAD,EAAaC,MAAb,KAAsCV,OAAO,CAACS,IAAD,EAAOC,MAAP,C;;AApBnDF,U,CA6BJG,O,GAAWF,IAAD,IAAsBT,OAAO,CAACS,IAAD,EAAO,CAAP,C;;AA7BnCD,U,CAuCJP,Q,GAAW,CAACQ,IAAD,EAAaC,MAAb,KAChBT,QAAQ,CAACQ,IAAD,EAAOC,MAAP,C;;AAxCCF,U,CAiDJI,Y,GAAgBH,IAAD,IACpBF,MAAM,CAACE,IAAD,EAAO;EAAEI,QAAQ,EAAE;AAAZ,CAAP,C;;AAlDGL,U,CA2DJM,Y,GAAe,CAACC,KAAD,EAAuBC,KAAvB,KACpBb,QAAQ,CAACY,KAAD,EAAQC,KAAR,C;;AA5DCR,U,CA8DJV,e,GAAkB,CAACW,IAAD,EAAsBC,MAAtB,KACvBZ,eAAe,CAACW,IAAD,EAAOC,MAAP,C;;AA/DNF,U,CAiEJH,wB,GAA2B,CAChCY,SADgC,EAEhCC,UAFgC,KAGrBb,wBAAwB,CAACY,SAAD,EAAYC,UAAZ,C;;AApE1BV,U,CAsEJN,S,GAAY,CAACO,IAAD,EAAsBC,MAAtB,KACjBR,SAAS,CAACO,IAAD,EAAOC,MAAP,C;;AAvEAF,U,CAyEJJ,U,GAAcK,IAAD,IAAyBL,UAAU,CAACK,IAAD,C;;AAzE5CD,U,CA2EJW,e,GAAkB,CAACV,IAAD,EAAsBC,MAAtB,KACvBJ,UAAU,CAACG,IAAD,EAAOC,MAAP,C;;AA5EDF,U,CAoFJY,kB,GAAsBX,IAAD,IAAyB;EACnD,MAAMY,wBAAwB,GAAG,UAAjC;EACA,MAAMC,uBAAuB,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAhC;EAEA,OAAOF,uBAAuB,GAAGb,IAAI,CAACe,OAAL,EAA1B,IAA4CH,wBAAnD;AACD,C"},"metadata":{},"sourceType":"module"}