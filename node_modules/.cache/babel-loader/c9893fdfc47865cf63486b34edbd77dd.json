{"ast":null,"code":"import \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport { EventCalculationStatuses, PrincipalProximity } from '../components/AGGridTable/AGGridTable';\nimport { DateFormatter, DateHelper } from '@luma-fe-workspace/utility';\nimport { createProductDetailsUrl } from '@luma-fe-workspace/luma/dashboard';\n\nconst addSettlementRates = (event, status) => Object.assign({\n  status\n}, event.cashSettlementRates && {\n  cashSettlementRates: event.cashSettlementRates\n}, event.physicalSettlements && {\n  physicalSettlementRates: event.physicalSettlements\n});\n\nexport const formatConfirmationStatus = event => {\n  const finalDate = event.eventDate;\n  if (!finalDate) return undefined;\n  const now = new Date();\n  now.setUTCHours(0, 0, 0, 0); //Go one second into the past for simple comparisons of dates, as they're always midnight\n\n  now.setSeconds(now.getSeconds() - 1);\n  const date = new Date(finalDate); // if the event occurs today, or in the future\n\n  if (date >= now) {\n    return addSettlementRates(event, EventCalculationStatuses.UPCOMING);\n  } // if the event is in the past\n\n\n  if (date < now) {\n    if (!event.confirmationStatus) return addSettlementRates(event, EventCalculationStatuses.PENDING);\n    if (event.confirmationStatus === 'CONFIRMED') return addSettlementRates(event, EventCalculationStatuses.CONFIRMED);\n  }\n\n  if (event.confirmationStatus === 'PENDING') return addSettlementRates(event, EventCalculationStatuses.PENDING);\n\n  if (event.confirmationStatus === 'NOT_CONFIRMED') {\n    if (event.eventType === 'MATURITY') return addSettlementRates(event, EventCalculationStatuses.NOT_MATURED);\n    if (event.eventType === 'ISSUER_CALL' || event.eventType === 'AUTO_CALL') return addSettlementRates(event, EventCalculationStatuses.NOT_CALLED);\n    if (event.eventType === 'COUPON_PAYMENT') return addSettlementRates(event, EventCalculationStatuses.MISSED);\n  }\n\n  if (event.confirmationStatus === 'REQUIRES_RESOLUTION') return addSettlementRates(event, EventCalculationStatuses.REVIEW);\n  return {\n    status: EventCalculationStatuses.UNKNOWN\n  };\n};\nexport let EventTypesDisplay;\n\n(function (EventTypesDisplay) {\n  EventTypesDisplay[\"AUTO_CALL\"] = \"Auto Call\";\n  EventTypesDisplay[\"ISSUER_CALL\"] = \"Issuer Call\";\n  EventTypesDisplay[\"MATURITY\"] = \"Maturity\";\n  EventTypesDisplay[\"COUPON\"] = \"Coupon Payment\";\n})(EventTypesDisplay || (EventTypesDisplay = {}));\n\nexport const formatEventType = eventType => {\n  if (eventType) {\n    switch (eventType) {\n      case 'COUPON_PAYMENT':\n        return EventTypesDisplay.COUPON;\n\n      case 'MATURITY':\n        return EventTypesDisplay.MATURITY;\n\n      case 'AUTO_CALL':\n        return EventTypesDisplay.AUTO_CALL;\n\n      case 'ISSUER_CALL':\n        return EventTypesDisplay.ISSUER_CALL;\n\n      case 'PDW_COUPON_DATE':\n        return EventTypesDisplay.COUPON;\n\n      case 'PDW_FINAL_VALUATION_DATE':\n        return EventTypesDisplay.MATURITY;\n\n      case 'Auto Call':\n        return EventTypesDisplay.AUTO_CALL;\n\n      case 'Issuer Call':\n        return EventTypesDisplay.ISSUER_CALL;\n\n      default:\n        return undefined;\n    }\n  } else {\n    return undefined;\n  }\n};\nexport const getBarrierText = (eventType, downsideType) => {\n  if (eventType && downsideType) {\n    switch (eventType) {\n      case 'Coupon Payment':\n        return 'Coupon Barrier';\n\n      case 'Auto Call':\n      case 'Issuer Call':\n        return 'Call Barrier';\n\n      case 'Maturity':\n        if (downsideType === 'Barrier') {\n          return 'Principal Barrier';\n        }\n\n        if (downsideType === 'Buffer') {\n          return 'Principal Threshold';\n        }\n\n        return undefined;\n\n      default:\n        return undefined;\n    }\n  } else {\n    return undefined;\n  }\n};\nexport let RegTypesDisplay;\n\n(function (RegTypesDisplay) {\n  RegTypesDisplay[\"REG_S\"] = \"Reg S\";\n  RegTypesDisplay[\"REGISTERED_NOTE\"] = \"Registered\";\n  RegTypesDisplay[\"_3A2\"] = \"3a2\";\n  RegTypesDisplay[\"UNKNOWN\"] = \"Unknown\";\n})(RegTypesDisplay || (RegTypesDisplay = {}));\n\nexport const ISODateToFormat = (date, dateFormat = 'MM/dd/yyyy') => {\n  if (!date) return undefined;\n  return DateFormatter.formatLocalDate(new Date(new Date(date).toLocaleString('en-US', {\n    timeZone: 'UTC'\n  })), dateFormat);\n};\n_c = ISODateToFormat;\nexport const eventDateFilterComparator = (dateA, dateB) => {\n  if (dateA === dateB) return 0;\n  return DateHelper.isDateBefore(new Date(dateA), new Date(dateB)) ? -1 : 1;\n};\nexport const getPhysicalSettlementData = physicalSettlements => {\n  if (!physicalSettlements) return {\n    cash: undefined,\n    shares: undefined\n  };\n  return {\n    shares: physicalSettlements.find(settlement => settlement.physicalSettlementType === 'Shares' && (settlement.issuerValue || settlement.lumaValue || settlement.value)),\n    cash: physicalSettlements.find(settlement => settlement.physicalSettlementType === 'Cash in Lieu')\n  };\n};\nexport const getPrincipalProximityData = principalProximity => {\n  let principalProximityAboveOrBelow;\n  let principalProximityValue;\n\n  if (principalProximity) {\n    if (principalProximity.includes('Above')) {\n      var _principalProximity;\n\n      principalProximityAboveOrBelow = PrincipalProximity.POSITIVE;\n      principalProximityValue = '+' + ((_principalProximity = principalProximity) == null ? void 0 : _principalProximity.split(' ')[0]);\n    } else if (principalProximity.includes('Below')) {\n      var _principalProximity2;\n\n      principalProximityAboveOrBelow = PrincipalProximity.NEGATIVE;\n      principalProximityValue = '-' + ((_principalProximity2 = principalProximity) == null ? void 0 : _principalProximity2.split(' ')[0]);\n    } else {\n      var _principalProximity3;\n\n      principalProximityValue = (_principalProximity3 = principalProximity) == null ? void 0 : _principalProximity3.split(' ')[0];\n    }\n  } else {\n    principalProximity = undefined;\n  }\n\n  return {\n    principalProximityAboveOrBelow: principalProximityAboveOrBelow,\n    principalProximityValue: principalProximityValue\n  };\n};\nexport const formatEmailPayout = (eventData, payout) => {\n  return eventData.activeUnderlier + ': ' + payout;\n};\nexport const handleLMProductLink = productIdentifier => {\n  window.open(createProductDetailsUrl(productIdentifier), '_blank');\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ISODateToFormat\");","map":{"version":3,"names":["EventCalculationStatuses","PrincipalProximity","DateFormatter","DateHelper","createProductDetailsUrl","addSettlementRates","event","status","cashSettlementRates","physicalSettlements","physicalSettlementRates","formatConfirmationStatus","finalDate","eventDate","undefined","now","Date","setUTCHours","setSeconds","getSeconds","date","UPCOMING","confirmationStatus","PENDING","CONFIRMED","eventType","NOT_MATURED","NOT_CALLED","MISSED","REVIEW","UNKNOWN","EventTypesDisplay","formatEventType","COUPON","MATURITY","AUTO_CALL","ISSUER_CALL","getBarrierText","downsideType","RegTypesDisplay","ISODateToFormat","dateFormat","formatLocalDate","toLocaleString","timeZone","eventDateFilterComparator","dateA","dateB","isDateBefore","getPhysicalSettlementData","cash","shares","find","settlement","physicalSettlementType","issuerValue","lumaValue","value","getPrincipalProximityData","principalProximity","principalProximityAboveOrBelow","principalProximityValue","includes","POSITIVE","split","NEGATIVE","formatEmailPayout","eventData","payout","activeUnderlier","handleLMProductLink","productIdentifier","window","open"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/utils/gridUtils.ts"],"sourcesContent":["import { EventProductData, PhysicalSettlement } from '@luma-fe-workspace/redux';\nimport {\n  ConfirmationStatus,\n  EventCalculationStatuses,\n  PrincipalProximity,\n} from '../components/AGGridTable/AGGridTable';\nimport { DateFormatter, DateHelper } from '@luma-fe-workspace/utility';\nimport { createProductDetailsUrl } from '@luma-fe-workspace/luma/dashboard';\n\nconst addSettlementRates = (\n  event: EventProductData,\n  status: EventCalculationStatuses\n): ConfirmationStatus => ({\n  status,\n  ...(event.cashSettlementRates && {\n    cashSettlementRates: event.cashSettlementRates,\n  }),\n  ...(event.physicalSettlements && {\n    physicalSettlementRates: event.physicalSettlements,\n  }),\n});\n\nexport const formatConfirmationStatus = (\n  event: EventProductData\n): ConfirmationStatus | undefined => {\n  const finalDate = event.eventDate;\n\n  if (!finalDate) return undefined;\n\n  const now = new Date();\n  now.setUTCHours(0, 0, 0, 0);\n  //Go one second into the past for simple comparisons of dates, as they're always midnight\n  now.setSeconds(now.getSeconds() - 1);\n  const date = new Date(finalDate);\n  // if the event occurs today, or in the future\n  if (date >= now) {\n    return addSettlementRates(event, EventCalculationStatuses.UPCOMING);\n  }\n  // if the event is in the past\n  if (date < now) {\n    if (!event.confirmationStatus)\n      return addSettlementRates(event, EventCalculationStatuses.PENDING);\n    if (event.confirmationStatus === 'CONFIRMED')\n      return addSettlementRates(event, EventCalculationStatuses.CONFIRMED);\n  }\n\n  if (event.confirmationStatus === 'PENDING')\n    return addSettlementRates(event, EventCalculationStatuses.PENDING);\n  if (event.confirmationStatus === 'NOT_CONFIRMED') {\n    if (event.eventType === 'MATURITY')\n      return addSettlementRates(event, EventCalculationStatuses.NOT_MATURED);\n    if (event.eventType === 'ISSUER_CALL' || event.eventType === 'AUTO_CALL')\n      return addSettlementRates(event, EventCalculationStatuses.NOT_CALLED);\n    if (event.eventType === 'COUPON_PAYMENT')\n      return addSettlementRates(event, EventCalculationStatuses.MISSED);\n  }\n\n  if (event.confirmationStatus === 'REQUIRES_RESOLUTION')\n    return addSettlementRates(event, EventCalculationStatuses.REVIEW);\n  return { status: EventCalculationStatuses.UNKNOWN };\n};\n\nexport enum EventTypesDisplay {\n  AUTO_CALL = 'Auto Call',\n  ISSUER_CALL = 'Issuer Call',\n  MATURITY = 'Maturity',\n  COUPON = 'Coupon Payment',\n}\nexport const formatEventType = (\n  eventType: string | undefined\n): EventTypesDisplay | undefined => {\n  if (eventType) {\n    switch (eventType) {\n      case 'COUPON_PAYMENT':\n        return EventTypesDisplay.COUPON;\n      case 'MATURITY':\n        return EventTypesDisplay.MATURITY;\n      case 'AUTO_CALL':\n        return EventTypesDisplay.AUTO_CALL;\n      case 'ISSUER_CALL':\n        return EventTypesDisplay.ISSUER_CALL;\n      case 'PDW_COUPON_DATE':\n        return EventTypesDisplay.COUPON;\n      case 'PDW_FINAL_VALUATION_DATE':\n        return EventTypesDisplay.MATURITY;\n      case 'Auto Call':\n        return EventTypesDisplay.AUTO_CALL;\n      case 'Issuer Call':\n        return EventTypesDisplay.ISSUER_CALL;\n      default:\n        return undefined;\n    }\n  } else {\n    return undefined;\n  }\n};\n\nexport const getBarrierText = (\n  eventType: string | undefined,\n  downsideType: string | undefined\n): string | undefined => {\n  if (eventType && downsideType) {\n    switch (eventType) {\n      case 'Coupon Payment':\n        return 'Coupon Barrier';\n      case 'Auto Call':\n      case 'Issuer Call':\n        return 'Call Barrier';\n      case 'Maturity':\n        if (downsideType === 'Barrier') {\n          return 'Principal Barrier';\n        }\n        if (downsideType === 'Buffer') {\n          return 'Principal Threshold';\n        }\n        return undefined;\n      default:\n        return undefined;\n    }\n  } else {\n    return undefined;\n  }\n};\n\nexport enum RegTypesDisplay {\n  REG_S = 'Reg S',\n  REGISTERED_NOTE = 'Registered',\n  _3A2 = '3a2',\n  UNKNOWN = 'Unknown',\n}\n\ntype DateFormats =\n  | 'yyyy-MM-dd'\n  | 'dd-MM-yyyy'\n  | 'MMM dd, yyyy'\n  | 'MM/dd/yyyy'\n  | 'MM-dd-yyyy';\nexport const ISODateToFormat = (\n  date: string | undefined,\n  dateFormat: DateFormats = 'MM/dd/yyyy'\n): undefined | string => {\n  if (!date) return undefined;\n  return DateFormatter.formatLocalDate(\n    new Date(new Date(date).toLocaleString('en-US', { timeZone: 'UTC' })),\n    dateFormat\n  );\n};\n\nexport const eventDateFilterComparator = (dateA: string, dateB: string) => {\n  if (dateA === dateB) return 0;\n  return DateHelper.isDateBefore(new Date(dateA), new Date(dateB)) ? -1 : 1;\n};\n\nexport const getPhysicalSettlementData = (\n  physicalSettlements: PhysicalSettlement[] | undefined\n): {\n  cash?: PhysicalSettlement | undefined;\n  shares: PhysicalSettlement | undefined;\n} => {\n  if (!physicalSettlements) return { cash: undefined, shares: undefined };\n  return {\n    shares: physicalSettlements.find(\n      (settlement: PhysicalSettlement) =>\n        settlement.physicalSettlementType === 'Shares' &&\n        (settlement.issuerValue || settlement.lumaValue || settlement.value)\n    ),\n    cash: physicalSettlements.find(\n      (settlement: PhysicalSettlement) =>\n        settlement.physicalSettlementType === 'Cash in Lieu'\n    ),\n  };\n};\n\nexport const getPrincipalProximityData = (\n  principalProximity: string | undefined\n): {\n  principalProximityAboveOrBelow: PrincipalProximity | undefined;\n  principalProximityValue: string | undefined;\n} => {\n  let principalProximityAboveOrBelow: PrincipalProximity | undefined;\n  let principalProximityValue: string | undefined;\n\n  if (principalProximity) {\n    if (principalProximity.includes('Above')) {\n      principalProximityAboveOrBelow = PrincipalProximity.POSITIVE;\n      principalProximityValue = '+' + principalProximity?.split(' ')[0];\n    } else if (principalProximity.includes('Below')) {\n      principalProximityAboveOrBelow = PrincipalProximity.NEGATIVE;\n      principalProximityValue = '-' + principalProximity?.split(' ')[0];\n    } else {\n      principalProximityValue = principalProximity?.split(' ')[0];\n    }\n  } else {\n    principalProximity = undefined;\n  }\n\n  return {\n    principalProximityAboveOrBelow: principalProximityAboveOrBelow,\n    principalProximityValue: principalProximityValue,\n  };\n};\n\nexport const formatEmailPayout = (\n  eventData: EventProductData,\n  payout: string\n): string => {\n  return eventData.activeUnderlier + ': ' + payout;\n};\n\nexport const handleLMProductLink = (productIdentifier: string | undefined) => {\n  window.open(createProductDetailsUrl(productIdentifier), '_blank');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}