{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/GlobalNav.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport { useState, useEffect } from 'react';\nimport { NavTabBar } from './NavTabBar/NavTabBar';\nimport { TopNavBar } from './TopNavBar/TopNavBar';\nimport { MobileMenu } from './MobileMenu/MobileMenu';\nimport { GlobalNavContainer } from './GlobalNav.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalNav = ({\n  userName,\n  logout,\n  tabs,\n  issuerLogo,\n  logoWidth,\n  logoHeight,\n  accountAriaLabel,\n  menuAriaLabel,\n  handleNavigate\n}) => {\n  _s();\n\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 916);\n  const [activeTab, setActiveTab] = useState('');\n  const [parentActiveTab, setParentActiveTab] = useState(undefined);\n  const variantType = issuerLogo ? 'secondary' : 'primary';\n  useEffect(() => {\n    const handleResizeWindow = () => setIsMobile(window.innerWidth < 916);\n\n    window.addEventListener('resize', handleResizeWindow);\n    return () => {\n      window.removeEventListener('resize', handleResizeWindow);\n    };\n  }, []);\n  useEffect(() => {\n    const getInitialTabName = () => {\n      const pathname = window.location.pathname;\n\n      for (let i = 0; i < tabs.length; i++) {\n        const currentObj = tabs[i];\n\n        if (currentObj.route && pathname.startsWith(currentObj.route)) {\n          return currentObj.title;\n        }\n\n        if (currentObj.title === 'TRADE' && pathname.split('/').includes('secondaries')) {\n          return currentObj.title;\n        }\n\n        if (currentObj.children) {\n          for (let _i = 0; _i < currentObj.children.length; _i++) {\n            const currOptionObj = currentObj.children[_i];\n\n            if (currOptionObj.route === pathname) {\n              setParentActiveTab(currentObj.title);\n              return currOptionObj.title;\n            }\n          }\n        }\n\n        if (pathname.includes('product-details')) {\n          return 'LIFECYCLE';\n        }\n      }\n\n      return 'HOME';\n    };\n\n    const pathname = getInitialTabName();\n    setActiveTab(pathname);\n  }, [tabs]);\n\n  if (isMobile) {\n    return /*#__PURE__*/_jsxDEV(GlobalNavContainer, {\n      title: \"Mobile Navigation\",\n      children: /*#__PURE__*/_jsxDEV(MobileMenu, {\n        variantType: variantType,\n        issuerLogo: issuerLogo,\n        logoWidth: logoWidth,\n        logoHeight: logoHeight,\n        menuAriaLabel: menuAriaLabel,\n        tabs: tabs,\n        activeTab: activeTab,\n        setActiveTab: setActiveTab,\n        handleNavigate: handleNavigate,\n        parentActiveTab: parentActiveTab,\n        setParentActiveTab: setParentActiveTab,\n        userName: userName,\n        isMobile: isMobile,\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(GlobalNavContainer, {\n      title: \"Main Navigation\",\n      children: [/*#__PURE__*/_jsxDEV(TopNavBar, {\n        variantType: variantType,\n        issuerLogo: issuerLogo,\n        logoWidth: logoWidth,\n        logoHeight: logoHeight,\n        accountAriaLabel: accountAriaLabel,\n        userName: userName,\n        isMobile: isMobile,\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavTabBar, {\n        tabs: tabs,\n        variantType: variantType,\n        activeTab: activeTab,\n        setActiveTab: setActiveTab,\n        parentActiveTab: parentActiveTab,\n        setParentActiveTab: setParentActiveTab,\n        handleNavigate: handleNavigate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(GlobalNav, \"d0LwWzWq8KvBii+P9j94lROz0ko=\");\n\n_c = GlobalNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalNav\");","map":{"version":3,"names":["useState","useEffect","NavTabBar","TopNavBar","MobileMenu","GlobalNavContainer","GlobalNav","userName","logout","tabs","issuerLogo","logoWidth","logoHeight","accountAriaLabel","menuAriaLabel","handleNavigate","isMobile","setIsMobile","window","innerWidth","activeTab","setActiveTab","parentActiveTab","setParentActiveTab","undefined","variantType","handleResizeWindow","addEventListener","removeEventListener","getInitialTabName","pathname","location","i","length","currentObj","route","startsWith","title","split","includes","children","currOptionObj"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/GlobalNav.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { NavTabBar } from './NavTabBar/NavTabBar';\nimport { TopNavBar } from './TopNavBar/TopNavBar';\nimport { MobileMenu } from './MobileMenu/MobileMenu';\nimport { GlobalNavContainer } from './GlobalNav.styles';\nimport { NavigateHandlerType, NavTabType } from './GlobalNav.types';\n\ninterface GlobalNavProps {\n  userName: string;\n  logout: () => void;\n  /**\n   * array of data that will define and compile navbar tabs (names, links, dropdown boolean)\n   */\n  tabs: NavTabType[];\n  /**\n   * outside company logo img source\n   */\n  issuerLogo?: string;\n  /**\n   * width property of logo\n   */\n  logoWidth?: string;\n  /**\n   * height property of logo\n   */\n  logoHeight?: string;\n  /**\n   * aria label for the profile/account button\n   */\n  accountAriaLabel: string;\n  /**\n   * aria label for the bars/mobile menu button\n   */\n  menuAriaLabel: string;\n  /**\n   * on click handler for navigation and setting active tab\n   */\n  handleNavigate: NavigateHandlerType;\n}\n\nexport const GlobalNav = ({\n  userName,\n  logout,\n  tabs,\n  issuerLogo,\n  logoWidth,\n  logoHeight,\n  accountAriaLabel,\n  menuAriaLabel,\n  handleNavigate,\n}: GlobalNavProps) => {\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 916);\n  const [activeTab, setActiveTab] = useState<string>('');\n  const [parentActiveTab, setParentActiveTab] = useState<undefined | string>(\n    undefined\n  );\n  const variantType = issuerLogo ? 'secondary' : 'primary';\n\n  useEffect(() => {\n    const handleResizeWindow = () => setIsMobile(window.innerWidth < 916);\n    window.addEventListener('resize', handleResizeWindow);\n    return () => {\n      window.removeEventListener('resize', handleResizeWindow);\n    };\n  }, []);\n\n  useEffect(() => {\n    const getInitialTabName = () => {\n      const pathname = window.location.pathname;\n\n      for (let i = 0; i < tabs.length; i++) {\n        const currentObj = tabs[i];\n        if (currentObj.route && pathname.startsWith(currentObj.route)) {\n          return currentObj.title;\n        }\n\n        if (\n          currentObj.title === 'TRADE' &&\n          pathname.split('/').includes('secondaries')\n        ) {\n          return currentObj.title;\n        }\n\n        if (currentObj.children) {\n          for (let i = 0; i < currentObj.children.length; i++) {\n            const currOptionObj = currentObj.children[i];\n            if (currOptionObj.route === pathname) {\n              setParentActiveTab(currentObj.title);\n              return currOptionObj.title;\n            }\n          }\n        }\n        if (pathname.includes('product-details')) {\n          return 'LIFECYCLE';\n        }\n      }\n      return 'HOME';\n    };\n    const pathname = getInitialTabName();\n    setActiveTab(pathname);\n  }, [tabs]);\n\n  if (isMobile) {\n    return (\n      <GlobalNavContainer title=\"Mobile Navigation\">\n        <MobileMenu\n          variantType={variantType}\n          issuerLogo={issuerLogo}\n          logoWidth={logoWidth}\n          logoHeight={logoHeight}\n          menuAriaLabel={menuAriaLabel}\n          tabs={tabs}\n          activeTab={activeTab}\n          setActiveTab={setActiveTab}\n          handleNavigate={handleNavigate}\n          parentActiveTab={parentActiveTab}\n          setParentActiveTab={setParentActiveTab}\n          userName={userName}\n          isMobile={isMobile}\n          logout={logout}\n        />\n      </GlobalNavContainer>\n    );\n  } else {\n    return (\n      <GlobalNavContainer title=\"Main Navigation\">\n        <TopNavBar\n          variantType={variantType}\n          issuerLogo={issuerLogo}\n          logoWidth={logoWidth}\n          logoHeight={logoHeight}\n          accountAriaLabel={accountAriaLabel}\n          userName={userName}\n          isMobile={isMobile}\n          logout={logout}\n        />\n\n        <NavTabBar\n          tabs={tabs}\n          variantType={variantType}\n          activeTab={activeTab}\n          setActiveTab={setActiveTab}\n          parentActiveTab={parentActiveTab}\n          setParentActiveTab={setParentActiveTab}\n          handleNavigate={handleNavigate}\n        />\n      </GlobalNavContainer>\n    );\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}