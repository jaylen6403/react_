{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/SecondariesTable/SecondariesTable.tsx\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { Root, Cell, HeaderRow, HeaderTitle, Row, FooterRow } from './SecondariesTable.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\n/**\n * The user of this table will have to define the type expected and that will define what possible\n *   columns are available\n */\nexport const SecondariesTable = ({\n  title,\n  showFooter,\n  headerCols,\n  data,\n  id,\n  rootStyles\n}) => {\n  const colLen = headerCols ? headerCols.length : 2;\n\n  if (headerCols && !Array.isArray(data)) {\n    headerCols = undefined;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Root, {\n    style: headerCols ? {} : {\n      tableLayout: 'fixed'\n    },\n    id: id,\n    rootStyles: rootStyles,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [title ? /*#__PURE__*/_jsxDEV(HeaderRow, {\n        children: /*#__PURE__*/_jsxDEV(HeaderTitle, {\n          scope: \"colgroup\",\n          colSpan: colLen,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : null, headerCols ? /*#__PURE__*/_jsxDEV(HeaderRow, {\n        children: headerCols.map(colDefinition => /*#__PURE__*/_jsxDEV(Cell, {\n          scope: \"col\",\n          textAlign: colDefinition.textAlign,\n          children: colDefinition.col\n        }, colDefinition.col, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: headerCols ? data.map((datum, idx) => /*#__PURE__*/_jsxDEV(Row, {\n        className: (idx + 1) % 2 === 0 ? 'even-row' : 'odd-row',\n        children: headerCols && headerCols.map(colDefinition => {\n          const {\n            col\n          } = colDefinition;\n          return /*#__PURE__*/_createElement(Cell, Object.assign({}, colDefinition, {\n            key: datum[col] + '' + idx,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 23\n            }\n          }), datum[col]);\n        })\n      }, 'row' + idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this)) : Object.keys(data).map((key, idx) => /*#__PURE__*/_jsxDEV(Row, {\n        className: (idx + 1) % 2 === 0 ? 'even-row' : 'odd-row',\n        children: [/*#__PURE__*/_jsxDEV(Cell, {\n          bold: true,\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Cell, {\n          hideTextOverflow: true,\n          children: data[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)]\n      }, key + idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n      children: showFooter ? /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(FooterRow, {\n          colSpan: colLen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = SecondariesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecondariesTable\");","map":{"version":3,"names":["Root","Cell","HeaderRow","HeaderTitle","Row","FooterRow","SecondariesTable","title","showFooter","headerCols","data","id","rootStyles","colLen","length","Array","isArray","undefined","tableLayout","map","colDefinition","textAlign","col","datum","idx","Object","keys","key"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/SecondariesTable/SecondariesTable.tsx"],"sourcesContent":["import {\n  Root,\n  Cell,\n  HeaderRow,\n  HeaderTitle,\n  Row,\n  FooterRow,\n} from './SecondariesTable.styles';\n\nexport interface CellEffects {\n  isGreyedOut?: boolean;\n  hideTextOverflow?: boolean;\n  width?: string;\n  minWidth?: string;\n  bold?: boolean;\n  textAlign?: 'left' | 'center' | 'right';\n  fontSize?: string;\n}\n\ntype Header<K> = CellEffects & { col: keyof K & string };\n\nexport interface SecondariesTableProps<T extends object> {\n  /**\n   * if Provided a dark grey footer will appear at the bottom. No way to embed anything in it\n   */\n  showFooter?: boolean;\n  /**\n   * title (optional): will create a Table Title above the header columns (if provided otherwise over the table)\n   */\n  title?: string;\n  /**\n   * headerCols (optional): if provided an array of type T is expected to present in the Table.\n   *   The headerCols prop describes how each of these fields should show. Only shows fields from data\n   *     that exist with this Object\n   */\n  headerCols?: Header<T>[];\n  /**\n   * data can be expressed in one of two ways. Either a table that represents a single Object or an array of\n   *   Objects that will display rows based on the headerCols definition provided\n   *   If headerCols are provided, data must be presented as an array of objects\n   *   otherwise, a single object will be presented with a Bolded column to present\n   *     the PropertyNames and on the right column the values\n   */\n  data: T[] | Record<string, unknown> | Record<string, unknown>[];\n  id?: string;\n  rootStyles?: string;\n}\n\n/**\n * The user of this table will have to define the type expected and that will define what possible\n *   columns are available\n */\nexport const SecondariesTable = <T extends object>({\n  title,\n  showFooter,\n  headerCols,\n  data,\n  id,\n  rootStyles,\n}: SecondariesTableProps<T>) => {\n  const colLen = headerCols ? headerCols.length : 2;\n  if (headerCols && !Array.isArray(data)) {\n    headerCols = undefined;\n  }\n  return (\n    <Root\n      style={headerCols ? {} : { tableLayout: 'fixed' }}\n      id={id}\n      rootStyles={rootStyles}\n    >\n      <thead>\n        {title ? (\n          <HeaderRow>\n            <HeaderTitle scope=\"colgroup\" colSpan={colLen}>\n              {title}\n            </HeaderTitle>\n          </HeaderRow>\n        ) : null}\n        {headerCols ? (\n          <HeaderRow>\n            {headerCols.map((colDefinition) => (\n              <Cell\n                scope=\"col\"\n                key={colDefinition.col}\n                textAlign={colDefinition.textAlign}\n              >\n                {colDefinition.col}\n              </Cell>\n            ))}\n          </HeaderRow>\n        ) : null}\n      </thead>\n      <tbody>\n        {headerCols\n          ? (data as any).map((datum: T, idx: number) => (\n              <Row\n                className={(idx + 1) % 2 === 0 ? 'even-row' : 'odd-row'}\n                key={'row' + idx}\n              >\n                {headerCols &&\n                  headerCols.map((colDefinition) => {\n                    const { col } = colDefinition;\n                    return (\n                      <Cell {...colDefinition} key={datum[col] + '' + idx}>\n                        {datum[col]}\n                      </Cell>\n                    );\n                  })}\n              </Row>\n            ))\n          : Object.keys(data).map((key: string, idx) => (\n              <Row\n                className={(idx + 1) % 2 === 0 ? 'even-row' : 'odd-row'}\n                key={key + idx}\n              >\n                <Cell bold={true}>{key}</Cell>\n                <Cell hideTextOverflow>{(data as any)[key]}</Cell>\n              </Row>\n            ))}\n      </tbody>\n      <tfoot>\n        {showFooter ? (\n          <tr>\n            <FooterRow colSpan={colLen}></FooterRow>\n          </tr>\n        ) : null}\n      </tfoot>\n    </Root>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}