{"ast":null,"code":"import { baseApi as api } from './preferenceServiceBaseApi';\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: build => ({\n    getDisplayConfigUsingGet: build.query({\n      query: () => ({\n        url: `/user/config`\n      })\n    })\n  }),\n  overrideExisting: false\n});\nexport { injectedRtkApi as preferenceServiceApi };\nexport const {\n  useGetDisplayConfigUsingGetQuery\n} = injectedRtkApi;","map":{"version":3,"names":["baseApi","api","injectedRtkApi","injectEndpoints","endpoints","build","getDisplayConfigUsingGet","query","url","overrideExisting","preferenceServiceApi","useGetDisplayConfigUsingGetQuery"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/redux/preferenceService/preferenceServiceEndpoints.ts"],"sourcesContent":["import { baseApi as api } from './preferenceServiceBaseApi';\n\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: (build) => ({\n    getDisplayConfigUsingGet: build.query<\n      GetDisplayConfigUsingGetApiResponse,\n      GetDisplayConfigUsingGetApiArg\n    >({\n      query: () => ({ url: `/user/config` }),\n    }),\n  }),\n  overrideExisting: false,\n});\nexport { injectedRtkApi as preferenceServiceApi };\nexport type GetDisplayConfigUsingGetApiResponse =\n  /** status 200 Ok */ DisplayConfig;\nexport type GetDisplayConfigUsingGetApiArg = void;\nexport type DisplayConfig = {\n  deskId: number;\n  displayExternalStructureName: boolean;\n  displayBloombergTicker: boolean;\n  displayProductSymbol: boolean;\n  dailySummaryOccurrence: string;\n  displayLegacyDashboard: null;\n  displayLegacyNavigation: null;\n  marketDataSourcePreference: null;\n  hideDashboardWidgets: boolean;\n  displayMarkToMarketSource: boolean;\n  enableDashboardInsights: boolean;\n  id: string;\n};\nexport const { useGetDisplayConfigUsingGetQuery } = injectedRtkApi;\n"],"mappings":"AAAA,SAASA,OAAO,IAAIC,GAApB,QAA+B,4BAA/B;AAEA,MAAMC,cAAc,GAAGD,GAAG,CAACE,eAAJ,CAAoB;EACzCC,SAAS,EAAGC,KAAD,KAAY;IACrBC,wBAAwB,EAAED,KAAK,CAACE,KAAN,CAGxB;MACAA,KAAK,EAAE,OAAO;QAAEC,GAAG,EAAG;MAAR,CAAP;IADP,CAHwB;EADL,CAAZ,CAD8B;EASzCC,gBAAgB,EAAE;AATuB,CAApB,CAAvB;AAWA,SAASP,cAAc,IAAIQ,oBAA3B;AAkBA,OAAO,MAAM;EAAEC;AAAF,IAAuCT,cAA7C"},"metadata":{},"sourceType":"module"}