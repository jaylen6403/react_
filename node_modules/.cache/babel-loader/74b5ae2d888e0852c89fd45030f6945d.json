{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/components/DashboardToggle/DashboardToggle.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { useEffect, useState } from 'react';\nimport { DashboardToggleCont, DashboardTitle, DashboardDropdown, EventsTitle, MobileWrapper } from './DashboardToggle.style';\nimport { SingleSelect, isAnnuityOnly, isStructuredProductsOnly } from '@luma-fe-workspace/design-system';\nimport { useGetUserTrainingStatusUsingGetQuery } from '@luma-fe-workspace/redux';\nimport { ProductTypes } from '../../utils/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DashboardToggle = ({\n  productType,\n  setProductType,\n  screenWidth\n}) => {\n  _s();\n\n  const [selectedDashboard, setSelectedDashboard] = useState({\n    display: ProductTypes.StructuredProducts,\n    value: ProductTypes.StructuredProducts\n  });\n  const {\n    data: userTrainingData\n  } = useGetUserTrainingStatusUsingGetQuery();\n  const userTrainingDataProductTypes = (userTrainingData == null ? void 0 : userTrainingData.productTypes) || [];\n  const isAnnuitiesOnly = isAnnuityOnly(userTrainingDataProductTypes);\n  const isStructuredOnly = isStructuredProductsOnly(userTrainingDataProductTypes);\n  const toggleStrings = [{\n    display: ProductTypes.StructuredProducts,\n    value: ProductTypes.StructuredProducts\n  }, {\n    display: ProductTypes.Annuities,\n    value: ProductTypes.Annuities\n  }];\n\n  const updateDashboardSelection = item => {\n    if (!item) return;\n    setSelectedDashboard(item);\n    setProductType(item.value);\n  };\n\n  useEffect(() => {\n    const checkProductTypes = () => {\n      if (isAnnuitiesOnly) {\n        setProductType(ProductTypes.Annuities);\n      } else {\n        setProductType(ProductTypes.StructuredProducts);\n      }\n    };\n\n    checkProductTypes();\n  }, [isAnnuitiesOnly, setProductType]);\n\n  const Dropdown = () => {\n    if (screenWidth > 544) {\n      return /*#__PURE__*/_jsxDEV(DashboardDropdown, {\n        children: /*#__PURE__*/_jsxDEV(SingleSelect, {\n          items: toggleStrings,\n          placeholder: ProductTypes.StructuredProducts,\n          variant: 'secondary',\n          onChange: updateDashboardSelection,\n          selectedItem: selectedDashboard,\n          hasIndicator: true,\n          noHighlight: true,\n          iconCode: \"angle-down\",\n          iconPrefix: \"far\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(MobileWrapper, {\n        children: /*#__PURE__*/_jsxDEV(SingleSelect, {\n          items: toggleStrings,\n          placeholder: ProductTypes.StructuredProducts,\n          variant: 'secondary',\n          onChange: updateDashboardSelection,\n          selectedItem: selectedDashboard,\n          hasIndicator: true,\n          noHighlight: true,\n          iconCode: \"angle-down\",\n          iconPrefix: \"far\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DashboardToggleCont, {\n    children: [screenWidth > 544 ? /*#__PURE__*/_jsxDEV(DashboardTitle, {\n      children: \"Dashboard |\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DashboardTitle, {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), isAnnuitiesOnly || isStructuredOnly ? /*#__PURE__*/_jsxDEV(EventsTitle, {\n      children: productType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Dropdown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashboardToggle, \"jdxrlIXjP+Oysuv13w2ed2HdZME=\", false, function () {\n  return [useGetUserTrainingStatusUsingGetQuery];\n});\n\n_c = DashboardToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardToggle\");","map":{"version":3,"names":["useEffect","useState","DashboardToggleCont","DashboardTitle","DashboardDropdown","EventsTitle","MobileWrapper","SingleSelect","isAnnuityOnly","isStructuredProductsOnly","useGetUserTrainingStatusUsingGetQuery","ProductTypes","DashboardToggle","productType","setProductType","screenWidth","selectedDashboard","setSelectedDashboard","display","StructuredProducts","value","data","userTrainingData","userTrainingDataProductTypes","productTypes","isAnnuitiesOnly","isStructuredOnly","toggleStrings","Annuities","updateDashboardSelection","item","checkProductTypes","Dropdown"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/components/DashboardToggle/DashboardToggle.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from 'react';\nimport {\n  DashboardToggleCont,\n  DashboardTitle,\n  DashboardDropdown,\n  EventsTitle,\n  MobileWrapper,\n} from './DashboardToggle.style';\n\nimport {\n  SingleSelect,\n  MenuItemSingleType,\n  isAnnuityOnly,\n  isStructuredProductsOnly,\n  ProductTypesType,\n} from '@luma-fe-workspace/design-system';\n\nimport { useGetUserTrainingStatusUsingGetQuery } from '@luma-fe-workspace/redux';\nimport { ProductType, ProductTypes } from '../../utils/types';\n\ninterface Props {\n  productType: ProductType;\n  setProductType: Dispatch<SetStateAction<ProductType>>;\n  screenWidth: number;\n}\n\nexport const DashboardToggle = ({\n  productType,\n  setProductType,\n  screenWidth,\n}: Props) => {\n  const [selectedDashboard, setSelectedDashboard] = useState<\n    MenuItemSingleType<ProductType>\n  >({\n    display: ProductTypes.StructuredProducts,\n    value: ProductTypes.StructuredProducts,\n  });\n  const { data: userTrainingData } = useGetUserTrainingStatusUsingGetQuery();\n\n  const userTrainingDataProductTypes: ProductTypesType =\n    userTrainingData?.productTypes || [];\n  const isAnnuitiesOnly = isAnnuityOnly(userTrainingDataProductTypes);\n  const isStructuredOnly = isStructuredProductsOnly(\n    userTrainingDataProductTypes\n  );\n\n  const toggleStrings: MenuItemSingleType<ProductType>[] = [\n    {\n      display: ProductTypes.StructuredProducts,\n      value: ProductTypes.StructuredProducts,\n    },\n    { display: ProductTypes.Annuities, value: ProductTypes.Annuities },\n  ];\n\n  const updateDashboardSelection = (\n    item?: MenuItemSingleType<ProductType> | null\n  ) => {\n    if (!item) return;\n    setSelectedDashboard(item);\n    setProductType(item.value);\n  };\n\n  useEffect(() => {\n    const checkProductTypes = () => {\n      if (isAnnuitiesOnly) {\n        setProductType(ProductTypes.Annuities);\n      } else {\n        setProductType(ProductTypes.StructuredProducts);\n      }\n    };\n    checkProductTypes();\n  }, [isAnnuitiesOnly, setProductType]);\n\n  const Dropdown = () => {\n    if (screenWidth > 544) {\n      return (\n        <DashboardDropdown>\n          <SingleSelect\n            items={toggleStrings}\n            placeholder={ProductTypes.StructuredProducts}\n            variant={'secondary'}\n            onChange={updateDashboardSelection}\n            selectedItem={selectedDashboard}\n            hasIndicator={true}\n            noHighlight={true}\n            iconCode=\"angle-down\"\n            iconPrefix=\"far\"\n          />\n        </DashboardDropdown>\n      );\n    } else {\n      return (\n        <MobileWrapper>\n          <SingleSelect\n            items={toggleStrings}\n            placeholder={ProductTypes.StructuredProducts}\n            variant={'secondary'}\n            onChange={updateDashboardSelection}\n            selectedItem={selectedDashboard}\n            hasIndicator={true}\n            noHighlight={true}\n            iconCode=\"angle-down\"\n            iconPrefix=\"far\"\n          />\n        </MobileWrapper>\n      );\n    }\n  };\n\n  return (\n    <DashboardToggleCont>\n      {screenWidth > 544 ? (\n        <DashboardTitle>Dashboard |</DashboardTitle>\n      ) : (\n        <DashboardTitle>Dashboard</DashboardTitle>\n      )}\n      {isAnnuitiesOnly || isStructuredOnly ? (\n        <EventsTitle>{productType}</EventsTitle>\n      ) : (\n        <Dropdown />\n      )}\n    </DashboardToggleCont>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}