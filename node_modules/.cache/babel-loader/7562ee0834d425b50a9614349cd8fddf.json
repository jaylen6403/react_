{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/MobileMenu/MobileMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { useState } from 'react';\nimport { Logo } from '../../Logo/Logo';\nimport lumaLogo from '../../../assets/logos/lumaLogo.svg';\nimport { MobileMenuWrapper, LogoContainer, MobileMenuIcon, MobileMenuButton, MobileNavWrapper, MobileTabConatiner, PoweredByLogoContainer } from './MobileMenu.styles';\nimport { MobileTabButton } from '../MobileTabButton/MobileTabButton';\nimport { MobileDropdownTab } from '../MobileDropdown/MobileDropdown';\nimport { ProfileDropdown } from '../ProfileDropdown/ProfileDropdown';\nimport { PoweredByLumaLogo } from '../PoweredByLumaLogo/PoweredByLumaLogo';\nimport { isTabDropdown } from '../utils/navTabUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MobileMenu = ({\n  issuerLogo,\n  logoWidth,\n  logoHeight,\n  menuAriaLabel,\n  tabs,\n  handleNavigate,\n  activeTab,\n  setActiveTab,\n  variantType,\n  parentActiveTab,\n  setParentActiveTab,\n  userName,\n  isMobile,\n  logout\n}) => {\n  _s();\n\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [activeMobileDropdown, setActiveMobileDropdown] = useState(null);\n  return /*#__PURE__*/_jsxDEV(MobileMenuWrapper, {\n    variantType: variantType,\n    isOpen: menuOpen,\n    children: [/*#__PURE__*/_jsxDEV(MobileNavWrapper, {\n      variantType: variantType,\n      isOpen: menuOpen,\n      children: [/*#__PURE__*/_jsxDEV(MobileMenuButton, {\n        name: \"mobile menu\",\n        \"aria-label\": menuAriaLabel,\n        onClick: () => setMenuOpen(!menuOpen),\n        children: /*#__PURE__*/_jsxDEV(MobileMenuIcon, {\n          iconCode: menuOpen ? 'times' : 'bars',\n          prefix: \"far\",\n          variantType: variantType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LogoContainer, {\n        width: logoWidth,\n        height: logoHeight,\n        children: /*#__PURE__*/_jsxDEV(Logo, {\n          imageSource: issuerLogo ? issuerLogo : lumaLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), menuOpen && variantType === 'secondary' ? /*#__PURE__*/_jsxDEV(PoweredByLogoContainer, {\n      children: /*#__PURE__*/_jsxDEV(PoweredByLumaLogo, {\n        isMobile: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(MobileTabConatiner, {\n      children: [menuOpen && tabs.map(tab => {\n        if (isTabDropdown(tab)) {\n          return /*#__PURE__*/_jsxDEV(MobileDropdownTab, {\n            tab: tab,\n            variantType: variantType,\n            activeTab: activeTab,\n            setActiveTab: setActiveTab,\n            menuOpen: menuOpen,\n            setMenuOpen: setMenuOpen,\n            handleNavigate: handleNavigate,\n            parentActiveTab: parentActiveTab,\n            setParentActiveTab: setParentActiveTab,\n            activeMobileDropdown: activeMobileDropdown,\n            setActiveMobileDropdown: setActiveMobileDropdown\n          }, `${new Date().getTime()} ${tab.title}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(MobileTabButton, {\n            item: tab,\n            variantType: variantType,\n            activeTab: activeTab,\n            setActiveTab: setActiveTab,\n            menuOpen: menuOpen,\n            setMenuOpen: setMenuOpen,\n            handleNavigate: handleNavigate,\n            setParentActiveTab: setParentActiveTab\n          }, `${new Date().getTime()} ${tab.title}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this);\n        }\n      }), menuOpen ? /*#__PURE__*/_jsxDEV(ProfileDropdown, {\n        userName: userName,\n        isMobile: isMobile,\n        variantType: variantType,\n        logout: logout,\n        activeMobileDropdown: activeMobileDropdown,\n        setActiveMobileDropdown: setActiveMobileDropdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MobileMenu, \"TWgyaJUl3l/0uTtzDCJO6Iw+fMg=\");\n\n_c = MobileMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileMenu\");","map":{"version":3,"names":["useState","Logo","lumaLogo","MobileMenuWrapper","LogoContainer","MobileMenuIcon","MobileMenuButton","MobileNavWrapper","MobileTabConatiner","PoweredByLogoContainer","MobileTabButton","MobileDropdownTab","ProfileDropdown","PoweredByLumaLogo","isTabDropdown","MobileMenu","issuerLogo","logoWidth","logoHeight","menuAriaLabel","tabs","handleNavigate","activeTab","setActiveTab","variantType","parentActiveTab","setParentActiveTab","userName","isMobile","logout","menuOpen","setMenuOpen","activeMobileDropdown","setActiveMobileDropdown","map","tab","Date","getTime","title"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/GlobalNav/MobileMenu/MobileMenu.tsx"],"sourcesContent":["import { useState, Dispatch, SetStateAction } from 'react';\nimport { Logo } from '../../Logo/Logo';\nimport lumaLogo from '../../../assets/logos/lumaLogo.svg';\nimport {\n  MobileMenuWrapper,\n  LogoContainer,\n  MobileMenuIcon,\n  MobileMenuButton,\n  MobileNavWrapper,\n  MobileTabConatiner,\n  PoweredByLogoContainer,\n} from './MobileMenu.styles';\nimport { MobileTabButton } from '../MobileTabButton/MobileTabButton';\nimport { MobileDropdownTab } from '../MobileDropdown/MobileDropdown';\nimport { ProfileDropdown } from '../ProfileDropdown/ProfileDropdown';\nimport { NavTabType, Variant } from '..';\nimport { PoweredByLumaLogo } from '../PoweredByLumaLogo/PoweredByLumaLogo';\nimport {\n  NavigateHandlerType,\n  NavTabTypeWithChildren,\n} from '../GlobalNav.types';\nimport { isTabDropdown } from '../utils/navTabUtils';\n\ninterface Props {\n  userName: string;\n  isMobile: boolean;\n  logout: () => void;\n  /**\n   * outside company logo img source\n   */\n  issuerLogo?: string;\n  /**\n   * width property of logo\n   */\n  logoWidth?: string;\n  /**\n   * height property of logo\n   */\n  logoHeight?: string;\n  /**\n   * styling variant, primary if default luma environment, secondary for whitelabel\n   */\n  variantType: Variant;\n  /**\n   * aria label for the bars/mobile menu button\n   */\n  menuAriaLabel: string;\n  /**\n   * array of data that will define and complie navbar tabs (names, links, dropdown boolean)\n   */\n  tabs: NavTabType[];\n  /**\n   * current active tab, passed in for active tab styling\n   */\n  activeTab: string;\n  /**\n   * sets the active tab\n   */\n  setActiveTab: Dispatch<SetStateAction<string>>;\n  /**\n   * on click handler for navigation\n   */\n  handleNavigate: NavigateHandlerType;\n  parentActiveTab: string | undefined;\n  setParentActiveTab: Dispatch<SetStateAction<string | undefined>>;\n}\n\nexport const MobileMenu = ({\n  issuerLogo,\n  logoWidth,\n  logoHeight,\n  menuAriaLabel,\n  tabs,\n  handleNavigate,\n  activeTab,\n  setActiveTab,\n  variantType,\n  parentActiveTab,\n  setParentActiveTab,\n  userName,\n  isMobile,\n  logout,\n}: Props) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [activeMobileDropdown, setActiveMobileDropdown] = useState<\n    string | null\n  >(null);\n\n  return (\n    <MobileMenuWrapper variantType={variantType} isOpen={menuOpen}>\n      <MobileNavWrapper variantType={variantType} isOpen={menuOpen}>\n        <MobileMenuButton\n          name=\"mobile menu\"\n          aria-label={menuAriaLabel}\n          onClick={() => setMenuOpen(!menuOpen)}\n        >\n          <MobileMenuIcon\n            iconCode={menuOpen ? 'times' : 'bars'}\n            prefix=\"far\"\n            variantType={variantType}\n          />\n        </MobileMenuButton>\n        <LogoContainer width={logoWidth} height={logoHeight}>\n          <Logo imageSource={issuerLogo ? issuerLogo : lumaLogo} />\n        </LogoContainer>\n      </MobileNavWrapper>\n      {menuOpen && variantType === 'secondary' ? (\n        <PoweredByLogoContainer>\n          <PoweredByLumaLogo isMobile={true} />\n        </PoweredByLogoContainer>\n      ) : null}\n      <MobileTabConatiner>\n        {menuOpen &&\n          tabs.map((tab) => {\n            if (isTabDropdown(tab)) {\n              return (\n                <MobileDropdownTab\n                  key={`${new Date().getTime()} ${tab.title}`}\n                  tab={tab as NavTabTypeWithChildren}\n                  variantType={variantType}\n                  activeTab={activeTab}\n                  setActiveTab={setActiveTab}\n                  menuOpen={menuOpen}\n                  setMenuOpen={setMenuOpen}\n                  handleNavigate={handleNavigate}\n                  parentActiveTab={parentActiveTab}\n                  setParentActiveTab={setParentActiveTab}\n                  activeMobileDropdown={activeMobileDropdown}\n                  setActiveMobileDropdown={setActiveMobileDropdown}\n                />\n              );\n            } else {\n              return (\n                <MobileTabButton\n                  key={`${new Date().getTime()} ${tab.title}`}\n                  item={tab}\n                  variantType={variantType}\n                  activeTab={activeTab}\n                  setActiveTab={setActiveTab}\n                  menuOpen={menuOpen}\n                  setMenuOpen={setMenuOpen}\n                  handleNavigate={handleNavigate}\n                  setParentActiveTab={setParentActiveTab}\n                />\n              );\n            }\n          })}\n        {menuOpen ? (\n          <ProfileDropdown\n            userName={userName}\n            isMobile={isMobile}\n            variantType={variantType}\n            logout={logout}\n            activeMobileDropdown={activeMobileDropdown}\n            setActiveMobileDropdown={setActiveMobileDropdown}\n          />\n        ) : null}\n      </MobileTabConatiner>\n    </MobileMenuWrapper>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}