{"ast":null,"code":"import \"core-js/modules/es.promise.js\";\nimport { documentServiceApi } from './documentServiceEndpoints';\nexport const enhancedDocumentServiceApi = documentServiceApi.injectEndpoints({\n  endpoints: build => ({\n    getMarketplaceProductDocumentPdfUsingGet: build.query({\n      query: queryArg => ({\n        url: `/document/marketplaceproduct`,\n        params: {\n          cusip: queryArg.cusip,\n          documentType: queryArg.documentType\n        },\n        responseHandler: async response => {\n          const documentBlob = await response.blob();\n          return documentBlob;\n        }\n      })\n    }),\n    getProductDocumentPdfUsingGet: build.query({\n      query: queryArg => ({\n        url: `/document/product`,\n        params: {\n          cusip: queryArg.cusip,\n          documentType: queryArg.documentType\n        },\n        responseHandler: async response => {\n          const documentBlob = await response.blob();\n          return documentBlob;\n        }\n      })\n    }),\n    getDocumentContentsUsingGet: build.query({\n      query: queryArg => ({\n        url: `/document/${queryArg.key}/contents`,\n        params: {\n          key: queryArg.key\n        },\n        responseHandler: async response => {\n          const documentBlob = await response.blob();\n          return documentBlob;\n        }\n      })\n    })\n  }),\n  overrideExisting: true\n});\nconst {\n  useGetMarketplaceProductDocumentPdfUsingGetQuery,\n  useGetProductDocumentPdfUsingGetQuery,\n  useGetDocumentContentsUsingGetQuery\n} = enhancedDocumentServiceApi;\nexport { useGetMarketplaceProductDocumentPdfUsingGetQuery as useGetMarketplaceProductDocumentPdfUsingGetQueryEnhanced };\nexport { useGetProductDocumentPdfUsingGetQuery as useGetProductDocumentPdfUsingGetQueryEnhanced };\nexport { useGetDocumentContentsUsingGetQuery as useGetDocumentContentsUsingGetQueryEnhanced };","map":{"version":3,"names":["documentServiceApi","enhancedDocumentServiceApi","injectEndpoints","endpoints","build","getMarketplaceProductDocumentPdfUsingGet","query","queryArg","url","params","cusip","documentType","responseHandler","response","documentBlob","blob","getProductDocumentPdfUsingGet","getDocumentContentsUsingGet","key","overrideExisting","useGetMarketplaceProductDocumentPdfUsingGetQuery","useGetProductDocumentPdfUsingGetQuery","useGetDocumentContentsUsingGetQuery","useGetMarketplaceProductDocumentPdfUsingGetQueryEnhanced","useGetProductDocumentPdfUsingGetQueryEnhanced","useGetDocumentContentsUsingGetQueryEnhanced"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/redux/documentService/enhancedDocumentServiceEndpoints.ts"],"sourcesContent":["import { documentServiceApi } from './documentServiceEndpoints';\n\nexport const enhancedDocumentServiceApi = documentServiceApi.injectEndpoints({\n  endpoints: (build) => ({\n    getMarketplaceProductDocumentPdfUsingGet: build.query({\n      query: (queryArg) => ({\n        url: `/document/marketplaceproduct`,\n        params: { cusip: queryArg.cusip, documentType: queryArg.documentType },\n        responseHandler: async (response) => {\n          const documentBlob = await response.blob();\n          return documentBlob;\n        },\n      }),\n    }),\n    getProductDocumentPdfUsingGet: build.query({\n      query: (queryArg) => ({\n        url: `/document/product`,\n        params: { cusip: queryArg.cusip, documentType: queryArg.documentType },\n        responseHandler: async (response) => {\n          const documentBlob = await response.blob();\n          return documentBlob;\n        },\n      }),\n    }),\n    getDocumentContentsUsingGet: build.query({\n      query: (queryArg) => ({\n        url: `/document/${queryArg.key}/contents`,\n        params: { key: queryArg.key },\n        responseHandler: async (response) => {\n          const documentBlob = await response.blob();\n          return documentBlob;\n        },\n      }),\n    }),\n  }),\n  overrideExisting: true,\n});\n\nconst {\n  useGetMarketplaceProductDocumentPdfUsingGetQuery,\n  useGetProductDocumentPdfUsingGetQuery,\n  useGetDocumentContentsUsingGetQuery,\n} = enhancedDocumentServiceApi;\n\nexport { useGetMarketplaceProductDocumentPdfUsingGetQuery as useGetMarketplaceProductDocumentPdfUsingGetQueryEnhanced };\nexport { useGetProductDocumentPdfUsingGetQuery as useGetProductDocumentPdfUsingGetQueryEnhanced };\nexport { useGetDocumentContentsUsingGetQuery as useGetDocumentContentsUsingGetQueryEnhanced };\n"],"mappings":";AAAA,SAASA,kBAAT,QAAmC,4BAAnC;AAEA,OAAO,MAAMC,0BAA0B,GAAGD,kBAAkB,CAACE,eAAnB,CAAmC;EAC3EC,SAAS,EAAGC,KAAD,KAAY;IACrBC,wCAAwC,EAAED,KAAK,CAACE,KAAN,CAAY;MACpDA,KAAK,EAAGC,QAAD,KAAe;QACpBC,GAAG,EAAG,8BADc;QAEpBC,MAAM,EAAE;UAAEC,KAAK,EAAEH,QAAQ,CAACG,KAAlB;UAAyBC,YAAY,EAAEJ,QAAQ,CAACI;QAAhD,CAFY;QAGpBC,eAAe,EAAE,MAAOC,QAAP,IAAoB;UACnC,MAAMC,YAAY,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAA3B;UACA,OAAOD,YAAP;QACD;MANmB,CAAf;IAD6C,CAAZ,CADrB;IAWrBE,6BAA6B,EAAEZ,KAAK,CAACE,KAAN,CAAY;MACzCA,KAAK,EAAGC,QAAD,KAAe;QACpBC,GAAG,EAAG,mBADc;QAEpBC,MAAM,EAAE;UAAEC,KAAK,EAAEH,QAAQ,CAACG,KAAlB;UAAyBC,YAAY,EAAEJ,QAAQ,CAACI;QAAhD,CAFY;QAGpBC,eAAe,EAAE,MAAOC,QAAP,IAAoB;UACnC,MAAMC,YAAY,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAA3B;UACA,OAAOD,YAAP;QACD;MANmB,CAAf;IADkC,CAAZ,CAXV;IAqBrBG,2BAA2B,EAAEb,KAAK,CAACE,KAAN,CAAY;MACvCA,KAAK,EAAGC,QAAD,KAAe;QACpBC,GAAG,EAAG,aAAYD,QAAQ,CAACW,GAAI,WADX;QAEpBT,MAAM,EAAE;UAAES,GAAG,EAAEX,QAAQ,CAACW;QAAhB,CAFY;QAGpBN,eAAe,EAAE,MAAOC,QAAP,IAAoB;UACnC,MAAMC,YAAY,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAA3B;UACA,OAAOD,YAAP;QACD;MANmB,CAAf;IADgC,CAAZ;EArBR,CAAZ,CADgE;EAiC3EK,gBAAgB,EAAE;AAjCyD,CAAnC,CAAnC;AAoCP,MAAM;EACJC,gDADI;EAEJC,qCAFI;EAGJC;AAHI,IAIFrB,0BAJJ;AAMA,SAASmB,gDAAgD,IAAIG,wDAA7D;AACA,SAASF,qCAAqC,IAAIG,6CAAlD;AACA,SAASF,mCAAmC,IAAIG,2CAAhD"},"metadata":{},"sourceType":"module"}