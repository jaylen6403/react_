{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/AGGridTable/AGGridTable.tsx\";\nimport 'ag-grid-enterprise/dist/styles/ag-grid.css';\nimport { CustomAgGrid, TableContainer } from './AGGridTable.styles';\nimport { LicenseManager } from 'ag-grid-enterprise';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLicenseManager.setLicenseKey('CompanyName=Luma Financial Technologies, LLC,LicensedApplication=Luma,LicenseType=SingleApplication,LicensedConcurrentDeveloperCount=1,LicensedProductionInstancesCount=1,AssetReference=AG-017904,ExpiryDate=12_September_2022_[v2]_MTY2MjkzNzIwMDAwMA==fa6279babc79792e4bac4be842243ea3');\nexport const exportExcel = (gridApi, tableName) => {\n  gridApi == null ? void 0 : gridApi.exportDataAsExcel({\n    sheetName: tableName != null ? tableName : '',\n    fileName: `${tableName} ${new Date().toLocaleDateString()}`\n  });\n};\nexport const exportCSV = (gridApi, tableName) => {\n  gridApi == null ? void 0 : gridApi.exportDataAsCsv({\n    suppressQuotes: true,\n    fileName: `${tableName} ${new Date().toLocaleDateString()}`\n  });\n};\nexport const AGGridTable = ({\n  gridOptions,\n  customStyles,\n  getRowNodeId,\n  rowData,\n  isExternalFilterPresent,\n  doesExternalFilterPass\n}) => {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(CustomAgGrid, {\n      getRowNodeId: getRowNodeId,\n      gridOptions: gridOptions,\n      icons: {\n        sortAscending: '<i class=\"fa fa-arrow-up\"/>',\n        sortDescending: '<i class=\"fa fa-arrow-down\"/>'\n      },\n      animateRows: true,\n      customStyles: customStyles,\n      rowData: rowData,\n      isExternalFilterPresent: isExternalFilterPresent,\n      doesExternalFilterPass: doesExternalFilterPass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = AGGridTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"AGGridTable\");","map":{"version":3,"names":["CustomAgGrid","TableContainer","LicenseManager","setLicenseKey","exportExcel","gridApi","tableName","exportDataAsExcel","sheetName","fileName","Date","toLocaleDateString","exportCSV","exportDataAsCsv","suppressQuotes","AGGridTable","gridOptions","customStyles","getRowNodeId","rowData","isExternalFilterPresent","doesExternalFilterPass","sortAscending","sortDescending"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/AGGridTable/AGGridTable.tsx"],"sourcesContent":["import 'ag-grid-enterprise/dist/styles/ag-grid.css';\nimport { CustomAgGrid, TableContainer } from './AGGridTable.styles';\nimport {\n  GetRowNodeIdFunc,\n  GridApi,\n  GridOptions,\n  RowNode,\n} from 'ag-grid-community';\nimport { LicenseManager } from 'ag-grid-enterprise';\n\nLicenseManager.setLicenseKey(\n  'CompanyName=Luma Financial Technologies, LLC,LicensedApplication=Luma,LicenseType=SingleApplication,LicensedConcurrentDeveloperCount=1,LicensedProductionInstancesCount=1,AssetReference=AG-017904,ExpiryDate=12_September_2022_[v2]_MTY2MjkzNzIwMDAwMA==fa6279babc79792e4bac4be842243ea3'\n);\n\ntype TableProps = {\n  gridOptions: GridOptions | undefined;\n  customStyles?: string;\n  getRowNodeId?: GetRowNodeIdFunc;\n  isExternalFilterPresent?: () => boolean;\n  doesExternalFilterPass?: (node: RowNode) => boolean;\n  // eslint-disable-next-line\n  rowData?: Array<any>;\n};\n\nexport const exportExcel = (gridApi?: GridApi, tableName?: string) => {\n  gridApi?.exportDataAsExcel({\n    sheetName: tableName ?? '',\n    fileName: `${tableName} ${new Date().toLocaleDateString()}`,\n  });\n};\n\nexport const exportCSV = (gridApi?: GridApi, tableName?: string) => {\n  gridApi?.exportDataAsCsv({\n    suppressQuotes: true,\n    fileName: `${tableName} ${new Date().toLocaleDateString()}`,\n  });\n};\n\nexport const AGGridTable = ({\n  gridOptions,\n  customStyles,\n  getRowNodeId,\n  rowData,\n  isExternalFilterPresent,\n  doesExternalFilterPass,\n}: TableProps) => {\n  return (\n    <TableContainer>\n      <CustomAgGrid\n        getRowNodeId={getRowNodeId}\n        gridOptions={gridOptions}\n        icons={{\n          sortAscending: '<i class=\"fa fa-arrow-up\"/>',\n          sortDescending: '<i class=\"fa fa-arrow-down\"/>',\n        }}\n        animateRows={true}\n        customStyles={customStyles}\n        rowData={rowData}\n        isExternalFilterPresent={isExternalFilterPresent}\n        doesExternalFilterPass={doesExternalFilterPass}\n      />\n    </TableContainer>\n  );\n};\n"],"mappings":";AAAA,OAAO,4CAAP;AACA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,sBAA7C;AAOA,SAASC,cAAT,QAA+B,oBAA/B;;AAEAA,cAAc,CAACC,aAAf,CACE,2RADF;AAcA,OAAO,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAoBC,SAApB,KAA2C;EACpED,OAAO,QAAP,YAAAA,OAAO,CAAEE,iBAAT,CAA2B;IACzBC,SAAS,EAAEF,SAAF,WAAEA,SAAF,GAAe,EADC;IAEzBG,QAAQ,EAAG,GAAEH,SAAU,IAAG,IAAII,IAAJ,GAAWC,kBAAX,EAAgC;EAFjC,CAA3B;AAID,CALM;AAOP,OAAO,MAAMC,SAAS,GAAG,CAACP,OAAD,EAAoBC,SAApB,KAA2C;EAClED,OAAO,QAAP,YAAAA,OAAO,CAAEQ,eAAT,CAAyB;IACvBC,cAAc,EAAE,IADO;IAEvBL,QAAQ,EAAG,GAAEH,SAAU,IAAG,IAAII,IAAJ,GAAWC,kBAAX,EAAgC;EAFnC,CAAzB;AAID,CALM;AAOP,OAAO,MAAMI,WAAW,GAAG,CAAC;EAC1BC,WAD0B;EAE1BC,YAF0B;EAG1BC,YAH0B;EAI1BC,OAJ0B;EAK1BC,uBAL0B;EAM1BC;AAN0B,CAAD,KAOT;EAChB,oBACE,QAAC,cAAD;IAAA,uBACE,QAAC,YAAD;MACE,YAAY,EAAEH,YADhB;MAEE,WAAW,EAAEF,WAFf;MAGE,KAAK,EAAE;QACLM,aAAa,EAAE,6BADV;QAELC,cAAc,EAAE;MAFX,CAHT;MAOE,WAAW,EAAE,IAPf;MAQE,YAAY,EAAEN,YARhB;MASE,OAAO,EAAEE,OATX;MAUE,uBAAuB,EAAEC,uBAV3B;MAWE,sBAAsB,EAAEC;IAX1B;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAzBM;KAAMN,W"},"metadata":{},"sourceType":"module"}