{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/components/PortfolioWidget/StructuredProducts/StructuredProducts.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/esnext.string.replace-all.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { useMemo, useState } from 'react';\nimport { useGetAllCurrenciesUsingGetQuery } from '@luma-fe-workspace/redux';\nimport { Chart, ChartTableWrapper, StyledPortfolioBody, StyledPortfolioHeader, StyledPortfolioWidget, Table } from '../PortfolioWidget.styles';\nimport { PieChart } from '../PieChart';\nimport { colors } from '@luma-fe-workspace/design-system';\nimport { AGGridTable } from '../AGGridTableDashboard';\nimport { currency, notional, returnTypeTableColumnData, StructuredProductsTypes } from './structuredProductsPortfolioUtils';\nimport { getIssuer, issuerTableColumnData } from '../../../utils/issuerUtils';\nimport { Spinner } from '../../Spinner/Spinner';\nimport { Currency } from '../Currency/Currency';\nimport { StructuredProductsToggle } from './StructuredProductsToggle/StructuredProductsToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StructuredProducts = ({\n  otherWidgetPresent,\n  pieChartSize,\n  screenWidth,\n  structuredPortfolioData,\n  structuredPortfolioIsLoading\n}) => {\n  _s();\n\n  const portfolioData = structuredPortfolioData;\n  const isPortfolioLoading = structuredPortfolioIsLoading;\n  const {\n    data: currencyData,\n    isLoading: isCurrencyLoading\n  } = useGetAllCurrenciesUsingGetQuery();\n  const [selectedCurrency, setSelectedCurrency] = useState(currency);\n  const [tableToRender, setTableToRender] = useState(StructuredProductsTypes.ReturnType);\n  const notionalSums = useMemo(() => {\n    return portfolioData && currencyData ? notional(portfolioData, selectedCurrency.value, currencyData) : null;\n  }, [currencyData, portfolioData, selectedCurrency]);\n  const returnTypeTableRowData = Object.entries(notionalSums != null ? notionalSums : '').map(key => ({\n    'Return Type': key[0],\n    Orders: key[1].count.toString(),\n    Notional: key[1].notionalSum.toLocaleString('en-US', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    })\n  }));\n  const issuerSums = useMemo(() => {\n    return portfolioData && currencyData ? getIssuer(portfolioData, selectedCurrency.value, currencyData) : null;\n  }, [currencyData, portfolioData, selectedCurrency]);\n  const issuerData = Object.entries(issuerSums != null ? issuerSums : '').map(key => ({\n    Issuers: key[0],\n    Orders: key[1].count.toString(),\n    Notional: key[1].notionalSum.toLocaleString('en-US', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    })\n  })).sort((a, b) => {\n    if (parseInt(a.Notional.replaceAll(',', '')) < parseInt(b.Notional.replaceAll(',', ''))) {\n      return 1;\n    } else if (parseInt(a.Notional.replaceAll(',', '')) > parseInt(b.Notional.replaceAll(',', ''))) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n\n  const issuerTableRowData = () => {\n    const topFourIssuers = issuerData.slice(0, 4);\n    const totalIssuers = issuerData.slice(4);\n    const sumIssuers = totalIssuers.reduce((preVal, curVal) => {\n      if (curVal !== preVal) {\n        return {\n          Issuers: 'All Other Issuers',\n          Orders: (parseInt(preVal.Orders) + parseInt(curVal.Orders)).toString(),\n          Notional: (parseInt(preVal.Notional.replaceAll(',', '')) + parseInt(curVal.Notional.replaceAll(',', ''))).toLocaleString('en-US')\n        };\n      }\n\n      return preVal;\n    }, {\n      Issuers: 'All Other Issuers',\n      Orders: '0',\n      Notional: '0'\n    });\n    const finalSumIssuers = Object.assign({}, sumIssuers, {\n      Orders: parseInt(sumIssuers.Orders).toLocaleString('en-US')\n    });\n    return [...topFourIssuers, finalSumIssuers];\n  };\n\n  const returnTypeChartData = [{\n    name: 'Growth',\n    y: notionalSums == null ? void 0 : notionalSums.growth.notionalSum,\n    color: colors.primary80Daintree\n  }, {\n    name: 'Income',\n    y: notionalSums == null ? void 0 : notionalSums.income.notionalSum,\n    color: colors.primary60\n  }, {\n    name: 'Growth & Income',\n    y: notionalSums == null ? void 0 : notionalSums['growth & income'].notionalSum,\n    color: colors.primary40\n  }, {\n    name: 'Digital',\n    y: notionalSums == null ? void 0 : notionalSums.digital.notionalSum,\n    color: colors.primary20\n  }];\n  const issuerChartData = [{\n    name: issuerData.slice(0, 1).map(i => i.Issuers).toString(),\n    y: parseInt(issuerData.slice(0, 1).map(i => i.Notional).toString().replace(/,/g, '')),\n    color: colors.primary90\n  }, {\n    name: issuerData.slice(1, 2).map(i => i.Issuers).toString(),\n    y: parseInt(issuerData.slice(1, 2).map(i => i.Notional).toString().replace(/,/g, '')),\n    color: colors.primary80Daintree\n  }, {\n    name: issuerData.slice(2, 3).map(i => i.Issuers).toString(),\n    y: parseInt(issuerData.slice(2, 3).map(i => i.Notional).toString().replace(/,/g, '')),\n    color: colors.primary60\n  }, {\n    name: issuerData.slice(3, 4).map(i => i.Issuers).toString(),\n    y: parseInt(issuerData.slice(3, 4).map(i => i.Notional).toString().replace(/,/g, '')),\n    color: colors.primary40\n  }, {\n    name: 'All Other Issuers',\n    y: issuerData.slice(4).reduce((acc, cur) => {\n      if (cur.Notional) {\n        return parseInt(cur.Notional.replaceAll(',', '')) + acc;\n      }\n\n      return acc;\n    }, 0),\n    color: colors.primary20\n  }];\n  return /*#__PURE__*/_jsxDEV(StyledPortfolioWidget, {\n    isSmall: otherWidgetPresent && screenWidth >= 1440 ? true : false,\n    children: isPortfolioLoading || isCurrencyLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StyledPortfolioBody, {\n      children: [/*#__PURE__*/_jsxDEV(StyledPortfolioHeader, {\n        children: [/*#__PURE__*/_jsxDEV(StructuredProductsToggle, {\n          screenWidth: screenWidth,\n          setTableToRender: setTableToRender,\n          tableToRender: tableToRender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Currency, {\n          screenWidth: screenWidth,\n          selectedCurrency: selectedCurrency,\n          setSelectedCurrency: setSelectedCurrency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChartTableWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Chart, {\n          addMargin: screenWidth > 768 && tableToRender === StructuredProductsTypes.Issuer,\n          children: /*#__PURE__*/_jsxDEV(PieChart, {\n            data: tableToRender === StructuredProductsTypes.ReturnType ? returnTypeChartData : issuerChartData,\n            size: pieChartSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(AGGridTable, {\n            columnDefs: tableToRender === StructuredProductsTypes.ReturnType ? returnTypeTableColumnData : issuerTableColumnData,\n            rowData: tableToRender === StructuredProductsTypes.ReturnType ? returnTypeTableRowData : issuerTableRowData(),\n            isMobile: screenWidth < 400,\n            gridOptions: {\n              rowHeight: 54,\n              rowStyle: {\n                borderBottom: 'white 3px solid',\n                borderTop: 'white 3px solid'\n              },\n              headerHeight: 54,\n              defaultColDef: {\n                flex: 1,\n                wrapText: true,\n                autoHeight: true,\n                minWidth: 75,\n                editable: false\n              },\n              suppressContextMenu: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StructuredProducts, \"LO8AeTG8cFdXUk4DXdcEhBTVrVY=\", false, function () {\n  return [useGetAllCurrenciesUsingGetQuery];\n});\n\n_c = StructuredProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"StructuredProducts\");","map":{"version":3,"names":["useMemo","useState","useGetAllCurrenciesUsingGetQuery","Chart","ChartTableWrapper","StyledPortfolioBody","StyledPortfolioHeader","StyledPortfolioWidget","Table","PieChart","colors","AGGridTable","currency","notional","returnTypeTableColumnData","StructuredProductsTypes","getIssuer","issuerTableColumnData","Spinner","Currency","StructuredProductsToggle","StructuredProducts","otherWidgetPresent","pieChartSize","screenWidth","structuredPortfolioData","structuredPortfolioIsLoading","portfolioData","isPortfolioLoading","data","currencyData","isLoading","isCurrencyLoading","selectedCurrency","setSelectedCurrency","tableToRender","setTableToRender","ReturnType","notionalSums","value","returnTypeTableRowData","Object","entries","map","key","Orders","count","toString","Notional","notionalSum","toLocaleString","minimumFractionDigits","maximumFractionDigits","issuerSums","issuerData","Issuers","sort","a","b","parseInt","replaceAll","issuerTableRowData","topFourIssuers","slice","totalIssuers","sumIssuers","reduce","preVal","curVal","finalSumIssuers","returnTypeChartData","name","y","growth","color","primary80Daintree","income","primary60","primary40","digital","primary20","issuerChartData","i","replace","primary90","acc","cur","Issuer","rowHeight","rowStyle","borderBottom","borderTop","headerHeight","defaultColDef","flex","wrapText","autoHeight","minWidth","editable","suppressContextMenu"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/components/PortfolioWidget/StructuredProducts/StructuredProducts.tsx"],"sourcesContent":["import { useMemo, useState } from 'react';\n\nimport {\n  useGetAllCurrenciesUsingGetQuery,\n  PortfolioV2,\n} from '@luma-fe-workspace/redux';\nimport {\n  Chart,\n  ChartTableWrapper,\n  StyledPortfolioBody,\n  StyledPortfolioHeader,\n  StyledPortfolioWidget,\n  Table,\n} from '../PortfolioWidget.styles';\nimport { PieChart } from '../PieChart';\nimport { colors, MenuItemSingleType } from '@luma-fe-workspace/design-system';\nimport { AGGridTable } from '../AGGridTableDashboard';\nimport {\n  currency,\n  notional,\n  returnTypeTableColumnData,\n  StructuredProductsTypes,\n} from './structuredProductsPortfolioUtils';\nimport { getIssuer, issuerTableColumnData } from '../../../utils/issuerUtils';\nimport { Spinner } from '../../Spinner/Spinner';\nimport { Currency } from '../Currency/Currency';\nimport { StructuredProductsToggle } from './StructuredProductsToggle/StructuredProductsToggle';\n\ninterface Props {\n  otherWidgetPresent: boolean;\n  pieChartSize: { height: number; width: number };\n  screenWidth: number;\n  structuredPortfolioData: PortfolioV2[];\n  structuredPortfolioIsLoading: boolean;\n}\n\nexport const StructuredProducts = ({\n  otherWidgetPresent,\n  pieChartSize,\n  screenWidth,\n  structuredPortfolioData,\n  structuredPortfolioIsLoading,\n}: Props) => {\n  const portfolioData = structuredPortfolioData;\n  const isPortfolioLoading = structuredPortfolioIsLoading;\n  const { data: currencyData, isLoading: isCurrencyLoading } =\n    useGetAllCurrenciesUsingGetQuery();\n\n  const [selectedCurrency, setSelectedCurrency] =\n    useState<MenuItemSingleType<string>>(currency);\n\n  const [tableToRender, setTableToRender] = useState<\n    StructuredProductsTypes.ReturnType | StructuredProductsTypes.Issuer\n  >(StructuredProductsTypes.ReturnType);\n\n  const notionalSums = useMemo(() => {\n    return portfolioData && currencyData\n      ? notional(portfolioData, selectedCurrency.value, currencyData)\n      : null;\n  }, [currencyData, portfolioData, selectedCurrency]);\n\n  const returnTypeTableRowData = Object.entries(notionalSums ?? '').map(\n    (key) => ({\n      'Return Type': key[0],\n      Orders: key[1].count.toString(),\n      Notional: key[1].notionalSum.toLocaleString('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0,\n      }),\n    })\n  );\n\n  const issuerSums = useMemo(() => {\n    return portfolioData && currencyData\n      ? getIssuer(portfolioData, selectedCurrency.value, currencyData)\n      : null;\n  }, [currencyData, portfolioData, selectedCurrency]);\n\n  const issuerData = Object.entries(issuerSums ?? '')\n    .map((key) => ({\n      Issuers: key[0],\n      Orders: key[1].count.toString(),\n      Notional: key[1].notionalSum.toLocaleString('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0,\n      }),\n    }))\n    .sort((a, b) => {\n      if (\n        parseInt(a.Notional.replaceAll(',', '')) <\n        parseInt(b.Notional.replaceAll(',', ''))\n      ) {\n        return 1;\n      } else if (\n        parseInt(a.Notional.replaceAll(',', '')) >\n        parseInt(b.Notional.replaceAll(',', ''))\n      ) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n\n  const issuerTableRowData = () => {\n    const topFourIssuers = issuerData.slice(0, 4);\n    const totalIssuers = issuerData.slice(4);\n\n    const sumIssuers = totalIssuers.reduce(\n      (preVal, curVal) => {\n        if (curVal !== preVal) {\n          return {\n            Issuers: 'All Other Issuers',\n            Orders: (\n              parseInt(preVal.Orders) + parseInt(curVal.Orders)\n            ).toString(),\n            Notional: (\n              parseInt(preVal.Notional.replaceAll(',', '')) +\n              parseInt(curVal.Notional.replaceAll(',', ''))\n            ).toLocaleString('en-US'),\n          };\n        }\n\n        return preVal;\n      },\n\n      { Issuers: 'All Other Issuers', Orders: '0', Notional: '0' }\n    );\n\n    const finalSumIssuers = {\n      ...sumIssuers,\n      Orders: parseInt(sumIssuers.Orders).toLocaleString('en-US'),\n    };\n\n    return [...topFourIssuers, finalSumIssuers];\n  };\n\n  const returnTypeChartData = [\n    {\n      name: 'Growth',\n      y: notionalSums?.growth.notionalSum,\n      color: colors.primary80Daintree,\n    },\n    {\n      name: 'Income',\n      y: notionalSums?.income.notionalSum,\n      color: colors.primary60,\n    },\n    {\n      name: 'Growth & Income',\n      y: notionalSums?.['growth & income'].notionalSum,\n      color: colors.primary40,\n    },\n    {\n      name: 'Digital',\n      y: notionalSums?.digital.notionalSum,\n      color: colors.primary20,\n    },\n  ];\n\n  const issuerChartData = [\n    {\n      name: issuerData\n        .slice(0, 1)\n        .map((i) => i.Issuers)\n        .toString(),\n      y: parseInt(\n        issuerData\n          .slice(0, 1)\n          .map((i) => i.Notional)\n          .toString()\n          .replace(/,/g, '')\n      ),\n      color: colors.primary90,\n    },\n    {\n      name: issuerData\n        .slice(1, 2)\n        .map((i) => i.Issuers)\n        .toString(),\n      y: parseInt(\n        issuerData\n          .slice(1, 2)\n          .map((i) => i.Notional)\n          .toString()\n          .replace(/,/g, '')\n      ),\n      color: colors.primary80Daintree,\n    },\n    {\n      name: issuerData\n        .slice(2, 3)\n        .map((i) => i.Issuers)\n        .toString(),\n      y: parseInt(\n        issuerData\n          .slice(2, 3)\n          .map((i) => i.Notional)\n          .toString()\n          .replace(/,/g, '')\n      ),\n      color: colors.primary60,\n    },\n    {\n      name: issuerData\n        .slice(3, 4)\n        .map((i) => i.Issuers)\n        .toString(),\n      y: parseInt(\n        issuerData\n          .slice(3, 4)\n          .map((i) => i.Notional)\n          .toString()\n          .replace(/,/g, '')\n      ),\n      color: colors.primary40,\n    },\n    {\n      name: 'All Other Issuers',\n      y: issuerData.slice(4).reduce((acc, cur) => {\n        if (cur.Notional) {\n          return parseInt(cur.Notional.replaceAll(',', '')) + acc;\n        }\n        return acc;\n      }, 0),\n      color: colors.primary20,\n    },\n  ];\n\n  return (\n    <StyledPortfolioWidget\n      isSmall={otherWidgetPresent && screenWidth >= 1440 ? true : false}\n    >\n      {isPortfolioLoading || isCurrencyLoading ? (\n        <Spinner />\n      ) : (\n        <StyledPortfolioBody>\n          <StyledPortfolioHeader>\n            <StructuredProductsToggle\n              screenWidth={screenWidth}\n              setTableToRender={setTableToRender}\n              tableToRender={tableToRender}\n            />\n            <Currency\n              screenWidth={screenWidth}\n              selectedCurrency={selectedCurrency}\n              setSelectedCurrency={setSelectedCurrency}\n            />\n          </StyledPortfolioHeader>\n          <ChartTableWrapper>\n            <Chart\n              addMargin={\n                screenWidth > 768 &&\n                tableToRender === StructuredProductsTypes.Issuer\n              }\n            >\n              <PieChart\n                data={\n                  tableToRender === StructuredProductsTypes.ReturnType\n                    ? returnTypeChartData\n                    : issuerChartData\n                }\n                size={pieChartSize}\n              />\n            </Chart>\n\n            <Table>\n              <AGGridTable\n                columnDefs={\n                  tableToRender === StructuredProductsTypes.ReturnType\n                    ? returnTypeTableColumnData\n                    : issuerTableColumnData\n                }\n                rowData={\n                  tableToRender === StructuredProductsTypes.ReturnType\n                    ? returnTypeTableRowData\n                    : issuerTableRowData()\n                }\n                isMobile={screenWidth < 400}\n                gridOptions={{\n                  rowHeight: 54,\n                  rowStyle: {\n                    borderBottom: 'white 3px solid',\n                    borderTop: 'white 3px solid',\n                  },\n                  headerHeight: 54,\n                  defaultColDef: {\n                    flex: 1,\n                    wrapText: true,\n                    autoHeight: true,\n                    minWidth: 75,\n                    editable: false,\n                  },\n                  suppressContextMenu: true,\n                }}\n              />\n            </Table>\n          </ChartTableWrapper>\n        </StyledPortfolioBody>\n      )}\n    </StyledPortfolioWidget>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}