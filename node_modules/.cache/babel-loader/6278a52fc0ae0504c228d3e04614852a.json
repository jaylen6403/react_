{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/creationhub/src/components/PricingForm/groups/Quoting/QuotingUtils.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { useTimer } from 'react-timer-hook';\nimport { PricingOperations, PricingState, RfqCancelRequestInitiator, RfqClientAction, RfqState, RfqTypeEnum } from '@luma-fe-workspace/redux';\nimport { LumaButton, LumaButtonDropdown } from '@luma-fe-workspace/design-system';\nimport { barcLogo, bnpLogo, bofaLogo, msLogo, socgenLogo, citiLogo, cibcLogo, csLogo, rbcLogo, ubsLogo } from '../../../../assets/logos';\nimport { QuoteStatusIcon } from './Quoting.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// TODO proper data have to be extracted and filled once issuers specification is complete\nexport const issuersDisplayData = {\n  Barclays: {\n    icon: barcLogo\n  },\n  BANK_OF_AMERICA: {\n    icon: bofaLogo\n  },\n  BNP: {\n    icon: bnpLogo\n  },\n  MORGAN_STANLEY: {\n    icon: msLogo\n  },\n  SocGen: {\n    icon: socgenLogo\n  },\n  RBC: {\n    icon: rbcLogo\n  },\n  'Citi Bank': {\n    icon: citiLogo\n  },\n  'Canadian Imperial Bank of Commerce': {\n    icon: cibcLogo\n  },\n  'Credit Suisse': {\n    icon: csLogo\n  },\n  UBS: {\n    icon: ubsLogo\n  }\n};\nexport function getRfqStatus(rfq) {\n  if (!rfq) {\n    return null;\n  }\n\n  const icon = rfq.isAPI ? /*#__PURE__*/_jsxDEV(QuoteStatusIcon, {\n    iconCode: \"arrows-rotate\",\n    type: \"regular\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(QuoteStatusIcon, {\n    iconCode: \"user-clock\",\n    type: \"solid\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n\n  switch (rfq.state) {\n    case RfqState.TRADED:\n      {\n        const {\n          cancelRequestedBy,\n          quote\n        } = rfq;\n\n        if (cancelRequestedBy === RfqCancelRequestInitiator.CLIENT) {\n          return `${quote} Requesting Trade Cancellation`;\n        } else if (cancelRequestedBy === RfqCancelRequestInitiator.ISSUER) {\n          return `${quote} Traded - Cancel Requested`;\n        } else {\n          return `${quote} Traded`;\n        }\n      }\n\n    case RfqState.QUOTE_REQUESTED:\n      return icon;\n\n    case RfqState.REQUEST_CANCELLED:\n      return 'Cancelled';\n\n    case RfqState.QUOTE_REJECTED:\n      return `Quote Rejected: ${rfq.message}`;\n\n    case RfqState.QUOTED_INDICATIVE:\n      return rfq.quote;\n\n    case RfqState.QUOTED_TRADABLE:\n      return rfq.quote;\n\n    case RfqState.TRADE_REQUESTED:\n      {\n        const {\n          cancelRequestedByClient,\n          quote\n        } = rfq;\n\n        if (cancelRequestedByClient) {\n          return `${quote} Trading - Cancel Requested`;\n        } else {\n          return `${quote} Trade requested...`;\n        }\n      }\n\n    case RfqState.TRADE_REJECTED:\n      {\n        const {\n          message,\n          quote\n        } = rfq;\n        return `${quote} Trade Rejected: ${message}`;\n      }\n\n    case RfqState.TRADING_CANCELLED:\n      return `${rfq.quote} Trading - Cancelled`;\n\n    case RfqState.TRADE_CANCELLED:\n      return `${rfq.quote} Traded - Cancelled`;\n\n    case RfqState.ACCEPT_POST_TRADE_CANCEL:\n      return `${rfq.quote} Traded - Cancelled`;\n\n    case RfqState.ACCEPT_PRE_TRADE_CANCEL:\n      return `${rfq.quote} Trading - Cancelled`;\n\n    default:\n      return null;\n  }\n}\nexport function getRfqDisplayType(state, type) {\n  switch (state) {\n    case RfqState.QUOTED_INDICATIVE:\n      return 'Indicative';\n\n    case RfqState.QUOTED_TRADABLE:\n      return 'LIVE';\n\n    default:\n      return type != null ? type : '';\n  }\n}\nexport function formatTypeLabel(type) {\n  const t1 = type.slice(0, 1).toUpperCase();\n  const t2 = type.slice(1).toLowerCase();\n  return t1 + t2;\n}\nexport function formatDisplayedDate(date) {\n  return date.map(datePart => {\n    if (datePart < 10) {\n      return `0${datePart}`;\n    }\n\n    return datePart.toString();\n  }).toString().replace(/,/g, ':');\n}\nexport function ValidUntilTimer({\n  expiryTimestamp\n}) {\n  _s();\n\n  const {\n    seconds,\n    minutes,\n    hours,\n    days\n  } = useTimer({\n    expiryTimestamp\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"(\", formatDisplayedDate([days, hours, minutes, seconds]), \")\"]\n  }, void 0, true);\n}\n\n_s(ValidUntilTimer, \"jEWod3i489gf/krFQjZGadpKtco=\", false, function () {\n  return [useTimer];\n});\n\n_c = ValidUntilTimer;\nexport function newRequestDropDown({\n  dropdownItems,\n  issuerId,\n  version,\n  pricingId,\n  createRfq,\n  isMutationPending\n}) {\n  const createRfqHandler = rfqType => {\n    const createRfqRequest = {\n      issuer: issuerId,\n      rfqType,\n      version\n    };\n    createRfq({\n      updateRequest: createRfqRequest,\n      pricingId,\n      operationName: PricingOperations.CreateRfq\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(LumaButtonDropdown, {\n    id: pricingId,\n    onChangeDropdown: item => {\n      if (!item) {\n        return;\n      }\n\n      createRfqHandler(item.value);\n    },\n    disabled: isMutationPending,\n    variant: \"secondary\",\n    size: \"x_small\",\n    dropdownItems: dropdownItems,\n    type: \"button\",\n    fullWidth: true,\n    children: \"Actions\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\nexport function postTradeCancelActions(rfq, pricing, updatePricing, isMutationPending, action) {\n  const {\n    id: rfqId\n  } = rfq;\n\n  switch (action) {\n    case 'Accept':\n      {\n        const postTradeCancelAcceptHandler = () => {\n          const updateRequest = {\n            rfqId,\n            version: pricing.version\n          };\n          updatePricing({\n            updateRequest,\n            pricingId: pricing.id,\n            operationName: PricingOperations.AcceptPostTradeCancellation\n          });\n        };\n\n        return /*#__PURE__*/_jsxDEV(LumaButton, {\n          variant: \"tertiary_positive\",\n          size: \"x_small\",\n          onClick: postTradeCancelAcceptHandler,\n          disabled: isMutationPending,\n          fullWidth: true,\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this);\n      }\n\n    case 'Reject':\n      {\n        const postTradeCancelRejectHandler = () => {\n          const updateRequest = {\n            rfqId,\n            version: pricing.version\n          };\n          updatePricing({\n            updateRequest,\n            pricingId: pricing.id,\n            operationName: PricingOperations.RejectPostTradeCancellation\n          });\n        };\n\n        return /*#__PURE__*/_jsxDEV(LumaButton, {\n          variant: \"tertiary_negative\",\n          size: \"x_small\",\n          onClick: postTradeCancelRejectHandler,\n          disabled: isMutationPending,\n          fullWidth: true,\n          \"data-testid\": \"button-reject\",\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 9\n        }, this);\n      }\n\n    case 'Cancel':\n      {\n        const postTradeCancelHandler = () => {\n          const updateRequest = {\n            rfqId,\n            version: pricing.version\n          };\n          updatePricing({\n            updateRequest,\n            pricingId: pricing.id,\n            operationName: PricingOperations.RequestPostTradeCancellation\n          });\n        };\n\n        return /*#__PURE__*/_jsxDEV(LumaButton, {\n          variant: \"tertiary_negative\",\n          size: \"x_small\",\n          onClick: postTradeCancelHandler,\n          disabled: isMutationPending,\n          fullWidth: true,\n          \"data-testid\": `button-cancel`,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }, this);\n      }\n\n    default:\n      return null;\n  }\n}\nexport function preTradeCancelActions(rfq, pricing, updatePricing, isMutationPending) {\n  const {\n    id: rfqId,\n    cancelRequestedByClient\n  } = rfq;\n\n  const preTradeCancelHandler = () => {\n    const updateRequest = {\n      rfqId,\n      version: pricing.version\n    };\n    updatePricing({\n      updateRequest,\n      pricingId: pricing.id,\n      operationName: PricingOperations.RequestPreTradeCancellation\n    });\n  };\n\n  if (!cancelRequestedByClient) {\n    return /*#__PURE__*/_jsxDEV(LumaButton, {\n      variant: \"tertiary_negative\",\n      size: \"x_small\",\n      onClick: preTradeCancelHandler,\n      disabled: isMutationPending,\n      fullWidth: true,\n      \"data-testid\": `button-cancel`,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n}\nexport function tradeAction(rfq, pricing, updatePricing, isMutationPending) {\n  const {\n    id: rfqId,\n    validUntilTimestamp\n  } = rfq;\n  const validUntilDate = validUntilTimestamp ? new Date(validUntilTimestamp) : undefined;\n  const hasTimeout = validUntilDate !== undefined;\n  const expired = validUntilDate !== undefined && validUntilDate < new Date();\n  const canTrade = !expired && pricing.state === PricingState.InProgress;\n\n  const tradeHandler = () => {\n    const updateRequest = {\n      rfqId,\n      version: pricing.version\n    };\n    updatePricing({\n      updateRequest,\n      pricingId: pricing.id,\n      operationName: PricingOperations.RequestTrade\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [canTrade && /*#__PURE__*/_jsxDEV(LumaButton, {\n      variant: \"tertiary_positive\",\n      size: \"x_small\",\n      disabled: isMutationPending,\n      onClick: tradeHandler,\n      fullWidth: true,\n      children: [\"Trade\", ' ', hasTimeout && (expired ? 'expired' : /*#__PURE__*/_jsxDEV(ValidUntilTimer, {\n        expiryTimestamp: validUntilDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this), expired && hasTimeout && 'Expired']\n  }, void 0, true);\n}\nexport function preQuoteCancelActions(rfq, pricing, isMutationPending, cancelRfq) {\n  const {\n    id: rfqId\n  } = rfq;\n\n  const cancelRfqHandler = () => {\n    const cancelRfqRequest = {\n      rfqId,\n      version: pricing.version\n    };\n    cancelRfq({\n      updateRequest: cancelRfqRequest,\n      pricingId: pricing.id,\n      operationName: PricingOperations.CancelRfq\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(LumaButton, {\n    variant: \"tertiary_negative\",\n    size: \"x_small\",\n    disabled: isMutationPending,\n    onClick: cancelRfqHandler,\n    fullWidth: true,\n    \"data-testid\": `button-cancel`,\n    children: \"Cancel\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n}\nexport function newRfqAction({\n  pricing: {\n    state\n  },\n  rfqType\n}) {\n  if (state === PricingState.InProgress) {\n    const dropdownItems = {\n      INDICATIVE: {\n        label: 'INDICATIVE',\n        value: RfqTypeEnum.INDICATIVE\n      },\n      LIVE: {\n        label: 'LIVE',\n        value: RfqTypeEnum.LIVE\n      },\n      MANUAL: {\n        label: 'MANUAL',\n        value: RfqTypeEnum.MANUAL\n      }\n    };\n    return dropdownItems[rfqType];\n  } else {\n    return null;\n  }\n}\nexport function getRfqAction({\n  rfqIssuer: {\n    actions,\n    rfq,\n    issuerId\n  },\n  pricing,\n  updatePricing,\n  isMutationPending,\n  cancelRfq,\n  createRfq\n}) {\n  const availableActions = [];\n  const newRfqActions = [];\n\n  if ((pricing == null ? void 0 : pricing.state) === PricingState.Cancelled) {\n    return null;\n  }\n\n  for (const action of actions) {\n    switch (action) {\n      case RfqClientAction.REQUEST_TRADE:\n        availableActions.push(tradeAction(rfq, pricing, updatePricing, isMutationPending));\n        break;\n\n      case RfqClientAction.REQUEST_FOR_INDICATIVE_QUOTE:\n        newRfqActions.push(newRfqAction({\n          pricing,\n          rfqType: RfqTypeEnum.INDICATIVE\n        }));\n        break;\n\n      case RfqClientAction.REQUEST_FOR_LIVE_QUOTE:\n        newRfqActions.push(newRfqAction({\n          pricing,\n          rfqType: RfqTypeEnum.LIVE\n        }));\n        break;\n\n      case RfqClientAction.REQUEST_FOR_MANUAL_QUOTE:\n        newRfqActions.push(newRfqAction({\n          pricing,\n          rfqType: RfqTypeEnum.MANUAL\n        }));\n        break;\n\n      case RfqClientAction.REQUEST_PRE_TRADE_CANCEL:\n        availableActions.push(preTradeCancelActions(rfq, pricing, updatePricing, isMutationPending));\n        break;\n\n      case RfqClientAction.CANCEL_REQUEST:\n        availableActions.push(preQuoteCancelActions(rfq, pricing, isMutationPending, cancelRfq));\n        break;\n\n      case RfqClientAction.REQUEST_POST_TRADE_CANCEL:\n        availableActions.push(postTradeCancelActions(rfq, pricing, updatePricing, isMutationPending, 'Cancel'));\n        break;\n\n      case RfqClientAction.ACCEPT_POST_TRADE_CANCEL:\n        availableActions.push(postTradeCancelActions(rfq, pricing, updatePricing, isMutationPending, 'Accept'));\n        break;\n\n      case RfqClientAction.REJECT_POST_TRADE_CANCEL:\n        availableActions.push(postTradeCancelActions(rfq, pricing, updatePricing, isMutationPending, 'Reject'));\n        break;\n    }\n  }\n\n  const dropdownItems = newRfqActions.filter(action => action !== null);\n\n  if (dropdownItems.length > 0) {\n    availableActions.push(newRequestDropDown({\n      dropdownItems,\n      issuerId,\n      version: pricing.version,\n      pricingId: pricing.id,\n      createRfq,\n      isMutationPending\n    }));\n  }\n\n  if (availableActions.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: availableActions\n  }, void 0, false);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidUntilTimer\");","map":{"version":3,"names":["useTimer","PricingOperations","PricingState","RfqCancelRequestInitiator","RfqClientAction","RfqState","RfqTypeEnum","LumaButton","LumaButtonDropdown","barcLogo","bnpLogo","bofaLogo","msLogo","socgenLogo","citiLogo","cibcLogo","csLogo","rbcLogo","ubsLogo","QuoteStatusIcon","issuersDisplayData","Barclays","icon","BANK_OF_AMERICA","BNP","MORGAN_STANLEY","SocGen","RBC","UBS","getRfqStatus","rfq","isAPI","state","TRADED","cancelRequestedBy","quote","CLIENT","ISSUER","QUOTE_REQUESTED","REQUEST_CANCELLED","QUOTE_REJECTED","message","QUOTED_INDICATIVE","QUOTED_TRADABLE","TRADE_REQUESTED","cancelRequestedByClient","TRADE_REJECTED","TRADING_CANCELLED","TRADE_CANCELLED","ACCEPT_POST_TRADE_CANCEL","ACCEPT_PRE_TRADE_CANCEL","getRfqDisplayType","type","formatTypeLabel","t1","slice","toUpperCase","t2","toLowerCase","formatDisplayedDate","date","map","datePart","toString","replace","ValidUntilTimer","expiryTimestamp","seconds","minutes","hours","days","newRequestDropDown","dropdownItems","issuerId","version","pricingId","createRfq","isMutationPending","createRfqHandler","rfqType","createRfqRequest","issuer","updateRequest","operationName","CreateRfq","item","value","postTradeCancelActions","pricing","updatePricing","action","id","rfqId","postTradeCancelAcceptHandler","AcceptPostTradeCancellation","postTradeCancelRejectHandler","RejectPostTradeCancellation","postTradeCancelHandler","RequestPostTradeCancellation","preTradeCancelActions","preTradeCancelHandler","RequestPreTradeCancellation","tradeAction","validUntilTimestamp","validUntilDate","Date","undefined","hasTimeout","expired","canTrade","InProgress","tradeHandler","RequestTrade","preQuoteCancelActions","cancelRfq","cancelRfqHandler","cancelRfqRequest","CancelRfq","newRfqAction","INDICATIVE","label","LIVE","MANUAL","getRfqAction","rfqIssuer","actions","availableActions","newRfqActions","Cancelled","REQUEST_TRADE","push","REQUEST_FOR_INDICATIVE_QUOTE","REQUEST_FOR_LIVE_QUOTE","REQUEST_FOR_MANUAL_QUOTE","REQUEST_PRE_TRADE_CANCEL","CANCEL_REQUEST","REQUEST_POST_TRADE_CANCEL","REJECT_POST_TRADE_CANCEL","filter","length"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/creationhub/src/components/PricingForm/groups/Quoting/QuotingUtils.tsx"],"sourcesContent":["import { useTimer } from 'react-timer-hook';\nimport {\n  IssuerId,\n  PricingInProgress,\n  PricingOperations,\n  PricingState,\n  Rfq,\n  RfqCancelRequestInitiator,\n  RfqClientAction,\n  RfqIssuer,\n  RfqQuotedIndicative,\n  RfqQuotedTradable,\n  RfqQuoteRejected,\n  RfqTradeRejected,\n  RfqQuoteRequested,\n  RfqState,\n  RfqTradeCancelled,\n  RfqTraded,\n  RfqTradeRequested,\n  RfqTradingCancelled,\n  RfqTypeEnum,\n  UpdatePricingUsingPostApiArg,\n} from '@luma-fe-workspace/redux';\nimport {\n  LumaButton,\n  LumaButtonDropdown,\n} from '@luma-fe-workspace/design-system';\nimport {\n  barcLogo,\n  bnpLogo,\n  bofaLogo,\n  msLogo,\n  socgenLogo,\n  citiLogo,\n  cibcLogo,\n  csLogo,\n  rbcLogo,\n  ubsLogo,\n} from '../../../../assets/logos';\nimport { QuoteStatusIcon } from './Quoting.styles';\n\ntype IssuerDisplayData = {\n  label?: string;\n  icon?: string;\n};\n\n// TODO proper data have to be extracted and filled once issuers specification is complete\nexport const issuersDisplayData: Record<IssuerId, IssuerDisplayData> = {\n  Barclays: { icon: barcLogo },\n  BANK_OF_AMERICA: { icon: bofaLogo },\n  BNP: { icon: bnpLogo },\n  MORGAN_STANLEY: { icon: msLogo },\n  SocGen: { icon: socgenLogo },\n  RBC: { icon: rbcLogo },\n  'Citi Bank': { icon: citiLogo },\n  'Canadian Imperial Bank of Commerce': { icon: cibcLogo },\n  'Credit Suisse': { icon: csLogo },\n  UBS: { icon: ubsLogo },\n};\n\nexport function getRfqStatus(rfq: Rfq) {\n  if (!rfq) {\n    return null;\n  }\n\n  const icon = rfq.isAPI ? (\n    <QuoteStatusIcon iconCode=\"arrows-rotate\" type=\"regular\" />\n  ) : (\n    <QuoteStatusIcon iconCode=\"user-clock\" type=\"solid\" />\n  );\n\n  switch (rfq.state) {\n    case RfqState.TRADED: {\n      const { cancelRequestedBy, quote } = rfq as RfqTraded;\n      if (cancelRequestedBy === RfqCancelRequestInitiator.CLIENT) {\n        return `${quote} Requesting Trade Cancellation`;\n      } else if (cancelRequestedBy === RfqCancelRequestInitiator.ISSUER) {\n        return `${quote} Traded - Cancel Requested`;\n      } else {\n        return `${quote} Traded`;\n      }\n    }\n    case RfqState.QUOTE_REQUESTED:\n      return icon;\n    case RfqState.REQUEST_CANCELLED:\n      return 'Cancelled';\n    case RfqState.QUOTE_REJECTED:\n      return `Quote Rejected: ${(rfq as RfqQuoteRejected).message}`;\n    case RfqState.QUOTED_INDICATIVE:\n      return (rfq as RfqQuotedIndicative).quote;\n    case RfqState.QUOTED_TRADABLE:\n      return (rfq as RfqQuotedTradable).quote;\n    case RfqState.TRADE_REQUESTED: {\n      const { cancelRequestedByClient, quote } = rfq as RfqTradeRequested;\n      if (cancelRequestedByClient) {\n        return `${quote} Trading - Cancel Requested`;\n      } else {\n        return `${quote} Trade requested...`;\n      }\n    }\n    case RfqState.TRADE_REJECTED: {\n      const { message, quote } = rfq as RfqTradeRejected;\n      return `${quote} Trade Rejected: ${message}`;\n    }\n    case RfqState.TRADING_CANCELLED:\n      return `${(rfq as RfqTradingCancelled).quote} Trading - Cancelled`;\n    case RfqState.TRADE_CANCELLED:\n      return `${(rfq as RfqTradeCancelled).quote} Traded - Cancelled`;\n    case RfqState.ACCEPT_POST_TRADE_CANCEL:\n      return `${(rfq as RfqTradeCancelled).quote} Traded - Cancelled`;\n    case RfqState.ACCEPT_PRE_TRADE_CANCEL:\n      return `${(rfq as RfqTradingCancelled).quote} Trading - Cancelled`;\n    default:\n      return null;\n  }\n}\n\nexport function getRfqDisplayType(\n  state: RfqState | undefined,\n  type: RfqTypeEnum | undefined\n) {\n  switch (state) {\n    case RfqState.QUOTED_INDICATIVE:\n      return 'Indicative';\n    case RfqState.QUOTED_TRADABLE:\n      return 'LIVE';\n    default:\n      return type ?? '';\n  }\n}\n\nexport function formatTypeLabel(type: keyof typeof RfqTypeEnum) {\n  const t1 = type.slice(0, 1).toUpperCase();\n  const t2 = type.slice(1).toLowerCase();\n  return t1 + t2;\n}\n\nexport function formatDisplayedDate(date: number[]) {\n  return date\n    .map((datePart) => {\n      if (datePart < 10) {\n        return `0${datePart}`;\n      }\n      return datePart.toString();\n    })\n    .toString()\n    .replace(/,/g, ':');\n}\n\nexport function ValidUntilTimer({\n  expiryTimestamp,\n}: {\n  expiryTimestamp: Date;\n}) {\n  const { seconds, minutes, hours, days } = useTimer({\n    expiryTimestamp,\n  });\n\n  return <>({formatDisplayedDate([days, hours, minutes, seconds])})</>;\n}\n\ntype GetRfqActionParams = {\n  rfqIssuer: RfqIssuer;\n  pricing: PricingInProgress;\n  updatePricing: (body: UpdatePricingUsingPostApiArg) => void;\n  isMutationPending: boolean;\n  cancelRfq: (body: UpdatePricingUsingPostApiArg) => void;\n  createRfq: (body: UpdatePricingUsingPostApiArg) => void;\n};\n\nexport function newRequestDropDown({\n  dropdownItems,\n  issuerId,\n  version,\n  pricingId,\n  createRfq,\n  isMutationPending,\n}: {\n  dropdownItems: Array<{ label: string; value: RfqTypeEnum }>;\n  issuerId: string;\n  version: string;\n  pricingId: string;\n  createRfq: (body: UpdatePricingUsingPostApiArg) => void;\n  isMutationPending: boolean;\n}) {\n  const createRfqHandler = (rfqType: RfqTypeEnum) => {\n    const createRfqRequest = {\n      issuer: issuerId,\n      rfqType,\n      version,\n    };\n    createRfq({\n      updateRequest: createRfqRequest,\n      pricingId,\n      operationName: PricingOperations.CreateRfq,\n    });\n  };\n  return (\n    <LumaButtonDropdown\n      id={pricingId}\n      onChangeDropdown={(item) => {\n        if (!item) {\n          return;\n        }\n        createRfqHandler(item.value as RfqTypeEnum);\n      }}\n      disabled={isMutationPending}\n      variant=\"secondary\"\n      size=\"x_small\"\n      dropdownItems={dropdownItems}\n      type=\"button\"\n      fullWidth={true}\n    >\n      Actions\n    </LumaButtonDropdown>\n  );\n}\n\nexport function postTradeCancelActions(\n  rfq: RfqTraded,\n  pricing: PricingInProgress,\n  updatePricing: (body: UpdatePricingUsingPostApiArg) => void,\n  isMutationPending: boolean,\n  action: 'Accept' | 'Reject' | 'Cancel'\n) {\n  const { id: rfqId } = rfq;\n  switch (action) {\n    case 'Accept': {\n      const postTradeCancelAcceptHandler = () => {\n        const updateRequest = {\n          rfqId,\n          version: pricing.version,\n        };\n        updatePricing({\n          updateRequest,\n          pricingId: pricing.id,\n          operationName: PricingOperations.AcceptPostTradeCancellation,\n        });\n      };\n      return (\n        <LumaButton\n          variant=\"tertiary_positive\"\n          size=\"x_small\"\n          onClick={postTradeCancelAcceptHandler}\n          disabled={isMutationPending}\n          fullWidth={true}\n        >\n          Accept\n        </LumaButton>\n      );\n    }\n    case 'Reject': {\n      const postTradeCancelRejectHandler = () => {\n        const updateRequest = {\n          rfqId,\n          version: pricing.version,\n        };\n        updatePricing({\n          updateRequest,\n          pricingId: pricing.id,\n          operationName: PricingOperations.RejectPostTradeCancellation,\n        });\n      };\n      return (\n        <LumaButton\n          variant=\"tertiary_negative\"\n          size=\"x_small\"\n          onClick={postTradeCancelRejectHandler}\n          disabled={isMutationPending}\n          fullWidth={true}\n          data-testid=\"button-reject\"\n        >\n          Reject\n        </LumaButton>\n      );\n    }\n    case 'Cancel': {\n      const postTradeCancelHandler = () => {\n        const updateRequest = {\n          rfqId,\n          version: pricing.version,\n        };\n        updatePricing({\n          updateRequest,\n          pricingId: pricing.id,\n          operationName: PricingOperations.RequestPostTradeCancellation,\n        });\n      };\n      return (\n        <LumaButton\n          variant=\"tertiary_negative\"\n          size=\"x_small\"\n          onClick={postTradeCancelHandler}\n          disabled={isMutationPending}\n          fullWidth={true}\n          data-testid={`button-cancel`}\n        >\n          Cancel\n        </LumaButton>\n      );\n    }\n    default:\n      return null;\n  }\n}\n\nexport function preTradeCancelActions(\n  rfq: RfqTradeRequested,\n  pricing: PricingInProgress,\n  updatePricing: (body: UpdatePricingUsingPostApiArg) => void,\n  isMutationPending: boolean\n) {\n  const { id: rfqId, cancelRequestedByClient } = rfq;\n  const preTradeCancelHandler = () => {\n    const updateRequest = {\n      rfqId,\n      version: pricing.version,\n    };\n    updatePricing({\n      updateRequest,\n      pricingId: pricing.id,\n      operationName: PricingOperations.RequestPreTradeCancellation,\n    });\n  };\n  if (!cancelRequestedByClient) {\n    return (\n      <LumaButton\n        variant=\"tertiary_negative\"\n        size=\"x_small\"\n        onClick={preTradeCancelHandler}\n        disabled={isMutationPending}\n        fullWidth={true}\n        data-testid={`button-cancel`}\n      >\n        Cancel\n      </LumaButton>\n    );\n  }\n  return null;\n}\n\nexport function tradeAction(\n  rfq: RfqQuotedTradable,\n  pricing: PricingInProgress,\n  updatePricing: (body: UpdatePricingUsingPostApiArg) => void,\n  isMutationPending: boolean\n) {\n  const { id: rfqId, validUntilTimestamp } = rfq;\n  const validUntilDate = validUntilTimestamp\n    ? new Date(validUntilTimestamp)\n    : undefined;\n\n  const hasTimeout = validUntilDate !== undefined;\n  const expired = validUntilDate !== undefined && validUntilDate < new Date();\n  const canTrade = !expired && pricing.state === PricingState.InProgress;\n\n  const tradeHandler = () => {\n    const updateRequest = {\n      rfqId,\n      version: pricing.version,\n    };\n    updatePricing({\n      updateRequest,\n      pricingId: pricing.id,\n      operationName: PricingOperations.RequestTrade,\n    });\n  };\n\n  return (\n    <>\n      {canTrade && (\n        <LumaButton\n          variant=\"tertiary_positive\"\n          size=\"x_small\"\n          disabled={isMutationPending}\n          onClick={tradeHandler}\n          fullWidth={true}\n        >\n          Trade{' '}\n          {hasTimeout &&\n            (expired ? (\n              'expired'\n            ) : (\n              <ValidUntilTimer expiryTimestamp={validUntilDate} />\n            ))}\n        </LumaButton>\n      )}\n      {expired && hasTimeout && 'Expired'}\n    </>\n  );\n}\n\nexport function preQuoteCancelActions(\n  rfq: RfqQuoteRequested,\n  pricing: PricingInProgress,\n  isMutationPending: boolean,\n  cancelRfq: (body: UpdatePricingUsingPostApiArg) => void\n) {\n  const { id: rfqId } = rfq;\n  const cancelRfqHandler = () => {\n    const cancelRfqRequest = {\n      rfqId,\n      version: pricing.version,\n    };\n    cancelRfq({\n      updateRequest: cancelRfqRequest,\n      pricingId: pricing.id,\n      operationName: PricingOperations.CancelRfq,\n    });\n  };\n\n  return (\n    <LumaButton\n      variant=\"tertiary_negative\"\n      size=\"x_small\"\n      disabled={isMutationPending}\n      onClick={cancelRfqHandler}\n      fullWidth={true}\n      data-testid={`button-cancel`}\n    >\n      Cancel\n    </LumaButton>\n  );\n}\n\nexport function newRfqAction({\n  pricing: { state },\n  rfqType,\n}: {\n  pricing: PricingInProgress;\n  rfqType: RfqTypeEnum;\n}) {\n  if (state === PricingState.InProgress) {\n    const dropdownItems = {\n      INDICATIVE: {\n        label: 'INDICATIVE',\n        value: RfqTypeEnum.INDICATIVE,\n      },\n      LIVE: {\n        label: 'LIVE',\n        value: RfqTypeEnum.LIVE,\n      },\n      MANUAL: {\n        label: 'MANUAL',\n        value: RfqTypeEnum.MANUAL,\n      },\n    };\n    return dropdownItems[rfqType];\n  } else {\n    return null;\n  }\n}\n\nexport function getRfqAction({\n  rfqIssuer: { actions, rfq, issuerId },\n  pricing,\n  updatePricing,\n  isMutationPending,\n  cancelRfq,\n  createRfq,\n}: GetRfqActionParams): string | JSX.Element | null {\n  const availableActions: Array<JSX.Element | null> = [];\n  const newRfqActions: Array<{ label: string; value: RfqTypeEnum } | null> = [];\n  if (pricing?.state === PricingState.Cancelled) {\n    return null;\n  }\n  for (const action of actions) {\n    switch (action) {\n      case RfqClientAction.REQUEST_TRADE:\n        availableActions.push(\n          tradeAction(\n            rfq as RfqQuotedTradable,\n            pricing,\n            updatePricing,\n            isMutationPending\n          )\n        );\n        break;\n      case RfqClientAction.REQUEST_FOR_INDICATIVE_QUOTE:\n        newRfqActions.push(\n          newRfqAction({\n            pricing,\n            rfqType: RfqTypeEnum.INDICATIVE,\n          })\n        );\n        break;\n      case RfqClientAction.REQUEST_FOR_LIVE_QUOTE:\n        newRfqActions.push(\n          newRfqAction({\n            pricing,\n            rfqType: RfqTypeEnum.LIVE,\n          })\n        );\n        break;\n      case RfqClientAction.REQUEST_FOR_MANUAL_QUOTE:\n        newRfqActions.push(\n          newRfqAction({\n            pricing,\n            rfqType: RfqTypeEnum.MANUAL,\n          })\n        );\n        break;\n      case RfqClientAction.REQUEST_PRE_TRADE_CANCEL:\n        availableActions.push(\n          preTradeCancelActions(\n            rfq as RfqTradeRequested,\n            pricing,\n            updatePricing,\n            isMutationPending\n          )\n        );\n        break;\n      case RfqClientAction.CANCEL_REQUEST:\n        availableActions.push(\n          preQuoteCancelActions(\n            rfq as RfqQuoteRequested,\n            pricing,\n            isMutationPending,\n            cancelRfq\n          )\n        );\n        break;\n      case RfqClientAction.REQUEST_POST_TRADE_CANCEL:\n        availableActions.push(\n          postTradeCancelActions(\n            rfq as RfqTraded,\n            pricing,\n            updatePricing,\n            isMutationPending,\n            'Cancel'\n          )\n        );\n        break;\n      case RfqClientAction.ACCEPT_POST_TRADE_CANCEL:\n        availableActions.push(\n          postTradeCancelActions(\n            rfq as RfqTraded,\n            pricing,\n            updatePricing,\n            isMutationPending,\n            'Accept'\n          )\n        );\n        break;\n      case RfqClientAction.REJECT_POST_TRADE_CANCEL:\n        availableActions.push(\n          postTradeCancelActions(\n            rfq as RfqTraded,\n            pricing,\n            updatePricing,\n            isMutationPending,\n            'Reject'\n          )\n        );\n        break;\n    }\n  }\n  const dropdownItems = newRfqActions.filter(\n    (action) => action !== null\n  ) as Array<{ label: string; value: RfqTypeEnum }>;\n  if (dropdownItems.length > 0) {\n    availableActions.push(\n      newRequestDropDown({\n        dropdownItems,\n        issuerId,\n        version: pricing.version,\n        pricingId: pricing.id,\n        createRfq,\n        isMutationPending,\n      })\n    );\n  }\n  if (availableActions.length === 0) {\n    return null;\n  }\n  return <>{availableActions}</>;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}