{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport \"core-js/modules/es.promise.js\";\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { logout } from '../../redux/auth/actions';\nimport { isLoggedIn, selectAuth } from '../../redux/auth/selector';\nimport store from '../../redux/configureStore';\nimport { useAppDispatch } from '../../utils/hooks';\nexport const SessionTimeout = () => {\n  _s();\n\n  const interval = 5000;\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const intervalChecker = setInterval(async () => {\n      const auth = selectAuth(store.getState());\n      const loginStatus = isLoggedIn(store.getState());\n\n      if (auth !== null && loginStatus === false) {\n        await dispatch(logout()).then(() => navigate('/'));\n      }\n    }, interval);\n    return () => clearInterval(intervalChecker); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return null;\n};\n\n_s(SessionTimeout, \"HY24ZxLhdJOc2UkMnu7py8t+Qb8=\", false, function () {\n  return [useAppDispatch, useNavigate];\n});\n\n_c = SessionTimeout;\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionTimeout\");","map":{"version":3,"names":["useNavigate","useEffect","logout","isLoggedIn","selectAuth","store","useAppDispatch","SessionTimeout","interval","dispatch","navigate","intervalChecker","setInterval","auth","getState","loginStatus","then","clearInterval"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/components/SessionTimeout/SessionTimeout.tsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { logout } from '../../redux/auth/actions';\nimport { isLoggedIn, selectAuth } from '../../redux/auth/selector';\nimport store, { RootState } from '../../redux/configureStore';\nimport { useAppDispatch } from '../../utils/hooks';\n\nexport const SessionTimeout = () => {\n  const interval = 5000;\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const intervalChecker = setInterval(async () => {\n      const auth = selectAuth(store.getState() as RootState);\n      const loginStatus = isLoggedIn(store.getState() as RootState);\n      if (auth !== null && loginStatus === false) {\n        await dispatch(logout()).then(() => navigate('/'));\n      }\n    }, interval);\n    return () => clearInterval(intervalChecker);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return null;\n};\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,2BAAvC;AACA,OAAOC,KAAP,MAAiC,4BAAjC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAClC,MAAMC,QAAQ,GAAG,IAAjB;EACA,MAAMC,QAAQ,GAAGH,cAAc,EAA/B;EACA,MAAMI,QAAQ,GAAGV,WAAW,EAA5B;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMU,eAAe,GAAGC,WAAW,CAAC,YAAY;MAC9C,MAAMC,IAAI,GAAGT,UAAU,CAACC,KAAK,CAACS,QAAN,EAAD,CAAvB;MACA,MAAMC,WAAW,GAAGZ,UAAU,CAACE,KAAK,CAACS,QAAN,EAAD,CAA9B;;MACA,IAAID,IAAI,KAAK,IAAT,IAAiBE,WAAW,KAAK,KAArC,EAA4C;QAC1C,MAAMN,QAAQ,CAACP,MAAM,EAAP,CAAR,CAAmBc,IAAnB,CAAwB,MAAMN,QAAQ,CAAC,GAAD,CAAtC,CAAN;MACD;IACF,CANkC,EAMhCF,QANgC,CAAnC;IAOA,OAAO,MAAMS,aAAa,CAACN,eAAD,CAA1B,CARc,CASd;EACD,CAVQ,EAUN,EAVM,CAAT;EAYA,OAAO,IAAP;AACD,CAlBM;;GAAMJ,c;UAEMD,c,EACAN,W;;;KAHNO,c"},"metadata":{},"sourceType":"module"}