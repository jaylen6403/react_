{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/components/Insights/ProductTypesWidget/ProductTypesWidget.tsx\",\n    _s = $RefreshSig$();\n\nimport { useGetProductTypesUsingGetQuery } from '@luma-fe-workspace/redux';\nimport { Card } from '@luma-fe-workspace/design-system';\nimport { ChartTableWrapper, Header, StyledProductTypesBody, StyledProductTypesWidget, Title } from './ProductTypesWidget.styles';\nimport { BarChart } from './BarChart';\nimport { InfoTooltip } from '../Tooltip/Tooltip';\nimport { Spinner } from '../../Spinner/Spinner';\nimport { EmptyInsights } from '../EmptyInsights/EmptyInsights';\nimport { ProductTypesTable } from './ProductTypesTable/ProductTypesTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductTypesWidget = ({\n  screenWidth\n}) => {\n  _s();\n\n  const {\n    data: tableData,\n    isError,\n    isLoading\n  } = useGetProductTypesUsingGetQuery();\n  const isSmall = screenWidth >= 1440;\n\n  const returnWidgetBody = () => {\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(StyledProductTypesWidget, {\n        isSmall: isSmall ? true : false,\n        children: /*#__PURE__*/_jsxDEV(EmptyInsights, {\n          text: \"No data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(StyledProductTypesWidget, {\n        isSmall: isSmall ? true : false,\n        children: /*#__PURE__*/_jsxDEV(StyledProductTypesBody, {\n          children: /*#__PURE__*/_jsxDEV(ChartTableWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(BarChart, {\n              data: tableData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProductTypesTable, {\n              data: tableData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    flexDirection: \"column\",\n    backgroundColor: \"transparent\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        id: \"Pod1\",\n        children: \"Product Types By Luma Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        tooltipText: \"View our top product types within Product Marketplace\",\n        wrapperId: \"Pod1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 20\n    }, this) : returnWidgetBody()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductTypesWidget, \"3FOsYFsjglD1lu5kYPumG1FHszI=\", false, function () {\n  return [useGetProductTypesUsingGetQuery];\n});\n\n_c = ProductTypesWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductTypesWidget\");","map":{"version":3,"names":["useGetProductTypesUsingGetQuery","Card","ChartTableWrapper","Header","StyledProductTypesBody","StyledProductTypesWidget","Title","BarChart","InfoTooltip","Spinner","EmptyInsights","ProductTypesTable","ProductTypesWidget","screenWidth","data","tableData","isError","isLoading","isSmall","returnWidgetBody"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/components/Insights/ProductTypesWidget/ProductTypesWidget.tsx"],"sourcesContent":["import { useGetProductTypesUsingGetQuery } from '@luma-fe-workspace/redux';\nimport { Card } from '@luma-fe-workspace/design-system';\nimport {\n  ChartTableWrapper,\n  Header,\n  StyledProductTypesBody,\n  StyledProductTypesWidget,\n  Title,\n} from './ProductTypesWidget.styles';\nimport { BarChart } from './BarChart';\nimport { InfoTooltip } from '../Tooltip/Tooltip';\nimport { Spinner } from '../../Spinner/Spinner';\nimport { EmptyInsights } from '../EmptyInsights/EmptyInsights';\nimport { ProductTypesTable } from './ProductTypesTable/ProductTypesTable';\n\ninterface Props {\n  screenWidth: number;\n}\n\nexport const ProductTypesWidget = ({ screenWidth }: Props) => {\n  const {\n    data: tableData,\n    isError,\n    isLoading,\n  } = useGetProductTypesUsingGetQuery();\n\n  const isSmall = screenWidth >= 1440;\n\n  const returnWidgetBody = () => {\n    if (isError) {\n      return (\n        <StyledProductTypesWidget isSmall={isSmall ? true : false}>\n          <EmptyInsights text=\"No data available\"></EmptyInsights>\n        </StyledProductTypesWidget>\n      );\n    } else {\n      return (\n        <StyledProductTypesWidget isSmall={isSmall ? true : false}>\n          <StyledProductTypesBody>\n            <ChartTableWrapper>\n              <BarChart data={tableData} />\n              <ProductTypesTable data={tableData} />\n            </ChartTableWrapper>\n          </StyledProductTypesBody>\n        </StyledProductTypesWidget>\n      );\n    }\n  };\n\n  return (\n    <Card flexDirection=\"column\" backgroundColor=\"transparent\">\n      <Title>\n        <Header id=\"Pod1\">Product Types By Luma Volume</Header>\n        <InfoTooltip\n          tooltipText=\"View our top product types within Product Marketplace\"\n          wrapperId=\"Pod1\"\n        />\n      </Title>\n      {isLoading ? <Spinner /> : returnWidgetBody()}\n    </Card>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,+BAAT,QAAgD,0BAAhD;AACA,SAASC,IAAT,QAAqB,kCAArB;AACA,SACEC,iBADF,EAEEC,MAFF,EAGEC,sBAHF,EAIEC,wBAJF,EAKEC,KALF,QAMO,6BANP;AAOA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,iBAAT,QAAkC,uCAAlC;;AAMA,OAAO,MAAMC,kBAAkB,GAAG,CAAC;EAAEC;AAAF,CAAD,KAA4B;EAAA;;EAC5D,MAAM;IACJC,IAAI,EAAEC,SADF;IAEJC,OAFI;IAGJC;EAHI,IAIFjB,+BAA+B,EAJnC;EAMA,MAAMkB,OAAO,GAAGL,WAAW,IAAI,IAA/B;;EAEA,MAAMM,gBAAgB,GAAG,MAAM;IAC7B,IAAIH,OAAJ,EAAa;MACX,oBACE,QAAC,wBAAD;QAA0B,OAAO,EAAEE,OAAO,GAAG,IAAH,GAAU,KAApD;QAAA,uBACE,QAAC,aAAD;UAAe,IAAI,EAAC;QAApB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IAKD,CAND,MAMO;MACL,oBACE,QAAC,wBAAD;QAA0B,OAAO,EAAEA,OAAO,GAAG,IAAH,GAAU,KAApD;QAAA,uBACE,QAAC,sBAAD;UAAA,uBACE,QAAC,iBAAD;YAAA,wBACE,QAAC,QAAD;cAAU,IAAI,EAAEH;YAAhB;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,iBAAD;cAAmB,IAAI,EAAEA;YAAzB;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IAUD;EACF,CAnBD;;EAqBA,oBACE,QAAC,IAAD;IAAM,aAAa,EAAC,QAApB;IAA6B,eAAe,EAAC,aAA7C;IAAA,wBACE,QAAC,KAAD;MAAA,wBACE,QAAC,MAAD;QAAQ,EAAE,EAAC,MAAX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,WAAD;QACE,WAAW,EAAC,uDADd;QAEE,SAAS,EAAC;MAFZ;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAQGE,SAAS,gBAAG,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAH,GAAiBE,gBAAgB,EAR7C;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA1CM;;GAAMP,kB;UAKPZ,+B;;;KALOY,kB"},"metadata":{},"sourceType":"module"}