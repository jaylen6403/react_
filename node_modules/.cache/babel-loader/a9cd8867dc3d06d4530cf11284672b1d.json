{"ast":null,"code":"import Cookies from 'js-cookie';\nimport { isLocal } from '@luma-fe-workspace/common';\nexport const getTokenFromProxy = () => {\n  const USER_TOKEN = 'user_token';\n  const initialToken = Cookies.get(USER_TOKEN); //if in local dev, cookie persists, if in deployed env cookie is removed\n\n  if (!isLocal) {\n    setTimeout(() => Cookies.remove(USER_TOKEN, {\n      path: '',\n      sameSite: 'strict',\n      secure: true\n    }), 1000);\n  }\n\n  return initialToken;\n};","map":{"version":3,"names":["Cookies","isLocal","getTokenFromProxy","USER_TOKEN","initialToken","get","setTimeout","remove","path","sameSite","secure"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/utils/getTokenFromProxy.ts"],"sourcesContent":["import Cookies from 'js-cookie';\nimport { isLocal } from '@luma-fe-workspace/common';\n\nexport const getTokenFromProxy = () => {\n  const USER_TOKEN = 'user_token';\n\n  const initialToken = Cookies.get(USER_TOKEN);\n\n  //if in local dev, cookie persists, if in deployed env cookie is removed\n  if (!isLocal) {\n    setTimeout(\n      () =>\n        Cookies.remove(USER_TOKEN, {\n          path: '',\n          sameSite: 'strict',\n          secure: true,\n        }),\n      1000\n    );\n  }\n\n  return initialToken;\n};\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;EACrC,MAAMC,UAAU,GAAG,YAAnB;EAEA,MAAMC,YAAY,GAAGJ,OAAO,CAACK,GAAR,CAAYF,UAAZ,CAArB,CAHqC,CAKrC;;EACA,IAAI,CAACF,OAAL,EAAc;IACZK,UAAU,CACR,MACEN,OAAO,CAACO,MAAR,CAAeJ,UAAf,EAA2B;MACzBK,IAAI,EAAE,EADmB;MAEzBC,QAAQ,EAAE,QAFe;MAGzBC,MAAM,EAAE;IAHiB,CAA3B,CAFM,EAOR,IAPQ,CAAV;EASD;;EAED,OAAON,YAAP;AACD,CAnBM"},"metadata":{},"sourceType":"module"}