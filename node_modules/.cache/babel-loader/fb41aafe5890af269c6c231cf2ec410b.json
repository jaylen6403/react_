{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/utils/hooks/useEventConfirmationOptions.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport React, { useState, useContext, createContext, useMemo, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let StatusOptions;\n\n(function (StatusOptions) {\n  StatusOptions[\"Success\"] = \"success\";\n  StatusOptions[\"Failure\"] = \"failure\";\n  StatusOptions[\"None\"] = \"none\";\n})(StatusOptions || (StatusOptions = {}));\n\nexport const eventConfirmationOptionsContext = /*#__PURE__*/createContext({\n  events: {\n    data: [],\n    setEvents: () => null\n  },\n  eventTypeFilter: {\n    value: [],\n    setFilter: () => null\n  },\n  eventStatusFilter: {\n    value: [],\n    setFilter: () => null\n  },\n  doFiltersExist: false,\n  resetFilters: () => {\n    /** do nothing */\n  },\n  searchFilter: {\n    value: [],\n    setFilter: () => null\n  },\n  opsModal: {\n    isOpen: false,\n    setOpen: () => null,\n    data: undefined,\n    setData: () => null\n  },\n  dateRangeFilter: {\n    startDate: null,\n    endDate: null,\n    setStartDate: () => null,\n    setEndDate: () => null\n  },\n  regTypeFilter: {\n    value: [],\n    setFilter: () => null\n  },\n  clientModal: {\n    data: undefined,\n    setData: () => null\n  },\n  toastData: {\n    open: false,\n    setOpen: () => null,\n    status: StatusOptions.None,\n    setStatus: () => null\n  }\n});\nexport const useEventConfirmationOptions = () => {\n  _s();\n\n  return useContext(eventConfirmationOptionsContext);\n};\n\n_s(useEventConfirmationOptions, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const ProvideEventConfirmationOptions = ({\n  children\n}) => {\n  _s2();\n\n  const options = useProvideEventConfirmationOptions();\n  return /*#__PURE__*/_jsxDEV(eventConfirmationOptionsContext.Provider, {\n    value: options,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ProvideEventConfirmationOptions, \"E9adwpJOC7DV3ZywXY5sDwA/kck=\", false, function () {\n  return [useProvideEventConfirmationOptions];\n});\n\n_c = ProvideEventConfirmationOptions;\n\nconst useProvideEventConfirmationOptions = () => {\n  _s3();\n\n  const [events, setEvents] = useState([]);\n  const [eventTypeFilter, setEventTypeFilter] = useState([]);\n  const [eventStatusFilter, setEventStatusFilter] = useState([]);\n  const [searchFilter, setSearchFilter] = useState(['']);\n  const [startDateRange, setStartDateRange] = useState(null);\n  const [endDateRange, setEndDateRange] = useState(null);\n  const [regTypeFilter, setRegTypeFilter] = useState([]);\n  const [opsModalOpen, setOpsModalOpen] = useState(false);\n  const [clientModalModalOpen, setClientModalOpen] = useState(undefined);\n  const [opsModalData, setOpsModalData] = useState(undefined);\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastStatus, setToastStatus] = useState(StatusOptions.None);\n  const doFiltersExist = useMemo(() => {\n    if (eventTypeFilter.length) return true;\n    if (eventStatusFilter.length) return true;\n    if (startDateRange) return true;\n    if (endDateRange) return true;\n    if (regTypeFilter.length) return true;\n    if (!searchFilter.every(value => value.length === 0) || searchFilter[0].length > 0) return true;\n    return false;\n  }, [eventTypeFilter, eventStatusFilter, searchFilter, startDateRange, endDateRange, regTypeFilter]);\n  const resetFilters = useCallback(() => {\n    setEventTypeFilter([]);\n    setEventStatusFilter([]);\n    setSearchFilter(['']);\n    setStartDateRange(null);\n    setEndDateRange(null);\n    setRegTypeFilter([]);\n  }, [setEventTypeFilter, setEventStatusFilter, setSearchFilter, setStartDateRange, setEndDateRange, setRegTypeFilter]);\n  return {\n    events: {\n      data: events,\n      setEvents\n    },\n    eventTypeFilter: {\n      value: eventTypeFilter,\n      setFilter: setEventTypeFilter\n    },\n    eventStatusFilter: {\n      value: eventStatusFilter,\n      setFilter: setEventStatusFilter\n    },\n    doFiltersExist,\n    resetFilters,\n    searchFilter: {\n      value: searchFilter,\n      setFilter: setSearchFilter\n    },\n    regTypeFilter: {\n      value: regTypeFilter,\n      setFilter: setRegTypeFilter\n    },\n    opsModal: {\n      isOpen: opsModalOpen,\n      setOpen: setOpsModalOpen,\n      data: opsModalData,\n      setData: setOpsModalData\n    },\n    clientModal: {\n      data: clientModalModalOpen,\n      setData: setClientModalOpen\n    },\n    dateRangeFilter: {\n      startDate: startDateRange,\n      endDate: endDateRange,\n      setStartDate: setStartDateRange,\n      setEndDate: setEndDateRange\n    },\n    toastData: {\n      open: toastOpen,\n      setOpen: setToastOpen,\n      status: toastStatus,\n      setStatus: setToastStatus\n    }\n  };\n};\n\n_s3(useProvideEventConfirmationOptions, \"ovS7nxbqdCkRI3VepHtDli1PgrE=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProvideEventConfirmationOptions\");","map":{"version":3,"names":["React","useState","useContext","createContext","useMemo","useCallback","StatusOptions","eventConfirmationOptionsContext","events","data","setEvents","eventTypeFilter","value","setFilter","eventStatusFilter","doFiltersExist","resetFilters","searchFilter","opsModal","isOpen","setOpen","undefined","setData","dateRangeFilter","startDate","endDate","setStartDate","setEndDate","regTypeFilter","clientModal","toastData","open","status","None","setStatus","useEventConfirmationOptions","ProvideEventConfirmationOptions","children","options","useProvideEventConfirmationOptions","setEventTypeFilter","setEventStatusFilter","setSearchFilter","startDateRange","setStartDateRange","endDateRange","setEndDateRange","setRegTypeFilter","opsModalOpen","setOpsModalOpen","clientModalModalOpen","setClientModalOpen","opsModalData","setOpsModalData","toastOpen","setToastOpen","toastStatus","setToastStatus","length","every"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/utils/hooks/useEventConfirmationOptions.tsx"],"sourcesContent":["import React, {\n  useState,\n  useContext,\n  createContext,\n  useMemo,\n  useCallback,\n  SetStateAction,\n} from 'react';\nimport { EventProductData } from '@luma-fe-workspace/redux';\n\nexport enum StatusOptions {\n  Success = 'success',\n  Failure = 'failure',\n  None = 'none',\n}\n\ninterface EventTypeFilter {\n  value: string[];\n  setFilter: React.Dispatch<string[]>;\n}\ninterface EventStatusFilter {\n  value: string[];\n  setFilter: React.Dispatch<string[]>;\n}\ninterface SearchFilter {\n  value: string[];\n  setFilter: React.Dispatch<string[]>;\n}\n\ninterface RegTypeFilter {\n  value: string[];\n  setFilter: React.Dispatch<string[]>;\n}\ninterface DateRangeFilter {\n  startDate: Date | null;\n  endDate: Date | null;\n  setStartDate: React.Dispatch<Date | null>;\n  setEndDate: React.Dispatch<Date | null>;\n}\ninterface Events {\n  data: EventProductData[];\n  setEvents: React.Dispatch<EventProductData[]>;\n}\ninterface OpsModal {\n  isOpen: boolean;\n  setOpen: React.Dispatch<SetStateAction<boolean>>;\n  data: EventProductData | undefined;\n  setData: React.Dispatch<SetStateAction<EventProductData | undefined>>;\n}\ninterface ClientModal {\n  data: EventProductData | undefined;\n  setData: React.Dispatch<SetStateAction<EventProductData | undefined>>;\n}\n\ninterface ToastData {\n  open: boolean;\n  setOpen: React.Dispatch<SetStateAction<boolean>>;\n  status: StatusOptions;\n  setStatus: React.Dispatch<SetStateAction<StatusOptions>>;\n}\ninterface EventConfirmationOptions {\n  events: Events;\n  eventTypeFilter: EventTypeFilter;\n  eventStatusFilter: EventStatusFilter;\n  regTypeFilter: RegTypeFilter;\n  // Are there currently filters selected? this must be in this hook so that we can conditionally display error messages\n  // based on no events pulled back, vs no events fit this critera\n  doFiltersExist: boolean;\n  resetFilters: () => void;\n  searchFilter: SearchFilter;\n  dateRangeFilter: DateRangeFilter;\n  opsModal: OpsModal;\n  clientModal: ClientModal;\n  toastData: ToastData;\n}\n\nexport const eventConfirmationOptionsContext =\n  createContext<EventConfirmationOptions>({\n    events: { data: [], setEvents: () => null },\n    eventTypeFilter: {\n      value: [],\n      setFilter: () => null,\n    },\n    eventStatusFilter: {\n      value: [],\n      setFilter: () => null,\n    },\n    doFiltersExist: false,\n    resetFilters: () => {\n      /** do nothing */\n    },\n    searchFilter: {\n      value: [],\n      setFilter: () => null,\n    },\n    opsModal: {\n      isOpen: false,\n      setOpen: () => null,\n      data: undefined,\n      setData: () => null,\n    },\n    dateRangeFilter: {\n      startDate: null,\n      endDate: null,\n      setStartDate: () => null,\n      setEndDate: () => null,\n    },\n    regTypeFilter: {\n      value: [],\n      setFilter: () => null,\n    },\n    clientModal: {\n      data: undefined,\n      setData: () => null,\n    },\n    toastData: {\n      open: false,\n      setOpen: () => null,\n      status: StatusOptions.None,\n      setStatus: () => null,\n    },\n  });\nexport const useEventConfirmationOptions = (): EventConfirmationOptions =>\n  useContext<EventConfirmationOptions>(eventConfirmationOptionsContext);\n\ninterface ContextProps {\n  children: React.ReactNode;\n}\nexport const ProvideEventConfirmationOptions = ({ children }: ContextProps) => {\n  const options = useProvideEventConfirmationOptions();\n  return (\n    <eventConfirmationOptionsContext.Provider value={options}>\n      {children}\n    </eventConfirmationOptionsContext.Provider>\n  );\n};\n\nconst useProvideEventConfirmationOptions = (): EventConfirmationOptions => {\n  const [events, setEvents] = useState<EventProductData[]>([]);\n  const [eventTypeFilter, setEventTypeFilter] = useState<string[]>([]);\n  const [eventStatusFilter, setEventStatusFilter] = useState<string[]>([]);\n  const [searchFilter, setSearchFilter] = useState<string[]>(['']);\n  const [startDateRange, setStartDateRange] = useState<Date | null>(null);\n  const [endDateRange, setEndDateRange] = useState<Date | null>(null);\n  const [regTypeFilter, setRegTypeFilter] = useState<string[]>([]);\n  const [opsModalOpen, setOpsModalOpen] = useState<boolean>(false);\n  const [clientModalModalOpen, setClientModalOpen] = useState<\n    EventProductData | undefined\n  >(undefined);\n  const [opsModalData, setOpsModalData] = useState<\n    EventProductData | undefined\n  >(undefined);\n  const [toastOpen, setToastOpen] = useState<boolean>(false);\n  const [toastStatus, setToastStatus] = useState<StatusOptions>(\n    StatusOptions.None\n  );\n\n  const doFiltersExist = useMemo(() => {\n    if (eventTypeFilter.length) return true;\n    if (eventStatusFilter.length) return true;\n    if (startDateRange) return true;\n    if (endDateRange) return true;\n    if (regTypeFilter.length) return true;\n    if (\n      !searchFilter.every((value) => value.length === 0) ||\n      searchFilter[0].length > 0\n    )\n      return true;\n    return false;\n  }, [\n    eventTypeFilter,\n    eventStatusFilter,\n    searchFilter,\n    startDateRange,\n    endDateRange,\n    regTypeFilter,\n  ]);\n  const resetFilters = useCallback(() => {\n    setEventTypeFilter([]);\n    setEventStatusFilter([]);\n    setSearchFilter(['']);\n    setStartDateRange(null);\n    setEndDateRange(null);\n    setRegTypeFilter([]);\n  }, [\n    setEventTypeFilter,\n    setEventStatusFilter,\n    setSearchFilter,\n    setStartDateRange,\n    setEndDateRange,\n    setRegTypeFilter,\n  ]);\n\n  return {\n    events: { data: events, setEvents },\n    eventTypeFilter: {\n      value: eventTypeFilter,\n      setFilter: setEventTypeFilter,\n    },\n    eventStatusFilter: {\n      value: eventStatusFilter,\n      setFilter: setEventStatusFilter,\n    },\n    doFiltersExist,\n    resetFilters,\n    searchFilter: {\n      value: searchFilter,\n      setFilter: setSearchFilter,\n    },\n    regTypeFilter: {\n      value: regTypeFilter,\n      setFilter: setRegTypeFilter,\n    },\n    opsModal: {\n      isOpen: opsModalOpen,\n      setOpen: setOpsModalOpen,\n      data: opsModalData,\n      setData: setOpsModalData,\n    },\n    clientModal: {\n      data: clientModalModalOpen,\n      setData: setClientModalOpen,\n    },\n    dateRangeFilter: {\n      startDate: startDateRange,\n      endDate: endDateRange,\n      setStartDate: setStartDateRange,\n      setEndDate: setEndDateRange,\n    },\n    toastData: {\n      open: toastOpen,\n      setOpen: setToastOpen,\n      status: toastStatus,\n      setStatus: setToastStatus,\n    },\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}