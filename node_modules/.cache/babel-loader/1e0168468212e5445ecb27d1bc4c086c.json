{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/AGGridTable/AGGridTable.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport React, { useRef, useCallback, useMemo, useEffect, useState } from 'react';\nimport 'ag-grid-enterprise/dist/styles/ag-grid.css';\nimport 'ag-grid-enterprise/dist/styles/ag-theme-alpine.css';\nimport { LicenseManager } from 'ag-grid-enterprise';\nimport { CustomAgGrid, EmptyCriteriaWarningDescription, EmptyCriteriaWarningDescriptionText } from './AGGridTable.styles';\nimport { useEventConfirmationOptions } from '../../utils/hooks/useEventConfirmationOptions';\nimport * as AGGridTableFilters from './AGGridTableFilters';\nimport { AGGridWarningPanel } from './AGGridWarningPanel';\nimport { formatEventType, ISODateToFormat } from '../../utils/gridUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nLicenseManager.setLicenseKey('CompanyName=Luma Financial Technologies, LLC,LicensedApplication=Luma,LicenseType=SingleApplication,LicensedConcurrentDeveloperCount=1,LicensedProductionInstancesCount=1,AssetReference=AG-017904,ExpiryDate=12_September_2022_[v2]_MTY2MjkzNzIwMDAwMA==fa6279babc79792e4bac4be842243ea3');\nexport let EventCalculationStatuses;\n\n(function (EventCalculationStatuses) {\n  EventCalculationStatuses[\"PENDING\"] = \"Pending Event\";\n  EventCalculationStatuses[\"UPCOMING\"] = \"Upcoming Event\";\n  EventCalculationStatuses[\"REVIEW\"] = \"Review\";\n  EventCalculationStatuses[\"CONFIRMED\"] = \"Confirmed\";\n  EventCalculationStatuses[\"NOT_MATURED\"] = \"Not Matured\";\n  EventCalculationStatuses[\"NOT_CALLED\"] = \"Not Called\";\n  EventCalculationStatuses[\"MISSED\"] = \"Missed\";\n  EventCalculationStatuses[\"UNKNOWN\"] = \"UNKNOWN\";\n})(EventCalculationStatuses || (EventCalculationStatuses = {}));\n\nexport let PrincipalProximity;\n\n(function (PrincipalProximity) {\n  PrincipalProximity[\"POSITIVE\"] = \"Positive\";\n  PrincipalProximity[\"NEGATIVE\"] = \"Negative\";\n})(PrincipalProximity || (PrincipalProximity = {}));\n\nexport const AGGridConfirmationsTable = ({\n  rowData,\n  columnData,\n  setModalOpen,\n  setModalData,\n  setProductStructure,\n  modalOpen,\n  modalData\n}) => {\n  _s();\n\n  const {\n    eventTypeFilter,\n    confirmationStatusFilter,\n    resetFilters,\n    doFiltersExist,\n    searchFilter,\n    dateRangeFilter,\n    regTypeFilter,\n    clientModal\n  } = useEventConfirmationOptions();\n  const [currentRowsDisplayed, setCurrentRowsDisplayed] = useState(0);\n  const gridRef = useRef(null); // Just returns true implying that there is an external filter,\n  // could probably be isExternalFilterPresent={()=>true}\n\n  const isExternalFilterPresent = useCallback(() => {\n    return true;\n  }, []);\n  useEffect(() => {\n    var _gridRef$current, _gridRef$current$api;\n\n    gridRef == null ? void 0 : (_gridRef$current = gridRef.current) == null ? void 0 : (_gridRef$current$api = _gridRef$current.api) == null ? void 0 : _gridRef$current$api.onFilterChanged();\n  }, [eventTypeFilter.value, confirmationStatusFilter.value, searchFilter.value, dateRangeFilter.startDate, dateRangeFilter.endDate, regTypeFilter.value]);\n  const doesExternalFilterPass = useCallback(({\n    data\n  }) => AGGridTableFilters.doesExternalFilterPass(data, eventTypeFilter.value, confirmationStatusFilter.value, searchFilter.value, dateRangeFilter.startDate, dateRangeFilter.endDate, regTypeFilter.value), [eventTypeFilter.value, confirmationStatusFilter.value, searchFilter.value, dateRangeFilter.startDate, dateRangeFilter.endDate, regTypeFilter.value]);\n  const defaultColDef = useMemo(() => ({\n    sortable: true,\n    filter: true,\n    resizable: false,\n    menuTabs: ['filterMenuTab']\n  }), []);\n  const gridOptions = {\n    suppressCellFocus: true\n  };\n  const windowResize = useCallback(gridOptions => {\n    if (window.innerWidth < 1440) {\n      var _gridOptions$columnAp;\n\n      (_gridOptions$columnAp = gridOptions.columnApi) == null ? void 0 : _gridOptions$columnAp.setColumnVisible('Structure', false);\n    } else {\n      var _gridOptions$columnAp2;\n\n      (_gridOptions$columnAp2 = gridOptions.columnApi) == null ? void 0 : _gridOptions$columnAp2.setColumnVisible('Structure', true);\n    }\n\n    if (window.innerWidth < 1024) {\n      var _gridOptions$columnAp3;\n\n      (_gridOptions$columnAp3 = gridOptions.columnApi) == null ? void 0 : _gridOptions$columnAp3.setColumnVisible('Underliers', false);\n    } else {\n      var _gridOptions$columnAp4;\n\n      (_gridOptions$columnAp4 = gridOptions.columnApi) == null ? void 0 : _gridOptions$columnAp4.setColumnVisible('Underliers', true);\n    }\n  }, []);\n  const onGridReady = useCallback(params => {\n    var _gridRef$current2;\n\n    window.addEventListener('resize', function () {\n      setTimeout(function () {\n        params.api.sizeColumnsToFit();\n      });\n    });\n    windowResize(gridOptions);\n    (_gridRef$current2 = gridRef.current) == null ? void 0 : _gridRef$current2.api.sizeColumnsToFit();\n    setCurrentRowsDisplayed(params.api.getDisplayedRowCount());\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [windowResize]);\n  const onFirstDataRendered = useCallback(params => {\n    var _gridRef$current3;\n\n    (_gridRef$current3 = gridRef.current) == null ? void 0 : _gridRef$current3.api.paginationSetPageSize(20);\n  }, []);\n  const cellClickedListener = useCallback(({\n    colDef,\n    data\n  }) => {\n    var _data$confirmationSta;\n\n    if (colDef.field === 'Event Calculation' && (data == null ? void 0 : (_data$confirmationSta = data.confirmationStatus) == null ? void 0 : _data$confirmationSta.status) !== EventCalculationStatuses.UPCOMING) {\n      if (setModalData && setModalOpen) {\n        setModalData(data == null ? void 0 : data.eventProductData);\n        setModalOpen(true);\n      }\n\n      if (setProductStructure) {\n        var _data$eventProductDat;\n\n        setProductStructure(data == null ? void 0 : (_data$eventProductDat = data.eventProductData) == null ? void 0 : _data$eventProductDat.structureNameInternal);\n      }\n    }\n  }, [setModalData, setModalOpen, setProductStructure]);\n  const onFilterChanged = useCallback(param => {\n    setCurrentRowsDisplayed(param.api.getDisplayedRowCount());\n  }, [setCurrentRowsDisplayed]);\n  const rowClassRules = useMemo(() => ({\n    'selected-row': ({\n      data\n    }) => {\n      var _clientModal$data, _clientModal$data2;\n\n      if (modalOpen && (data == null ? void 0 : data.cusip) === (modalData == null ? void 0 : modalData.productIdentifier) && (data == null ? void 0 : data['Event Date']) === ISODateToFormat(modalData == null ? void 0 : modalData.eventDate) && (data == null ? void 0 : data['Event Type']) === formatEventType(modalData == null ? void 0 : modalData.eventType)) return true;\n      if (clientModal.data && (data == null ? void 0 : data.cusip) === clientModal.data.productIdentifier && (data == null ? void 0 : data['Event Date']) === ISODateToFormat((_clientModal$data = clientModal.data) == null ? void 0 : _clientModal$data.eventDate) && (data == null ? void 0 : data['Event Type']) === formatEventType((_clientModal$data2 = clientModal.data) == null ? void 0 : _clientModal$data2.eventType)) return true;\n      return false;\n    }\n  }), [modalOpen, modalData, clientModal.data]); // This is added so that when the modal opens/closes the styling will be applied to highlight the selected row\n\n  useEffect(() => {\n    var _gridRef$current4, _gridRef$current4$api;\n\n    gridRef == null ? void 0 : (_gridRef$current4 = gridRef.current) == null ? void 0 : (_gridRef$current4$api = _gridRef$current4.api) == null ? void 0 : _gridRef$current4$api.redrawRows();\n  }, [modalOpen, clientModal.data]);\n  useEffect(() => {\n    function handleResize() {\n      windowResize(gridOptions);\n    }\n\n    window.addEventListener('resize', () => handleResize()); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [windowResize]);\n  const warningPanel = useMemo(() => {\n    // warning messages are displayed if no rows are displayed, and the internal AGGrid filter is not used\n    if (currentRowsDisplayed === 0) {\n      // if external filters are present, show this panel\n      if (doFiltersExist) return /*#__PURE__*/_jsxDEV(AGGridWarningPanel, {\n        message: \"No products match your search critera.\",\n        description: /*#__PURE__*/_jsxDEV(EmptyCriteriaWarningDescription, {\n          children: [/*#__PURE__*/_jsxDEV(EmptyCriteriaWarningDescriptionText, {\n            children: \"Adjust your criteria or\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(EmptyCriteriaWarningDescriptionText, {\n            onClick: () => resetFilters(),\n            children: `reset all to default.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this); //if there are no events\n      else if (rowData.length === 0) return /*#__PURE__*/_jsxDEV(AGGridWarningPanel, {\n        message: \"You have no events to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 16\n      }, this);\n    }\n\n    return null;\n  }, [currentRowsDisplayed, doFiltersExist, rowData, resetFilters]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [warningPanel, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-alpine\",\n      style: {\n        width: '98vw',\n        display: warningPanel ? 'none' : 'contents'\n      },\n      children: /*#__PURE__*/_jsxDEV(CustomAgGrid, {\n        ref: gridRef,\n        rowData: rowData,\n        rowHeight: 108,\n        columnDefs: columnData,\n        defaultColDef: defaultColDef,\n        onGridReady: onGridReady,\n        pagination: true,\n        onFirstDataRendered: onFirstDataRendered,\n        onCellClicked: cellClickedListener,\n        gridOptions: gridOptions,\n        domLayout: \"autoHeight\",\n        isExternalFilterPresent: isExternalFilterPresent,\n        doesExternalFilterPass: doesExternalFilterPass,\n        onFilterChanged: onFilterChanged,\n        rowClassRules: rowClassRules\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AGGridConfirmationsTable, \"pw1ecK1lVyMQNQYu43G97puNDl4=\", false, function () {\n  return [useEventConfirmationOptions];\n});\n\n_c = AGGridConfirmationsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"AGGridConfirmationsTable\");","map":{"version":3,"names":["React","useRef","useCallback","useMemo","useEffect","useState","LicenseManager","CustomAgGrid","EmptyCriteriaWarningDescription","EmptyCriteriaWarningDescriptionText","useEventConfirmationOptions","AGGridTableFilters","AGGridWarningPanel","formatEventType","ISODateToFormat","setLicenseKey","EventCalculationStatuses","PrincipalProximity","AGGridConfirmationsTable","rowData","columnData","setModalOpen","setModalData","setProductStructure","modalOpen","modalData","eventTypeFilter","confirmationStatusFilter","resetFilters","doFiltersExist","searchFilter","dateRangeFilter","regTypeFilter","clientModal","currentRowsDisplayed","setCurrentRowsDisplayed","gridRef","isExternalFilterPresent","current","api","onFilterChanged","value","startDate","endDate","doesExternalFilterPass","data","defaultColDef","sortable","filter","resizable","menuTabs","gridOptions","suppressCellFocus","windowResize","window","innerWidth","columnApi","setColumnVisible","onGridReady","params","addEventListener","setTimeout","sizeColumnsToFit","getDisplayedRowCount","onFirstDataRendered","paginationSetPageSize","cellClickedListener","colDef","field","confirmationStatus","status","UPCOMING","eventProductData","structureNameInternal","param","rowClassRules","cusip","productIdentifier","eventDate","eventType","redrawRows","handleResize","warningPanel","length","width","display"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/AGGridTable/AGGridTable.tsx"],"sourcesContent":["import React, {\n  ReactNode,\n  useRef,\n  useCallback,\n  useMemo,\n  SetStateAction,\n  Dispatch,\n  useEffect,\n  useState,\n} from 'react';\nimport 'ag-grid-enterprise/dist/styles/ag-grid.css';\nimport 'ag-grid-enterprise/dist/styles/ag-theme-alpine.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport { GridOptions, LicenseManager } from 'ag-grid-enterprise';\n\nimport {\n  UnderlierRest,\n  CashSettlementRates,\n  PhysicalSettlement,\n  EventProductData,\n} from '@luma-fe-workspace/redux';\n\nimport {\n  CustomAgGrid,\n  EmptyCriteriaWarningDescription,\n  EmptyCriteriaWarningDescriptionText,\n} from './AGGridTable.styles';\nimport { useEventConfirmationOptions } from '../../utils/hooks/useEventConfirmationOptions';\nimport {\n  CellClickedEvent,\n  RowNode,\n  GridReadyEvent,\n  FilterChangedEvent,\n  RowClassParams,\n  ColDef,\n} from 'ag-grid-community';\nimport * as AGGridTableFilters from './AGGridTableFilters';\nimport { AGGridWarningPanel } from './AGGridWarningPanel';\nimport {\n  formatEventType,\n  EventTypesDisplay,\n  ISODateToFormat,\n} from '../../utils/gridUtils';\n\nLicenseManager.setLicenseKey(\n  'CompanyName=Luma Financial Technologies, LLC,LicensedApplication=Luma,LicenseType=SingleApplication,LicensedConcurrentDeveloperCount=1,LicensedProductionInstancesCount=1,AssetReference=AG-017904,ExpiryDate=12_September_2022_[v2]_MTY2MjkzNzIwMDAwMA==fa6279babc79792e4bac4be842243ea3'\n);\nexport interface ConfirmationStatus {\n  status: EventCalculationStatuses | undefined;\n  cashSettlementRates?: CashSettlementRates;\n  physicalSettlementRates?: PhysicalSettlement[];\n}\nexport enum EventCalculationStatuses {\n  PENDING = 'Pending Event',\n  UPCOMING = 'Upcoming Event',\n  REVIEW = 'Review',\n  CONFIRMED = 'Confirmed',\n  NOT_MATURED = 'Not Matured',\n  NOT_CALLED = 'Not Called',\n  MISSED = 'Missed',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport enum PrincipalProximity {\n  POSITIVE = 'Positive',\n  NEGATIVE = 'Negative',\n}\nexport interface RowData {\n  activeUnderlier: string | undefined;\n  Product: string | undefined;\n  'Event Date': string | undefined;\n  'Registration Type': string | undefined;\n  'Event Type': EventTypesDisplay | undefined;\n  Threshold: number | undefined;\n  Structure: string | undefined;\n  Underliers: UnderlierRest[] | undefined;\n  cusip: string | undefined;\n  'Event Calculation': EventCalculationStatuses | undefined;\n  'Basket Type': string | undefined;\n  confirmationStatus: ConfirmationStatus | undefined;\n  eventProductData: EventProductData | undefined;\n  productSymbol: string | undefined;\n  principalProximityAboveOrBelow: PrincipalProximity | undefined;\n  principalProximityValue: string | undefined;\n  underlierPerformance: number | undefined;\n  downsideType: string | undefined;\n}\ninterface ColumnData {\n  field: string;\n  cellRenderer?: ReactNode;\n  sortable?: boolean;\n  filter?: boolean;\n}\ninterface Props {\n  rowData: RowData[];\n  columnData: ColumnData[];\n  setModalOpen?: Dispatch<SetStateAction<boolean>>;\n  setModalData?: Dispatch<SetStateAction<EventProductData | undefined>>;\n  setProductStructure?: Dispatch<SetStateAction<string | undefined>>;\n  modalOpen?: boolean;\n  modalData?: EventProductData | undefined;\n}\n\nexport const AGGridConfirmationsTable = ({\n  rowData,\n  columnData,\n  setModalOpen,\n  setModalData,\n  setProductStructure,\n  modalOpen,\n  modalData,\n}: Props) => {\n  const {\n    eventTypeFilter,\n    confirmationStatusFilter,\n    resetFilters,\n    doFiltersExist,\n    searchFilter,\n    dateRangeFilter,\n    regTypeFilter,\n    clientModal,\n  } = useEventConfirmationOptions();\n  const [currentRowsDisplayed, setCurrentRowsDisplayed] = useState<number>(0);\n  const gridRef = useRef<AgGridReact>(null);\n\n  // Just returns true implying that there is an external filter,\n  // could probably be isExternalFilterPresent={()=>true}\n  const isExternalFilterPresent = useCallback(() => {\n    return true;\n  }, []);\n\n  useEffect(() => {\n    gridRef?.current?.api?.onFilterChanged();\n  }, [\n    eventTypeFilter.value,\n    confirmationStatusFilter.value,\n    searchFilter.value,\n    dateRangeFilter.startDate,\n    dateRangeFilter.endDate,\n    regTypeFilter.value,\n  ]);\n\n  const doesExternalFilterPass = useCallback(\n    ({ data }: RowNode<RowData>) =>\n      AGGridTableFilters.doesExternalFilterPass(\n        data,\n        eventTypeFilter.value,\n        confirmationStatusFilter.value,\n        searchFilter.value,\n        dateRangeFilter.startDate,\n        dateRangeFilter.endDate,\n        regTypeFilter.value\n      ),\n    [\n      eventTypeFilter.value,\n      confirmationStatusFilter.value,\n      searchFilter.value,\n      dateRangeFilter.startDate,\n      dateRangeFilter.endDate,\n      regTypeFilter.value,\n    ]\n  );\n\n  const defaultColDef = useMemo(\n    (): ColDef<RowData> => ({\n      sortable: true,\n      filter: true,\n      resizable: false,\n\n      menuTabs: ['filterMenuTab'],\n    }),\n    []\n  );\n\n  const gridOptions: GridOptions = {\n    suppressCellFocus: true,\n  };\n\n  const windowResize = useCallback((gridOptions: GridOptions<RowData>) => {\n    if (window.innerWidth < 1440) {\n      gridOptions.columnApi?.setColumnVisible('Structure', false);\n    } else {\n      gridOptions.columnApi?.setColumnVisible('Structure', true);\n    }\n\n    if (window.innerWidth < 1024) {\n      gridOptions.columnApi?.setColumnVisible('Underliers', false);\n    } else {\n      gridOptions.columnApi?.setColumnVisible('Underliers', true);\n    }\n  }, []);\n\n  const onGridReady = useCallback(\n    (params: GridReadyEvent<RowData>) => {\n      window.addEventListener('resize', function () {\n        setTimeout(function () {\n          params.api.sizeColumnsToFit();\n        });\n      });\n\n      windowResize(gridOptions);\n      gridRef.current?.api.sizeColumnsToFit();\n      setCurrentRowsDisplayed(params.api.getDisplayedRowCount());\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [windowResize]\n  );\n\n  const onFirstDataRendered = useCallback((params) => {\n    gridRef.current?.api.paginationSetPageSize(20);\n  }, []);\n\n  const cellClickedListener = useCallback(\n    ({ colDef, data }: CellClickedEvent<RowData>) => {\n      if (\n        colDef.field === 'Event Calculation' &&\n        data?.confirmationStatus?.status !== EventCalculationStatuses.UPCOMING\n      ) {\n        if (setModalData && setModalOpen) {\n          setModalData(data?.eventProductData);\n          setModalOpen(true);\n        }\n\n        if (setProductStructure) {\n          setProductStructure(data?.eventProductData?.structureNameInternal);\n        }\n      }\n    },\n    [setModalData, setModalOpen, setProductStructure]\n  );\n\n  const onFilterChanged = useCallback(\n    (param: FilterChangedEvent<RowData>) => {\n      setCurrentRowsDisplayed(param.api.getDisplayedRowCount());\n    },\n    [setCurrentRowsDisplayed]\n  );\n\n  const rowClassRules = useMemo(\n    () => ({\n      'selected-row': ({ data }: RowClassParams<RowData>) => {\n        if (\n          modalOpen &&\n          data?.cusip === modalData?.productIdentifier &&\n          data?.['Event Date'] === ISODateToFormat(modalData?.eventDate) &&\n          data?.['Event Type'] === formatEventType(modalData?.eventType)\n        )\n          return true;\n        if (\n          clientModal.data &&\n          data?.cusip === clientModal.data.productIdentifier &&\n          data?.['Event Date'] ===\n            ISODateToFormat(clientModal.data?.eventDate) &&\n          data?.['Event Type'] === formatEventType(clientModal.data?.eventType)\n        )\n          return true;\n        return false;\n      },\n    }),\n    [modalOpen, modalData, clientModal.data]\n  );\n\n  // This is added so that when the modal opens/closes the styling will be applied to highlight the selected row\n  useEffect(() => {\n    gridRef?.current?.api?.redrawRows();\n  }, [modalOpen, clientModal.data]);\n\n  useEffect(() => {\n    function handleResize() {\n      windowResize(gridOptions);\n    }\n\n    window.addEventListener('resize', () => handleResize());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [windowResize]);\n\n  const warningPanel = useMemo((): React.ReactNode => {\n    // warning messages are displayed if no rows are displayed, and the internal AGGrid filter is not used\n    if (currentRowsDisplayed === 0) {\n      // if external filters are present, show this panel\n      if (doFiltersExist)\n        return (\n          <AGGridWarningPanel\n            message=\"No products match your search critera.\"\n            description={\n              <EmptyCriteriaWarningDescription>\n                <EmptyCriteriaWarningDescriptionText>\n                  Adjust your criteria or&nbsp;\n                </EmptyCriteriaWarningDescriptionText>\n                <EmptyCriteriaWarningDescriptionText\n                  onClick={() => resetFilters()}\n                >{`reset all to default.`}</EmptyCriteriaWarningDescriptionText>\n              </EmptyCriteriaWarningDescription>\n            }\n          />\n        );\n      //if there are no events\n      else if (rowData.length === 0)\n        return <AGGridWarningPanel message=\"You have no events to display\" />;\n    }\n    return null;\n  }, [currentRowsDisplayed, doFiltersExist, rowData, resetFilters]);\n\n  return (\n    <>\n      {warningPanel}\n      <div\n        className=\"ag-theme-alpine\"\n        style={{\n          width: '98vw',\n          display: warningPanel ? 'none' : 'contents',\n        }}\n      >\n        <CustomAgGrid<RowData>\n          ref={gridRef}\n          rowData={rowData}\n          rowHeight={108}\n          columnDefs={columnData}\n          defaultColDef={defaultColDef}\n          onGridReady={onGridReady}\n          pagination={true}\n          onFirstDataRendered={onFirstDataRendered}\n          onCellClicked={cellClickedListener}\n          gridOptions={gridOptions}\n          domLayout=\"autoHeight\"\n          isExternalFilterPresent={isExternalFilterPresent}\n          doesExternalFilterPass={doesExternalFilterPass}\n          onFilterChanged={onFilterChanged}\n          rowClassRules={rowClassRules}\n        />\n      </div>\n    </>\n  );\n};\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAEEC,MAFF,EAGEC,WAHF,EAIEC,OAJF,EAOEC,SAPF,EAQEC,QARF,QASO,OATP;AAUA,OAAO,4CAAP;AACA,OAAO,oDAAP;AAEA,SAAsBC,cAAtB,QAA4C,oBAA5C;AASA,SACEC,YADF,EAEEC,+BAFF,EAGEC,mCAHF,QAIO,sBAJP;AAKA,SAASC,2BAAT,QAA4C,+CAA5C;AASA,OAAO,KAAKC,kBAAZ,MAAoC,sBAApC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SACEC,eADF,EAGEC,eAHF,QAIO,uBAJP;;;AAMAR,cAAc,CAACS,aAAf,CACE,2RADF;AAQA,WAAYC,wBAAZ;;WAAYA,wB;EAAAA,wB;EAAAA,wB;EAAAA,wB;EAAAA,wB;EAAAA,wB;EAAAA,wB;EAAAA,wB;EAAAA,wB;GAAAA,wB,KAAAA,wB;;AAWZ,WAAYC,kBAAZ;;WAAYA,kB;EAAAA,kB;EAAAA,kB;GAAAA,kB,KAAAA,kB;;AAwCZ,OAAO,MAAMC,wBAAwB,GAAG,CAAC;EACvCC,OADuC;EAEvCC,UAFuC;EAGvCC,YAHuC;EAIvCC,YAJuC;EAKvCC,mBALuC;EAMvCC,SANuC;EAOvCC;AAPuC,CAAD,KAQ3B;EAAA;;EACX,MAAM;IACJC,eADI;IAEJC,wBAFI;IAGJC,YAHI;IAIJC,cAJI;IAKJC,YALI;IAMJC,eANI;IAOJC,aAPI;IAQJC;EARI,IASFvB,2BAA2B,EAT/B;EAUA,MAAM,CAACwB,oBAAD,EAAuBC,uBAAvB,IAAkD9B,QAAQ,CAAS,CAAT,CAAhE;EACA,MAAM+B,OAAO,GAAGnC,MAAM,CAAc,IAAd,CAAtB,CAZW,CAcX;EACA;;EACA,MAAMoC,uBAAuB,GAAGnC,WAAW,CAAC,MAAM;IAChD,OAAO,IAAP;EACD,CAF0C,EAExC,EAFwC,CAA3C;EAIAE,SAAS,CAAC,MAAM;IAAA;;IACdgC,OAAO,QAAP,gCAAAA,OAAO,CAAEE,OAAT,8DAAkBC,GAAlB,0CAAuBC,eAAvB;EACD,CAFQ,EAEN,CACDd,eAAe,CAACe,KADf,EAEDd,wBAAwB,CAACc,KAFxB,EAGDX,YAAY,CAACW,KAHZ,EAIDV,eAAe,CAACW,SAJf,EAKDX,eAAe,CAACY,OALf,EAMDX,aAAa,CAACS,KANb,CAFM,CAAT;EAWA,MAAMG,sBAAsB,GAAG1C,WAAW,CACxC,CAAC;IAAE2C;EAAF,CAAD,KACElC,kBAAkB,CAACiC,sBAAnB,CACEC,IADF,EAEEnB,eAAe,CAACe,KAFlB,EAGEd,wBAAwB,CAACc,KAH3B,EAIEX,YAAY,CAACW,KAJf,EAKEV,eAAe,CAACW,SALlB,EAMEX,eAAe,CAACY,OANlB,EAOEX,aAAa,CAACS,KAPhB,CAFsC,EAWxC,CACEf,eAAe,CAACe,KADlB,EAEEd,wBAAwB,CAACc,KAF3B,EAGEX,YAAY,CAACW,KAHf,EAIEV,eAAe,CAACW,SAJlB,EAKEX,eAAe,CAACY,OALlB,EAMEX,aAAa,CAACS,KANhB,CAXwC,CAA1C;EAqBA,MAAMK,aAAa,GAAG3C,OAAO,CAC3B,OAAwB;IACtB4C,QAAQ,EAAE,IADY;IAEtBC,MAAM,EAAE,IAFc;IAGtBC,SAAS,EAAE,KAHW;IAKtBC,QAAQ,EAAE,CAAC,eAAD;EALY,CAAxB,CAD2B,EAQ3B,EAR2B,CAA7B;EAWA,MAAMC,WAAwB,GAAG;IAC/BC,iBAAiB,EAAE;EADY,CAAjC;EAIA,MAAMC,YAAY,GAAGnD,WAAW,CAAEiD,WAAD,IAAuC;IACtE,IAAIG,MAAM,CAACC,UAAP,GAAoB,IAAxB,EAA8B;MAAA;;MAC5B,yBAAAJ,WAAW,CAACK,SAAZ,2CAAuBC,gBAAvB,CAAwC,WAAxC,EAAqD,KAArD;IACD,CAFD,MAEO;MAAA;;MACL,0BAAAN,WAAW,CAACK,SAAZ,4CAAuBC,gBAAvB,CAAwC,WAAxC,EAAqD,IAArD;IACD;;IAED,IAAIH,MAAM,CAACC,UAAP,GAAoB,IAAxB,EAA8B;MAAA;;MAC5B,0BAAAJ,WAAW,CAACK,SAAZ,4CAAuBC,gBAAvB,CAAwC,YAAxC,EAAsD,KAAtD;IACD,CAFD,MAEO;MAAA;;MACL,0BAAAN,WAAW,CAACK,SAAZ,4CAAuBC,gBAAvB,CAAwC,YAAxC,EAAsD,IAAtD;IACD;EACF,CAZ+B,EAY7B,EAZ6B,CAAhC;EAcA,MAAMC,WAAW,GAAGxD,WAAW,CAC5ByD,MAAD,IAAqC;IAAA;;IACnCL,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkC,YAAY;MAC5CC,UAAU,CAAC,YAAY;QACrBF,MAAM,CAACpB,GAAP,CAAWuB,gBAAX;MACD,CAFS,CAAV;IAGD,CAJD;IAMAT,YAAY,CAACF,WAAD,CAAZ;IACA,qBAAAf,OAAO,CAACE,OAAR,uCAAiBC,GAAjB,CAAqBuB,gBAArB;IACA3B,uBAAuB,CAACwB,MAAM,CAACpB,GAAP,CAAWwB,oBAAX,EAAD,CAAvB;EACD,CAX4B,EAY7B;EACA,CAACV,YAAD,CAb6B,CAA/B;EAgBA,MAAMW,mBAAmB,GAAG9D,WAAW,CAAEyD,MAAD,IAAY;IAAA;;IAClD,qBAAAvB,OAAO,CAACE,OAAR,uCAAiBC,GAAjB,CAAqB0B,qBAArB,CAA2C,EAA3C;EACD,CAFsC,EAEpC,EAFoC,CAAvC;EAIA,MAAMC,mBAAmB,GAAGhE,WAAW,CACrC,CAAC;IAAEiE,MAAF;IAAUtB;EAAV,CAAD,KAAiD;IAAA;;IAC/C,IACEsB,MAAM,CAACC,KAAP,KAAiB,mBAAjB,IACA,CAAAvB,IAAI,QAAJ,qCAAAA,IAAI,CAAEwB,kBAAN,2CAA0BC,MAA1B,MAAqCtD,wBAAwB,CAACuD,QAFhE,EAGE;MACA,IAAIjD,YAAY,IAAID,YAApB,EAAkC;QAChCC,YAAY,CAACuB,IAAD,oBAACA,IAAI,CAAE2B,gBAAP,CAAZ;QACAnD,YAAY,CAAC,IAAD,CAAZ;MACD;;MAED,IAAIE,mBAAJ,EAAyB;QAAA;;QACvBA,mBAAmB,CAACsB,IAAD,6CAACA,IAAI,CAAE2B,gBAAP,qBAAC,sBAAwBC,qBAAzB,CAAnB;MACD;IACF;EACF,CAfoC,EAgBrC,CAACnD,YAAD,EAAeD,YAAf,EAA6BE,mBAA7B,CAhBqC,CAAvC;EAmBA,MAAMiB,eAAe,GAAGtC,WAAW,CAChCwE,KAAD,IAAwC;IACtCvC,uBAAuB,CAACuC,KAAK,CAACnC,GAAN,CAAUwB,oBAAV,EAAD,CAAvB;EACD,CAHgC,EAIjC,CAAC5B,uBAAD,CAJiC,CAAnC;EAOA,MAAMwC,aAAa,GAAGxE,OAAO,CAC3B,OAAO;IACL,gBAAgB,CAAC;MAAE0C;IAAF,CAAD,KAAuC;MAAA;;MACrD,IACErB,SAAS,IACT,CAAAqB,IAAI,QAAJ,YAAAA,IAAI,CAAE+B,KAAN,OAAgBnD,SAAhB,oBAAgBA,SAAS,CAAEoD,iBAA3B,CADA,IAEA,CAAAhC,IAAI,QAAJ,YAAAA,IAAI,CAAG,YAAH,CAAJ,MAAyB/B,eAAe,CAACW,SAAD,oBAACA,SAAS,CAAEqD,SAAZ,CAFxC,IAGA,CAAAjC,IAAI,QAAJ,YAAAA,IAAI,CAAG,YAAH,CAAJ,MAAyBhC,eAAe,CAACY,SAAD,oBAACA,SAAS,CAAEsD,SAAZ,CAJ1C,EAME,OAAO,IAAP;MACF,IACE9C,WAAW,CAACY,IAAZ,IACA,CAAAA,IAAI,QAAJ,YAAAA,IAAI,CAAE+B,KAAN,MAAgB3C,WAAW,CAACY,IAAZ,CAAiBgC,iBADjC,IAEA,CAAAhC,IAAI,QAAJ,YAAAA,IAAI,CAAG,YAAH,CAAJ,MACE/B,eAAe,sBAACmB,WAAW,CAACY,IAAb,qBAAC,kBAAkBiC,SAAnB,CAHjB,IAIA,CAAAjC,IAAI,QAAJ,YAAAA,IAAI,CAAG,YAAH,CAAJ,MAAyBhC,eAAe,uBAACoB,WAAW,CAACY,IAAb,qBAAC,mBAAkBkC,SAAnB,CAL1C,EAOE,OAAO,IAAP;MACF,OAAO,KAAP;IACD;EAlBI,CAAP,CAD2B,EAqB3B,CAACvD,SAAD,EAAYC,SAAZ,EAAuBQ,WAAW,CAACY,IAAnC,CArB2B,CAA7B,CA/HW,CAuJX;;EACAzC,SAAS,CAAC,MAAM;IAAA;;IACdgC,OAAO,QAAP,iCAAAA,OAAO,CAAEE,OAAT,gEAAkBC,GAAlB,2CAAuByC,UAAvB;EACD,CAFQ,EAEN,CAACxD,SAAD,EAAYS,WAAW,CAACY,IAAxB,CAFM,CAAT;EAIAzC,SAAS,CAAC,MAAM;IACd,SAAS6E,YAAT,GAAwB;MACtB5B,YAAY,CAACF,WAAD,CAAZ;IACD;;IAEDG,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkC,MAAMqB,YAAY,EAApD,EALc,CAMd;EACD,CAPQ,EAON,CAAC5B,YAAD,CAPM,CAAT;EASA,MAAM6B,YAAY,GAAG/E,OAAO,CAAC,MAAuB;IAClD;IACA,IAAI+B,oBAAoB,KAAK,CAA7B,EAAgC;MAC9B;MACA,IAAIL,cAAJ,EACE,oBACE,QAAC,kBAAD;QACE,OAAO,EAAC,wCADV;QAEE,WAAW,eACT,QAAC,+BAAD;UAAA,wBACE,QAAC,mCAAD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAIE,QAAC,mCAAD;YACE,OAAO,EAAE,MAAMD,YAAY,EAD7B;YAAA,UAEG;UAFH;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA;MAHJ;QAAA;QAAA;QAAA;MAAA,QADF,CADF,CAgBA;MAhBA,KAiBK,IAAIT,OAAO,CAACgE,MAAR,KAAmB,CAAvB,EACH,oBAAO,QAAC,kBAAD;QAAoB,OAAO,EAAC;MAA5B;QAAA;QAAA;QAAA;MAAA,QAAP;IACH;;IACD,OAAO,IAAP;EACD,CAzB2B,EAyBzB,CAACjD,oBAAD,EAAuBL,cAAvB,EAAuCV,OAAvC,EAAgDS,YAAhD,CAzByB,CAA5B;EA2BA,oBACE;IAAA,WACGsD,YADH,eAEE;MACE,SAAS,EAAC,iBADZ;MAEE,KAAK,EAAE;QACLE,KAAK,EAAE,MADF;QAELC,OAAO,EAAEH,YAAY,GAAG,MAAH,GAAY;MAF5B,CAFT;MAAA,uBAOE,QAAC,YAAD;QACE,GAAG,EAAE9C,OADP;QAEE,OAAO,EAAEjB,OAFX;QAGE,SAAS,EAAE,GAHb;QAIE,UAAU,EAAEC,UAJd;QAKE,aAAa,EAAE0B,aALjB;QAME,WAAW,EAAEY,WANf;QAOE,UAAU,EAAE,IAPd;QAQE,mBAAmB,EAAEM,mBARvB;QASE,aAAa,EAAEE,mBATjB;QAUE,WAAW,EAAEf,WAVf;QAWE,SAAS,EAAC,YAXZ;QAYE,uBAAuB,EAAEd,uBAZ3B;QAaE,sBAAsB,EAAEO,sBAb1B;QAcE,eAAe,EAAEJ,eAdnB;QAeE,aAAa,EAAEmC;MAfjB;QAAA;QAAA;QAAA;MAAA;IAPF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AA8BD,CAtOM;;GAAMzD,wB;UAkBPR,2B;;;KAlBOQ,wB"},"metadata":{},"sourceType":"module"}