{"ast":null,"code":"import { rest } from 'msw';\nimport { mockEmptyUiPermissionsResponse } from './data';\nexport const getSuccessPermissionsHandler = (response = mockEmptyUiPermissionsResponse()) => rest.post('/permission-service/permission', (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json(response));\n});\nexport const getFailurePermissionsHandler = () => rest.post('/permission-service/permission', (req, res, ctx) => {\n  return res(ctx.status(401));\n});\nexport const getSuccessPermissionHandler = () => rest.post('/permission-service/permission/:permission', (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json(true));\n});\nexport const getFailurePermissionHandler = () => rest.post('/permission-service/permission/:permission', (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json(false));\n});","map":{"version":3,"names":["rest","mockEmptyUiPermissionsResponse","getSuccessPermissionsHandler","response","post","req","res","ctx","status","json","getFailurePermissionsHandler","getSuccessPermissionHandler","getFailurePermissionHandler"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/testUtils/mocks/permissionsService/handlers.ts"],"sourcesContent":["import { rest } from 'msw';\nimport { mockEmptyUiPermissionsResponse } from './data';\n\nexport const getSuccessPermissionsHandler = (\n  response = mockEmptyUiPermissionsResponse()\n) =>\n  rest.post('/permission-service/permission', (req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(response));\n  });\n\nexport const getFailurePermissionsHandler = () =>\n  rest.post('/permission-service/permission', (req, res, ctx) => {\n    return res(ctx.status(401));\n  });\n\nexport const getSuccessPermissionHandler = () =>\n  rest.post('/permission-service/permission/:permission', (req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(true));\n  });\n\nexport const getFailurePermissionHandler = () =>\n  rest.post('/permission-service/permission/:permission', (req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(false));\n  });\n"],"mappings":"AAAA,SAASA,IAAT,QAAqB,KAArB;AACA,SAASC,8BAAT,QAA+C,QAA/C;AAEA,OAAO,MAAMC,4BAA4B,GAAG,CAC1CC,QAAQ,GAAGF,8BAA8B,EADC,KAG1CD,IAAI,CAACI,IAAL,CAAU,gCAAV,EAA4C,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;EAC7D,OAAOD,GAAG,CAACC,GAAG,CAACC,MAAJ,CAAW,GAAX,CAAD,EAAkBD,GAAG,CAACE,IAAJ,CAASN,QAAT,CAAlB,CAAV;AACD,CAFD,CAHK;AAOP,OAAO,MAAMO,4BAA4B,GAAG,MAC1CV,IAAI,CAACI,IAAL,CAAU,gCAAV,EAA4C,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;EAC7D,OAAOD,GAAG,CAACC,GAAG,CAACC,MAAJ,CAAW,GAAX,CAAD,CAAV;AACD,CAFD,CADK;AAKP,OAAO,MAAMG,2BAA2B,GAAG,MACzCX,IAAI,CAACI,IAAL,CAAU,4CAAV,EAAwD,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;EACzE,OAAOD,GAAG,CAACC,GAAG,CAACC,MAAJ,CAAW,GAAX,CAAD,EAAkBD,GAAG,CAACE,IAAJ,CAAS,IAAT,CAAlB,CAAV;AACD,CAFD,CADK;AAKP,OAAO,MAAMG,2BAA2B,GAAG,MACzCZ,IAAI,CAACI,IAAL,CAAU,4CAAV,EAAwD,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;EACzE,OAAOD,GAAG,CAACC,GAAG,CAACC,MAAJ,CAAW,GAAX,CAAD,EAAkBD,GAAG,CAACE,IAAJ,CAAS,KAAT,CAAlB,CAAV;AACD,CAFD,CADK"},"metadata":{},"sourceType":"module"}