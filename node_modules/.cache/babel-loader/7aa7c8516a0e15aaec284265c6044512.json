{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventDetail/SelectValue/SelectValue.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { ISODateToFormat, getPhysicalSettlementData } from '../../../utils/gridUtils';\nimport { LevelSource } from '../EventDetail';\nimport { ValueBox, ValueBoxTitle, ValueBoxValue, ValueBoxDate, SelectValueWrapper, NumShares, CashInLieu } from './SelectValue.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getSettlementBox = ({\n  cashSettlement: _cashSettlement = false,\n  selected,\n  disabled: _disabled = false,\n  title,\n  value,\n  date,\n  onClick: _onClick = () => {\n    /**do nothing */\n  }\n}) => /*#__PURE__*/_jsxDEV(ValueBox, {\n  selectedValue: selected,\n  onClick: _onClick,\n  disabled: _disabled,\n  children: [/*#__PURE__*/_jsxDEV(ValueBoxTitle, {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this), !_disabled ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ValueBoxValue, {\n      cashSettlement: _cashSettlement,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ValueBoxDate, {\n      children: ISODateToFormat(date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"-- \", /*#__PURE__*/_jsxDEV(ValueBoxDate, {\n      disabled: _disabled,\n      children: \"--\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 3\n}, this);\n\nconst CashSettlements = ({\n  productData,\n  selectedValue,\n  setSelectedValue\n}) => {\n  _s();\n\n  const cashSettlementOptions = useMemo(() => {\n    var _productData$cashSett, _productData$cashSett2, _productData$cashSett3;\n\n    return [{\n      title: LevelSource.CONFIRMED,\n      selected: (selectedValue == null ? void 0 : selectedValue.type) === LevelSource.CONFIRMED,\n      value: ((_productData$cashSett = productData.cashSettlementRates) == null ? void 0 : _productData$cashSett.rate) || 0\n    }, {\n      title: LevelSource.LUMA,\n      selected: (selectedValue == null ? void 0 : selectedValue.type) === LevelSource.LUMA,\n      value: ((_productData$cashSett2 = productData.cashSettlementRates) == null ? void 0 : _productData$cashSett2.lumaRate) || 0\n    }, {\n      title: LevelSource.ISSUER,\n      selected: (selectedValue == null ? void 0 : selectedValue.type) === LevelSource.ISSUER,\n      value: ((_productData$cashSett3 = productData.cashSettlementRates) == null ? void 0 : _productData$cashSett3.issuerRate) || 0\n    }];\n  }, [productData, selectedValue]);\n  const onClick = useCallback(type => {\n    var _cashSettlementOption;\n\n    setSelectedValue({\n      type: type,\n      value: `${((_cashSettlementOption = cashSettlementOptions.find(settlement => settlement.title === type)) == null ? void 0 : _cashSettlementOption.value) || 0}%`\n    });\n  }, [cashSettlementOptions, setSelectedValue]);\n  useEffect(() => {\n    const [confirmedValue, lumaValue, issuerValue] = cashSettlementOptions;\n    if (confirmedValue.value) onClick(confirmedValue.title);else if (issuerValue.value) onClick(issuerValue.title);else onClick(lumaValue.title); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SelectValueWrapper, {\n    children: cashSettlementOptions.map(settlement => getSettlementBox({\n      selected: settlement.selected,\n      title: settlement.title,\n      value: `${settlement.value}%`,\n      date: productData.eventDate,\n      onClick: () => onClick(settlement.title),\n      disabled: settlement.value === 0,\n      cashSettlement: true\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CashSettlements, \"jWbirUQBwfDrkdAu7jnco1E/beg=\");\n\n_c = CashSettlements;\n\nconst PhysicalSettlements = ({\n  productData,\n  selectedValue,\n  setSelectedValue\n}) => {\n  _s2();\n\n  const {\n    cash,\n    shares\n  } = useMemo(() => getPhysicalSettlementData(productData == null ? void 0 : productData.physicalSettlements), [productData]);\n  const physicalSettlementOptions = useMemo(() => [{\n    title: LevelSource.CONFIRMED,\n    selected: (selectedValue == null ? void 0 : selectedValue.type) === LevelSource.CONFIRMED,\n    shares: (shares == null ? void 0 : shares.value) || 0,\n    cash: (cash == null ? void 0 : cash.value) || 0\n  }, {\n    title: LevelSource.LUMA,\n    selected: (selectedValue == null ? void 0 : selectedValue.type) === LevelSource.LUMA,\n    shares: (shares == null ? void 0 : shares.lumaValue) || 0,\n    cash: (cash == null ? void 0 : cash.lumaValue) || 0\n  }, {\n    title: LevelSource.ISSUER,\n    selected: (selectedValue == null ? void 0 : selectedValue.type) === LevelSource.ISSUER,\n    shares: (shares == null ? void 0 : shares.issuerValue) || 0,\n    cash: (cash == null ? void 0 : cash.issuerValue) || 0\n  }], [selectedValue, shares, cash]);\n  const onClick = useCallback(type => {\n    const selectedSettlement = physicalSettlementOptions.find(settlement => settlement.title === type);\n    setSelectedValue({\n      type: type,\n      value: `${selectedSettlement == null ? void 0 : selectedSettlement.shares} Shares and  $${Number(selectedSettlement == null ? void 0 : selectedSettlement.cash).toLocaleString()} Cash in Lieu`\n    });\n  }, [physicalSettlementOptions, setSelectedValue]);\n  useEffect(() => {\n    const [confirmedValue, lumaValue, issuerValue] = physicalSettlementOptions;\n    if (confirmedValue.shares || confirmedValue.cash) onClick(confirmedValue.title);else if (!lumaValue.shares || lumaValue.cash) onClick(issuerValue.title);else onClick(lumaValue.title); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SelectValueWrapper, {\n    children: physicalSettlementOptions.map(settlement => getSettlementBox({\n      selected: settlement.selected,\n      title: settlement.title,\n      value: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NumShares, {\n          children: `${settlement.shares} shares`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), settlement.cash ? /*#__PURE__*/_jsxDEV(CashInLieu, {\n          children: `$${settlement.cash}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this) : null]\n      }, void 0, true),\n      disabled: !settlement.shares && !settlement.cash,\n      date: productData.eventDate,\n      onClick: () => onClick(settlement.title)\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}; // Using props here instead of destructuring for easy passing to child components\n\n\n_s2(PhysicalSettlements, \"3DMxQmsOZSlnuTL2leq0KiVdygw=\");\n\n_c2 = PhysicalSettlements;\nexport const SelectValue = props => {\n  return props.productData.physicalSettlements ? /*#__PURE__*/_jsxDEV(PhysicalSettlements, Object.assign({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(CashSettlements, Object.assign({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_c3 = SelectValue;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CashSettlements\");\n$RefreshReg$(_c2, \"PhysicalSettlements\");\n$RefreshReg$(_c3, \"SelectValue\");","map":{"version":3,"names":["useCallback","useEffect","useMemo","ISODateToFormat","getPhysicalSettlementData","LevelSource","ValueBox","ValueBoxTitle","ValueBoxValue","ValueBoxDate","SelectValueWrapper","NumShares","CashInLieu","getSettlementBox","cashSettlement","selected","disabled","title","value","date","onClick","CashSettlements","productData","selectedValue","setSelectedValue","cashSettlementOptions","CONFIRMED","type","cashSettlementRates","rate","LUMA","lumaRate","ISSUER","issuerRate","find","settlement","confirmedValue","lumaValue","issuerValue","map","eventDate","PhysicalSettlements","cash","shares","physicalSettlements","physicalSettlementOptions","selectedSettlement","Number","toLocaleString","SelectValue","props"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventDetail/SelectValue/SelectValue.tsx"],"sourcesContent":["import { EventProductData } from '@luma-fe-workspace/redux';\nimport {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n} from 'react';\nimport {\n  ISODateToFormat,\n  getPhysicalSettlementData,\n} from '../../../utils/gridUtils';\nimport { SelectedValue, LevelSource } from '../EventDetail';\nimport {\n  ValueBox,\n  ValueBoxTitle,\n  ValueBoxValue,\n  ValueBoxDate,\n  SelectValueWrapper,\n  NumShares,\n  CashInLieu,\n} from './SelectValue.style';\n\ninterface CashSettlementOption {\n  title: LevelSource;\n  selected: boolean;\n  value: number;\n}\ninterface PhysicalSettlementOption {\n  title: LevelSource;\n  selected: boolean;\n  shares: number;\n  cash: number;\n}\ninterface Props {\n  productData: EventProductData;\n  selectedValue: SelectedValue;\n  setSelectedValue: Dispatch<SetStateAction<SelectedValue>>;\n}\ninterface SettlementBoxProps {\n  cashSettlement?: boolean;\n  selected: boolean;\n  disabled?: boolean;\n  title: string;\n  value: React.ReactNode;\n  date: string | undefined;\n  onClick: () => void;\n}\nconst getSettlementBox = ({\n  cashSettlement = false,\n  selected,\n  disabled = false,\n  title,\n  value,\n  date,\n  onClick = () => {\n    /**do nothing */\n  },\n}: SettlementBoxProps) => (\n  <ValueBox selectedValue={selected} onClick={onClick} disabled={disabled}>\n    <ValueBoxTitle>{title}</ValueBoxTitle>\n    {!disabled ? (\n      <>\n        <ValueBoxValue cashSettlement={cashSettlement}>{value}</ValueBoxValue>\n        <ValueBoxDate>{ISODateToFormat(date)}</ValueBoxDate>\n      </>\n    ) : (\n      <>\n        -- <ValueBoxDate disabled={disabled}>--</ValueBoxDate>\n      </>\n    )}\n  </ValueBox>\n);\nconst CashSettlements = ({\n  productData,\n  selectedValue,\n  setSelectedValue,\n}: Props) => {\n  const cashSettlementOptions: CashSettlementOption[] = useMemo(\n    () => [\n      {\n        title: LevelSource.CONFIRMED,\n        selected: selectedValue?.type === LevelSource.CONFIRMED,\n        value: productData.cashSettlementRates?.rate || 0,\n      },\n      {\n        title: LevelSource.LUMA,\n        selected: selectedValue?.type === LevelSource.LUMA,\n        value: productData.cashSettlementRates?.lumaRate || 0,\n      },\n      {\n        title: LevelSource.ISSUER,\n        selected: selectedValue?.type === LevelSource.ISSUER,\n        value: productData.cashSettlementRates?.issuerRate || 0,\n      },\n    ],\n    [productData, selectedValue]\n  );\n  const onClick = useCallback(\n    (type: LevelSource) => {\n      setSelectedValue({\n        type: type,\n        value: `${\n          cashSettlementOptions.find(\n            (settlement: CashSettlementOption) => settlement.title === type\n          )?.value || 0\n        }%`,\n      });\n    },\n    [cashSettlementOptions, setSelectedValue]\n  );\n  useEffect(() => {\n    const [confirmedValue, lumaValue, issuerValue] = cashSettlementOptions;\n    if (confirmedValue.value) onClick(confirmedValue.title);\n    else if (issuerValue.value) onClick(issuerValue.title);\n    else onClick(lumaValue.title);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <SelectValueWrapper>\n      {cashSettlementOptions.map((settlement: CashSettlementOption) =>\n        getSettlementBox({\n          selected: settlement.selected,\n          title: settlement.title,\n          value: `${settlement.value}%`,\n          date: productData.eventDate,\n          onClick: () => onClick(settlement.title),\n          disabled: settlement.value === 0,\n          cashSettlement: true,\n        })\n      )}\n    </SelectValueWrapper>\n  );\n};\n\nconst PhysicalSettlements = ({\n  productData,\n  selectedValue,\n  setSelectedValue,\n}: Props) => {\n  const { cash, shares } = useMemo(\n    () => getPhysicalSettlementData(productData?.physicalSettlements),\n    [productData]\n  );\n\n  const physicalSettlementOptions: PhysicalSettlementOption[] = useMemo(\n    () => [\n      {\n        title: LevelSource.CONFIRMED,\n        selected: selectedValue?.type === LevelSource.CONFIRMED,\n        shares: shares?.value || 0,\n        cash: cash?.value || 0,\n      },\n      {\n        title: LevelSource.LUMA,\n        selected: selectedValue?.type === LevelSource.LUMA,\n        shares: shares?.lumaValue || 0,\n        cash: cash?.lumaValue || 0,\n      },\n      {\n        title: LevelSource.ISSUER,\n        selected: selectedValue?.type === LevelSource.ISSUER,\n        shares: shares?.issuerValue || 0,\n        cash: cash?.issuerValue || 0,\n      },\n    ],\n    [selectedValue, shares, cash]\n  );\n\n  const onClick = useCallback(\n    (type: LevelSource) => {\n      const selectedSettlement = physicalSettlementOptions.find(\n        (settlement: PhysicalSettlementOption) => settlement.title === type\n      );\n      setSelectedValue({\n        type: type,\n        value: `${selectedSettlement?.shares} Shares and  $${Number(\n          selectedSettlement?.cash\n        ).toLocaleString()} Cash in Lieu`,\n      });\n    },\n    [physicalSettlementOptions, setSelectedValue]\n  );\n\n  useEffect(() => {\n    const [confirmedValue, lumaValue, issuerValue] = physicalSettlementOptions;\n    if (confirmedValue.shares || confirmedValue.cash)\n      onClick(confirmedValue.title);\n    else if (!lumaValue.shares || lumaValue.cash) onClick(issuerValue.title);\n    else onClick(lumaValue.title);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <SelectValueWrapper>\n      {physicalSettlementOptions.map((settlement: PhysicalSettlementOption) =>\n        getSettlementBox({\n          selected: settlement.selected,\n          title: settlement.title,\n          value: (\n            <>\n              <NumShares>{`${settlement.shares} shares`}</NumShares>\n              {settlement.cash ? (\n                <CashInLieu>{`$${settlement.cash}`}</CashInLieu>\n              ) : null}\n            </>\n          ),\n          disabled: !settlement.shares && !settlement.cash,\n          date: productData.eventDate,\n          onClick: () => onClick(settlement.title),\n        })\n      )}\n    </SelectValueWrapper>\n  );\n};\n\n// Using props here instead of destructuring for easy passing to child components\nexport const SelectValue = (props: Props) => {\n  return props.productData.physicalSettlements ? (\n    <PhysicalSettlements {...props} />\n  ) : (\n    <CashSettlements {...props} />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}