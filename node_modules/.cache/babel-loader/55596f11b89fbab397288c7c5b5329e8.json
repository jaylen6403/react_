{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/AGGridTable/AGGridTableComponents.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport React, { useMemo } from 'react';\nimport { colors, LumaButton, LumaIcon } from '@luma-fe-workspace/design-system';\nimport { EventCalculationStatuses, PrincipalProximity } from './AGGridTable';\nimport { bofaLogo } from '../../utils/constants';\nimport { getPhysicalSettlementData, handleLMProductLink, getBarrierText } from '../../utils/gridUtils';\nimport { IssuerContainer, IssuerLogo, UnderlierTicker, IssuerSecuritynumber, UnderlierWrapper, UnderlierText, StatusContainer, StatusLabelContainer, StatusLabel, SettlementRates, SettlementRate, SettlementRateLabel, SettlementRateValue, SecurityText, StructuredContainer, StructuredText, UnderlinerContainer, IssuerName, TooltipWrapper, ThresholdContainer, PrincipalProximityWrapper, PrincipalProximityValue, Barrier, BarrierValue, PrincipalProximityNumber, UnderlierPerformanceText } from './AGGridTableComponents.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UnderlierColumn = ({\n  data\n}) => {\n  _s();\n\n  const {\n    Underliers: underliers\n  } = data;\n  const activeUnderlier = useMemo(() => underliers == null ? void 0 : underliers.find(underlier => underlier.ticker === data.activeUnderlier), [underliers, data.activeUnderlier]);\n  const sortedUnderliers = useMemo(() => {\n    const nonActiveUnderliers = underliers == null ? void 0 : underliers.filter(underlier => underlier.ticker !== data.activeUnderlier);\n    return [...(activeUnderlier ? [activeUnderlier] : []), ...(nonActiveUnderliers ? nonActiveUnderliers : [])];\n  }, [activeUnderlier, underliers, data.activeUnderlier]);\n  let count = 0;\n  return /*#__PURE__*/_jsxDEV(UnderlinerContainer, {\n    children: [data.underlierPerformance ? /*#__PURE__*/_jsxDEV(UnderlierPerformanceText, {\n      performance: data.underlierPerformance,\n      children: [data.underlierPerformance, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(UnderlierWrapper, {\n      children: sortedUnderliers == null ? void 0 : sortedUnderliers.map((underlier, idx) => {\n        count += 1;\n\n        if (count <= 3) {\n          return /*#__PURE__*/_jsxDEV(UnderlierTicker, {\n            activeUnderlier: data.activeUnderlier === underlier.ticker,\n            performance: data.underlierPerformance,\n            children: /*#__PURE__*/_jsxDEV(UnderlierText, {\n              children: underlier.ticker\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this);\n        } else if (count === 4) {\n          return /*#__PURE__*/_jsxDEV(UnderlierTicker, {\n            children: /*#__PURE__*/_jsxDEV(UnderlierText, {\n              children: `+${count - 2} More`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this);\n        } else {\n          return null;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UnderlierColumn, \"UFvM7eUNbf7C+ZoxyH+uiBVtgXk=\");\n\n_c = UnderlierColumn;\nexport const formatIssuerColumn = ({\n  data\n}) => {\n  var _data$eventProductDat, _data$eventProductDat2;\n\n  return /*#__PURE__*/_jsxDEV(IssuerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(IssuerLogo, {\n      src: bofaLogo,\n      alt: ((_data$eventProductDat = data.eventProductData) == null ? void 0 : _data$eventProductDat.issuer) || '',\n      width: '8.75rem'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(IssuerName, {\n      children: ((_data$eventProductDat2 = data.eventProductData) == null ? void 0 : _data$eventProductDat2.issuer) || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(IssuerSecuritynumber, {\n      onClick: () => handleLMProductLink(data.cusip),\n      children: data.cusip || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SecurityText, {\n      children: data.productSymbol || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }, this);\n};\nexport const generateActions = (setDrawerData, setProductStructure) => {\n  var _s2 = $RefreshSig$();\n\n  const EmailAction = ({\n    data\n  }) => {\n    _s2();\n\n    const isButtonDisabled = useMemo(() => {\n      if (!data['Event Calculation']) return true;\n      if (![EventCalculationStatuses.CONFIRMED, EventCalculationStatuses.REVIEW].includes(data['Event Calculation'])) return true;\n      return false;\n    }, [data]);\n    return /*#__PURE__*/_jsxDEV(LumaButton, {\n      variant: \"secondary\",\n      size: \"small\",\n      disabled: isButtonDisabled,\n      onClick: () => {\n        var _data$eventProductDat3;\n\n        setDrawerData(data.eventProductData);\n        setProductStructure((_data$eventProductDat3 = data.eventProductData) == null ? void 0 : _data$eventProductDat3.structureNameInternal);\n      },\n      icon: {\n        iconComponent: /*#__PURE__*/_jsxDEV(LumaIcon, {\n          iconCode: \"envelope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 26\n        }, this)\n      },\n      children: \"Send Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s2(EmailAction, \"bxA6/6CuJ7FDGTPRNz23gt3t5AU=\");\n\n  return EmailAction;\n};\nconst statusSymbols = {\n  'Upcoming Event': {\n    color: 'black',\n    icon: 'calendar'\n  },\n  'Pending Event': {\n    color: colors.warning60,\n    icon: 'clock'\n  },\n  Review: {\n    color: colors.negative60,\n    icon: 'circle-xmark'\n  },\n  Confirmed: {\n    color: colors.positive60,\n    icon: 'check-circle'\n  }\n};\nconst cashSettlementRatesMapping = [{\n  fieldName: 'lumaRate',\n  label: 'Luma'\n}, {\n  fieldName: 'issuerRate',\n  label: 'Issuer'\n}, {\n  fieldName: 'rate',\n  label: 'Confirmed'\n}];\nconst physicalSettlementRatesMapping = [{\n  fieldName: 'lumaValue',\n  label: 'Luma'\n}, {\n  fieldName: 'issuerValue',\n  label: 'Issuer'\n}, {\n  fieldName: 'value',\n  label: 'Confirmed'\n}];\n\nconst getPhysicalSettlement = (physicalSettlements, fieldName) => {\n  if (!physicalSettlements) return '';\n  const {\n    cash: cashSettlement,\n    shares: sharesSettlement\n  } = getPhysicalSettlementData(physicalSettlements);\n  const sharePlurality = (sharesSettlement == null ? void 0 : sharesSettlement[fieldName]) === 1 ? 'Share' : 'Shares';\n  const shares = sharesSettlement != null && sharesSettlement[fieldName] ? `${sharesSettlement[fieldName]} ${sharePlurality}` : '';\n  const cash = cashSettlement != null && cashSettlement[fieldName] ? `$${(cashSettlement == null ? void 0 : cashSettlement[fieldName]) || 0}` : '';\n  return sharesSettlement != null && sharesSettlement[fieldName] ? `${shares}${shares && cash && ' + '}${cash}` : null;\n};\n\nconst formatCashSettlement = (rates, type) => {\n  return rates[type] ? `${rates[type]}%` : null;\n};\n\nexport const ThresholdProximityColumn = ({\n  data\n}) => {\n  _s3();\n\n  const barrier = data == null ? void 0 : data.Threshold;\n  const principalProximityAboveOrBelow = data == null ? void 0 : data.principalProximityAboveOrBelow;\n  const principalProximityValue = data == null ? void 0 : data.principalProximityValue;\n  const barrierText = useMemo(() => getBarrierText(data == null ? void 0 : data['Event Type'], data.downsideType), [data]);\n  const principalProximityDisplay = useMemo(() => {\n    if (principalProximityAboveOrBelow) {\n      if (principalProximityAboveOrBelow === PrincipalProximity.POSITIVE) {\n        return ' Above';\n      } else {\n        return ' Below';\n      }\n    }\n\n    return null;\n  }, [principalProximityAboveOrBelow]);\n  return /*#__PURE__*/_jsxDEV(ThresholdContainer, {\n    children: [/*#__PURE__*/_jsxDEV(PrincipalProximityWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(PrincipalProximityValue, {\n        principleProxAboveOrBelow: principalProximityAboveOrBelow,\n        children: /*#__PURE__*/_jsxDEV(PrincipalProximityNumber, {\n          children: principalProximityValue || '------'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), principalProximityDisplay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), barrier ? /*#__PURE__*/_jsxDEV(Barrier, {\n      children: /*#__PURE__*/_jsxDEV(BarrierValue, {\n        children: [+(barrier * 100).toFixed(2), \"% \", barrierText != null ? barrierText : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ThresholdProximityColumn, \"VqTCYROCAVPcDAX8FgjPm554HXk=\");\n\n_c2 = ThresholdProximityColumn;\nexport const StatusComponent = ({\n  data\n}) => {\n  var _statusSymbols$confir;\n\n  const confirmationStatus = data == null ? void 0 : data.confirmationStatus;\n  return /*#__PURE__*/_jsxDEV(StatusContainer, {\n    children: [(confirmationStatus == null ? void 0 : confirmationStatus.status) && /*#__PURE__*/_jsxDEV(StatusLabelContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StatusLabel, {\n        color: (_statusSymbols$confir = statusSymbols[confirmationStatus.status]) == null ? void 0 : _statusSymbols$confir.color,\n        children: confirmationStatus.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), confirmationStatus.status === EventCalculationStatuses.CONFIRMED ? /*#__PURE__*/_jsxDEV(SettlementRateValue, {\n        children: /*#__PURE__*/_jsxDEV(SettlementRateValue, {\n          children: confirmationStatus != null && confirmationStatus.cashSettlementRates ? formatCashSettlement(confirmationStatus.cashSettlementRates, 'rate') : getPhysicalSettlement(confirmationStatus.physicalSettlementRates, 'value')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), (confirmationStatus == null ? void 0 : confirmationStatus.cashSettlementRates) && /*#__PURE__*/_jsxDEV(SettlementRates, {\n      children: cashSettlementRatesMapping.map((cashSettlementRate, idx) => {\n        var _confirmationStatus$c;\n\n        if (cashSettlementRate.label === 'Confirmed' && confirmationStatus.status === EventCalculationStatuses.CONFIRMED) return null;\n        return (_confirmationStatus$c = confirmationStatus.cashSettlementRates) != null && _confirmationStatus$c[cashSettlementRate.fieldName] ? /*#__PURE__*/_jsxDEV(SettlementRate, {\n          children: [/*#__PURE__*/_jsxDEV(SettlementRateLabel, {\n            children: cashSettlementRate.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SettlementRateValue, {\n            children: formatCashSettlement(confirmationStatus.cashSettlementRates, cashSettlementRate.fieldName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }, this) : null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this), (confirmationStatus == null ? void 0 : confirmationStatus.physicalSettlementRates) && /*#__PURE__*/_jsxDEV(SettlementRates, {\n      children: physicalSettlementRatesMapping.map((physicalSettlement, idx) => {\n        const physicalSettlementValue = getPhysicalSettlement(confirmationStatus.physicalSettlementRates, physicalSettlement.fieldName);\n        if (!physicalSettlementValue || physicalSettlement.label === 'Confirmed' && confirmationStatus.status === EventCalculationStatuses.CONFIRMED) return null;\n        return /*#__PURE__*/_jsxDEV(SettlementRate, {\n          children: [/*#__PURE__*/_jsxDEV(SettlementRateLabel, {\n            children: physicalSettlement.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SettlementRateValue, {\n            children: physicalSettlementValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_c3 = StatusComponent;\nexport const StructuredComponent = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(StructuredContainer, {\n  children: /*#__PURE__*/_jsxDEV(StructuredText, {\n    children: data.Structure\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 363,\n  columnNumber: 3\n}, this);\n_c4 = StructuredComponent;\nexport const IssuerNameTooltip = ({\n  data\n}) => {\n  var _data$eventProductDat4;\n\n  return /*#__PURE__*/_jsxDEV(TooltipWrapper, {\n    children: data == null ? void 0 : (_data$eventProductDat4 = data.eventProductData) == null ? void 0 : _data$eventProductDat4.issuer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 10\n  }, this);\n};\n_c5 = IssuerNameTooltip;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"UnderlierColumn\");\n$RefreshReg$(_c2, \"ThresholdProximityColumn\");\n$RefreshReg$(_c3, \"StatusComponent\");\n$RefreshReg$(_c4, \"StructuredComponent\");\n$RefreshReg$(_c5, \"IssuerNameTooltip\");","map":{"version":3,"names":["React","useMemo","colors","LumaButton","LumaIcon","EventCalculationStatuses","PrincipalProximity","bofaLogo","getPhysicalSettlementData","handleLMProductLink","getBarrierText","IssuerContainer","IssuerLogo","UnderlierTicker","IssuerSecuritynumber","UnderlierWrapper","UnderlierText","StatusContainer","StatusLabelContainer","StatusLabel","SettlementRates","SettlementRate","SettlementRateLabel","SettlementRateValue","SecurityText","StructuredContainer","StructuredText","UnderlinerContainer","IssuerName","TooltipWrapper","ThresholdContainer","PrincipalProximityWrapper","PrincipalProximityValue","Barrier","BarrierValue","PrincipalProximityNumber","UnderlierPerformanceText","UnderlierColumn","data","Underliers","underliers","activeUnderlier","find","underlier","ticker","sortedUnderliers","nonActiveUnderliers","filter","count","underlierPerformance","map","idx","formatIssuerColumn","eventProductData","issuer","cusip","productSymbol","generateActions","setDrawerData","setProductStructure","EmailAction","isButtonDisabled","CONFIRMED","REVIEW","includes","structureNameInternal","iconComponent","statusSymbols","color","icon","warning60","Review","negative60","Confirmed","positive60","cashSettlementRatesMapping","fieldName","label","physicalSettlementRatesMapping","getPhysicalSettlement","physicalSettlements","cash","cashSettlement","shares","sharesSettlement","sharePlurality","formatCashSettlement","rates","type","ThresholdProximityColumn","barrier","Threshold","principalProximityAboveOrBelow","principalProximityValue","barrierText","downsideType","principalProximityDisplay","POSITIVE","toFixed","StatusComponent","confirmationStatus","status","cashSettlementRates","physicalSettlementRates","cashSettlementRate","physicalSettlement","physicalSettlementValue","StructuredComponent","Structure","IssuerNameTooltip"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/AGGridTable/AGGridTableComponents.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, useMemo } from 'react';\n\nimport {\n  PhysicalSettlement,\n  UnderlierRest,\n  CashSettlementRates,\n  EventProductData,\n} from '@luma-fe-workspace/redux';\nimport { colors, LumaButton, LumaIcon } from '@luma-fe-workspace/design-system';\nimport {\n  RowData,\n  ConfirmationStatus,\n  EventCalculationStatuses,\n  PrincipalProximity,\n} from './AGGridTable';\nimport { IconName } from '@fortawesome/fontawesome-svg-core';\nimport { bofaLogo } from '../../utils/constants';\nimport { ITooltipParams } from 'ag-grid-community';\nimport {\n  getPhysicalSettlementData,\n  handleLMProductLink,\n  getBarrierText,\n} from '../../utils/gridUtils';\n\nimport {\n  IssuerContainer,\n  IssuerLogo,\n  UnderlierTicker,\n  IssuerSecuritynumber,\n  UnderlierWrapper,\n  UnderlierText,\n  StatusContainer,\n  StatusLabelContainer,\n  StatusLabel,\n  SettlementRates,\n  SettlementRate,\n  SettlementRateLabel,\n  SettlementRateValue,\n  SecurityText,\n  StructuredContainer,\n  StructuredText,\n  UnderlinerContainer,\n  IssuerName,\n  TooltipWrapper,\n  ThresholdContainer,\n  PrincipalProximityWrapper,\n  PrincipalProximityValue,\n  Barrier,\n  BarrierValue,\n  PrincipalProximityNumber,\n  UnderlierPerformanceText,\n} from './AGGridTableComponents.style';\n\ninterface ColumnProps {\n  data: RowData;\n}\nexport const UnderlierColumn = ({ data }: ColumnProps) => {\n  const { Underliers: underliers } = data;\n  const activeUnderlier: UnderlierRest | undefined = useMemo(\n    () =>\n      underliers?.find(\n        (underlier) => underlier.ticker === data.activeUnderlier\n      ),\n    [underliers, data.activeUnderlier]\n  );\n  const sortedUnderliers: UnderlierRest[] | undefined = useMemo(() => {\n    const nonActiveUnderliers = underliers?.filter(\n      (underlier) => underlier.ticker !== data.activeUnderlier\n    );\n    return [\n      ...(activeUnderlier ? [activeUnderlier] : []),\n      ...(nonActiveUnderliers ? nonActiveUnderliers : []),\n    ];\n  }, [activeUnderlier, underliers, data.activeUnderlier]);\n\n  let count = 0;\n  return (\n    <UnderlinerContainer>\n      {data.underlierPerformance ? (\n        <UnderlierPerformanceText performance={data.underlierPerformance}>\n          {data.underlierPerformance}%\n        </UnderlierPerformanceText>\n      ) : null}\n      <UnderlierWrapper>\n        {sortedUnderliers?.map((underlier: UnderlierRest, idx: number) => {\n          count += 1;\n          if (count <= 3) {\n            return (\n              <UnderlierTicker\n                key={idx}\n                activeUnderlier={data.activeUnderlier === underlier.ticker}\n                performance={data.underlierPerformance}\n              >\n                <UnderlierText>{underlier.ticker}</UnderlierText>\n              </UnderlierTicker>\n            );\n          } else if (count === 4) {\n            return (\n              <UnderlierTicker key={idx}>\n                <UnderlierText>{`+${count - 2} More`}</UnderlierText>\n              </UnderlierTicker>\n            );\n          } else {\n            return null;\n          }\n        })}\n      </UnderlierWrapper>\n    </UnderlinerContainer>\n  );\n};\n\nexport const formatIssuerColumn = ({ data }: ColumnProps) => (\n  <IssuerContainer>\n    <IssuerLogo\n      src={bofaLogo}\n      alt={data.eventProductData?.issuer || ''}\n      width={'8.75rem'}\n    />\n    <IssuerName>{data.eventProductData?.issuer || ''}</IssuerName>\n    <IssuerSecuritynumber onClick={() => handleLMProductLink(data.cusip)}>\n      {data.cusip || ''}\n    </IssuerSecuritynumber>\n\n    <SecurityText>{data.productSymbol || ''}</SecurityText>\n  </IssuerContainer>\n);\n\nexport const generateActions = (\n  setDrawerData: Dispatch<SetStateAction<EventProductData | undefined>>,\n  setProductStructure: Dispatch<SetStateAction<string | undefined>>\n) => {\n  const EmailAction = ({ data }: ColumnProps) => {\n    const isButtonDisabled = useMemo((): boolean => {\n      if (!data['Event Calculation']) return true;\n      if (\n        ![\n          EventCalculationStatuses.CONFIRMED,\n          EventCalculationStatuses.REVIEW,\n        ].includes(data['Event Calculation'])\n      )\n        return true;\n      return false;\n    }, [data]);\n\n    return (\n      <LumaButton\n        variant=\"secondary\"\n        size=\"small\"\n        disabled={isButtonDisabled}\n        onClick={() => {\n          setDrawerData(data.eventProductData);\n          setProductStructure(data.eventProductData?.structureNameInternal);\n        }}\n        icon={{\n          iconComponent: <LumaIcon iconCode=\"envelope\" />,\n        }}\n      >\n        Send Notification\n      </LumaButton>\n    );\n  };\n  return EmailAction;\n};\n\ninterface StatusProps {\n  color: string;\n  icon: IconName;\n}\ninterface StatusSymbols {\n  [key: string]: StatusProps;\n}\n\nconst statusSymbols: StatusSymbols = {\n  'Upcoming Event': { color: 'black', icon: 'calendar' },\n  'Pending Event': { color: colors.warning60, icon: 'clock' },\n  Review: { color: colors.negative60, icon: 'circle-xmark' },\n  Confirmed: { color: colors.positive60, icon: 'check-circle' },\n};\n\ninterface CashSettlementRateMap {\n  fieldName: keyof CashSettlementRates;\n  label: string;\n}\nconst cashSettlementRatesMapping: CashSettlementRateMap[] = [\n  { fieldName: 'lumaRate', label: 'Luma' },\n  { fieldName: 'issuerRate', label: 'Issuer' },\n  { fieldName: 'rate', label: 'Confirmed' },\n];\n\ninterface PhysicalSettlementMap {\n  fieldName: 'lumaValue' | 'issuerValue' | 'value';\n  label: string;\n}\nconst physicalSettlementRatesMapping: PhysicalSettlementMap[] = [\n  { fieldName: 'lumaValue', label: 'Luma' },\n  { fieldName: 'issuerValue', label: 'Issuer' },\n  { fieldName: 'value', label: 'Confirmed' },\n];\n\nconst getPhysicalSettlement = (\n  physicalSettlements: PhysicalSettlement[] | undefined,\n  fieldName: 'lumaValue' | 'issuerValue' | 'value'\n): string | null => {\n  if (!physicalSettlements) return '';\n  const { cash: cashSettlement, shares: sharesSettlement } =\n    getPhysicalSettlementData(physicalSettlements);\n\n  const sharePlurality =\n    sharesSettlement?.[fieldName] === 1 ? 'Share' : 'Shares';\n\n  const shares = sharesSettlement?.[fieldName]\n    ? `${sharesSettlement[fieldName]} ${sharePlurality}`\n    : '';\n  const cash = cashSettlement?.[fieldName]\n    ? `$${cashSettlement?.[fieldName] || 0}`\n    : '';\n  return sharesSettlement?.[fieldName]\n    ? `${shares}${shares && cash && ' + '}${cash}`\n    : null;\n};\n\nconst formatCashSettlement = (\n  rates: CashSettlementRates,\n  type: keyof CashSettlementRates\n): string | null => {\n  return rates[type] ? `${rates[type]}%` : null;\n};\n\nexport const ThresholdProximityColumn = ({ data }: ColumnProps) => {\n  const barrier = data?.Threshold;\n  const principalProximityAboveOrBelow = data?.principalProximityAboveOrBelow;\n  const principalProximityValue = data?.principalProximityValue;\n  const barrierText = useMemo(\n    () => getBarrierText(data?.['Event Type'], data.downsideType),\n    [data]\n  );\n\n  const principalProximityDisplay: string | null = useMemo(() => {\n    if (principalProximityAboveOrBelow) {\n      if (principalProximityAboveOrBelow === PrincipalProximity.POSITIVE) {\n        return ' Above';\n      } else {\n        return ' Below';\n      }\n    }\n    return null;\n  }, [principalProximityAboveOrBelow]);\n\n  return (\n    <ThresholdContainer>\n      <PrincipalProximityWrapper>\n        <PrincipalProximityValue\n          principleProxAboveOrBelow={principalProximityAboveOrBelow}\n        >\n          <PrincipalProximityNumber>\n            {principalProximityValue || '------'}\n          </PrincipalProximityNumber>\n        </PrincipalProximityValue>\n        {principalProximityDisplay}\n      </PrincipalProximityWrapper>\n\n      {barrier ? (\n        <Barrier>\n          <BarrierValue>\n            {+(barrier * 100).toFixed(2)}% {barrierText ?? null}\n          </BarrierValue>\n        </Barrier>\n      ) : null}\n    </ThresholdContainer>\n  );\n};\n\nexport const StatusComponent = ({ data }: ColumnProps) => {\n  const confirmationStatus: ConfirmationStatus | undefined =\n    data?.confirmationStatus;\n  return (\n    <StatusContainer>\n      {confirmationStatus?.status && (\n        <StatusLabelContainer>\n          <StatusLabel color={statusSymbols[confirmationStatus.status]?.color}>\n            {confirmationStatus.status}\n          </StatusLabel>\n\n          {confirmationStatus.status === EventCalculationStatuses.CONFIRMED ? (\n            <SettlementRateValue>\n              <SettlementRateValue>\n                {confirmationStatus?.cashSettlementRates\n                  ? formatCashSettlement(\n                      confirmationStatus.cashSettlementRates,\n                      'rate'\n                    )\n                  : getPhysicalSettlement(\n                      confirmationStatus.physicalSettlementRates,\n                      'value'\n                    )}\n              </SettlementRateValue>\n            </SettlementRateValue>\n          ) : null}\n        </StatusLabelContainer>\n      )}\n      {confirmationStatus?.cashSettlementRates && (\n        <SettlementRates>\n          {cashSettlementRatesMapping.map(\n            (cashSettlementRate: CashSettlementRateMap, idx: number) => {\n              if (\n                cashSettlementRate.label === 'Confirmed' &&\n                confirmationStatus.status === EventCalculationStatuses.CONFIRMED\n              )\n                return null;\n              return confirmationStatus.cashSettlementRates?.[\n                cashSettlementRate.fieldName\n              ] ? (\n                <SettlementRate key={idx}>\n                  <SettlementRateLabel>\n                    {cashSettlementRate.label}\n                  </SettlementRateLabel>\n                  <SettlementRateValue>\n                    {formatCashSettlement(\n                      confirmationStatus.cashSettlementRates,\n                      cashSettlementRate.fieldName\n                    )}\n                  </SettlementRateValue>\n                </SettlementRate>\n              ) : null;\n            }\n          )}\n        </SettlementRates>\n      )}\n      {confirmationStatus?.physicalSettlementRates && (\n        <SettlementRates>\n          {physicalSettlementRatesMapping.map(\n            (physicalSettlement: PhysicalSettlementMap, idx: number) => {\n              const physicalSettlementValue = getPhysicalSettlement(\n                confirmationStatus.physicalSettlementRates,\n                physicalSettlement.fieldName\n              );\n              if (\n                !physicalSettlementValue ||\n                (physicalSettlement.label === 'Confirmed' &&\n                  confirmationStatus.status ===\n                    EventCalculationStatuses.CONFIRMED)\n              )\n                return null;\n              return (\n                <SettlementRate key={idx}>\n                  <SettlementRateLabel>\n                    {physicalSettlement.label}\n                  </SettlementRateLabel>\n                  <SettlementRateValue>\n                    {physicalSettlementValue}\n                  </SettlementRateValue>\n                </SettlementRate>\n              );\n            }\n          )}\n        </SettlementRates>\n      )}\n    </StatusContainer>\n  );\n};\n\nexport const StructuredComponent = ({ data }: ColumnProps) => (\n  <StructuredContainer>\n    <StructuredText>{data.Structure}</StructuredText>\n  </StructuredContainer>\n);\n\nexport const IssuerNameTooltip = ({\n  data,\n}: ITooltipParams<RowData, string>) => {\n  return <TooltipWrapper>{data?.eventProductData?.issuer}</TooltipWrapper>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}