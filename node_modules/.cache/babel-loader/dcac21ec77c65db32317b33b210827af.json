{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/creationhub/src/components/PricingForm/groups/Quoting/QuotingInCreation.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { useEffect, useState } from 'react';\nimport { LumaCheckbox, LumaIcon, LumaModal } from '@luma-fe-workspace/design-system';\nimport { Hint } from '../../elements/Hint';\nimport { IssuerLogo, Rectangle, CenteredCell, QuotingWrapper, Title, NoIssuersErrorTitle, NoIssuersErrorText, NoIssuersErrorButton, QuotingTable } from './Quoting.styles';\nimport { issuersDisplayData } from './QuotingUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function QuotingInCreation({\n  issuers,\n  selectedIssuers,\n  toggleIssuer,\n  toggleAllIssuers\n}) {\n  _s();\n\n  const [displayNoIssuersModal, setDisplayNoIssuersModal] = useState(false);\n  const areIssuersEmpty = !issuers || !Object.keys(issuers).length;\n  const areAllIssuersSelected = !areIssuersEmpty && Object.keys(issuers).every(key => selectedIssuers.includes(key));\n  useEffect(() => {\n    setDisplayNoIssuersModal(areIssuersEmpty);\n  }, [issuers]);\n\n  const hideNoIssuersModal = () => {\n    setDisplayNoIssuersModal(false);\n  };\n\n  const columns = [{\n    label: 'Available Issuers',\n    header: /*#__PURE__*/_jsxDEV(LumaCheckbox, {\n      checkboxKey: \"toggleIssuers\",\n      checked: areAllIssuersSelected,\n      onChange: e => {\n        toggleAllIssuers(e.target.checked);\n      },\n      label: \"Available Issuers\",\n      \"data-testid\": \"checkbox-available_issuers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this),\n    field: ({\n      selected,\n      id\n    }) => {\n      var _issuersDisplayData$i;\n\n      const displayData = (_issuersDisplayData$i = issuersDisplayData[id]) != null ? _issuersDisplayData$i : {\n        label: id\n      };\n      return /*#__PURE__*/_jsxDEV(LumaCheckbox, {\n        checkboxKey: id,\n        checked: selected,\n        onChange: () => {\n          toggleIssuer(id);\n        },\n        \"data-testid\": `checkbox-${id}`,\n        label: displayData != null && displayData.icon ? /*#__PURE__*/_jsxDEV(IssuerLogo, {\n          src: displayData.icon,\n          alt: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this) : displayData.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    label: 'Quote',\n    field: ({\n      canAutoQuoteIndicative\n    }) => /*#__PURE__*/_jsxDEV(CenteredCell, {\n      children: canAutoQuoteIndicative ? /*#__PURE__*/_jsxDEV(Rectangle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(LumaIcon, {\n        style: {\n          fontSize: '1.25rem'\n        },\n        type: \"regular\",\n        iconCode: \"user-clock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  } // NOTE: currently not sent by backend, can be restored when implemented\n  // {\n  //   label: 'Credit Rating',\n  //   field: ({ rating, id }: { rating: string; id: IssuerId }) => (\n  //     <CenteredCell data-testid={`${id}-rating`}>{rating}</CenteredCell>\n  //   ),\n  // },\n  ];\n  const rows = Object.entries(issuers).map(([id, {\n    canAutoQuoteIndicative\n  }]) => {\n    const selected = selectedIssuers.includes(id);\n    return {\n      id,\n      values: [{\n        selected,\n        id\n      }, {\n        canAutoQuoteIndicative,\n        id\n      } // { rating, id },\n      ]\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LumaModal, {\n      isOpen: displayNoIssuersModal,\n      appElement: \"#root\",\n      style: {\n        content: {\n          border: 'none',\n          maxWidth: '29rem'\n        },\n        overlay: {\n          backgroundColor: 'rgba(0, 0, 0, 0.37)'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(NoIssuersErrorTitle, {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoIssuersErrorText, {\n        children: \"No issuer is assigned to the selected program. Please contact Luma support for assistance.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoIssuersErrorButton, {\n        variant: \"primary\",\n        size: \"large\",\n        onClick: hideNoIssuersModal,\n        \"data-testid\": \"button-dismiss_no_issuer_err\",\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuotingWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Get Quotes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hint, {\n        children: [\"Request quotes from individual issuers below. The\", ' ', /*#__PURE__*/_jsxDEV(LumaIcon, {\n          iconCode: \"user-clock\",\n          type: \"regular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), \" indicates a manual quote from issuer.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuotingTable, {\n        columns: columns,\n        rows: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuotingInCreation, \"FPATxUFkKP4vEfkpjZ8XxwExe6Y=\");\n\n_c = QuotingInCreation;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuotingInCreation\");","map":{"version":3,"names":["useEffect","useState","LumaCheckbox","LumaIcon","LumaModal","Hint","IssuerLogo","Rectangle","CenteredCell","QuotingWrapper","Title","NoIssuersErrorTitle","NoIssuersErrorText","NoIssuersErrorButton","QuotingTable","issuersDisplayData","QuotingInCreation","issuers","selectedIssuers","toggleIssuer","toggleAllIssuers","displayNoIssuersModal","setDisplayNoIssuersModal","areIssuersEmpty","Object","keys","length","areAllIssuersSelected","every","key","includes","hideNoIssuersModal","columns","label","header","e","target","checked","field","selected","id","displayData","icon","canAutoQuoteIndicative","fontSize","rows","entries","map","values","content","border","maxWidth","overlay","backgroundColor"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/creationhub/src/components/PricingForm/groups/Quoting/QuotingInCreation.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Issuer, IssuerId } from '@luma-fe-workspace/redux';\nimport {\n  LumaCheckbox,\n  LumaIcon,\n  LumaModal,\n} from '@luma-fe-workspace/design-system';\nimport { Hint } from '../../elements/Hint';\nimport {\n  IssuerLogo,\n  Rectangle,\n  CenteredCell,\n  QuotingWrapper,\n  Title,\n  NoIssuersErrorTitle,\n  NoIssuersErrorText,\n  NoIssuersErrorButton,\n  QuotingTable,\n} from './Quoting.styles';\nimport { issuersDisplayData } from './QuotingUtils';\n\ninterface QuotingProps {\n  issuers: Record<IssuerId, Issuer>;\n  selectedIssuers: IssuerId[];\n  toggleIssuer: (issuerId: IssuerId) => void;\n  toggleAllIssuers: (value: boolean) => void;\n}\n\nexport function QuotingInCreation({\n  issuers,\n  selectedIssuers,\n  toggleIssuer,\n  toggleAllIssuers,\n}: QuotingProps) {\n  const [displayNoIssuersModal, setDisplayNoIssuersModal] = useState(false);\n  const areIssuersEmpty = !issuers || !Object.keys(issuers).length;\n  const areAllIssuersSelected =\n    !areIssuersEmpty &&\n    Object.keys(issuers).every((key) => selectedIssuers.includes(key));\n\n  useEffect(() => {\n    setDisplayNoIssuersModal(areIssuersEmpty);\n  }, [issuers]);\n\n  const hideNoIssuersModal = () => {\n    setDisplayNoIssuersModal(false);\n  };\n\n  const columns = [\n    {\n      label: 'Available Issuers',\n      header: (\n        <LumaCheckbox\n          checkboxKey=\"toggleIssuers\"\n          checked={areAllIssuersSelected}\n          onChange={(e) => {\n            toggleAllIssuers(e.target.checked);\n          }}\n          label=\"Available Issuers\"\n          data-testid=\"checkbox-available_issuers\"\n        />\n      ),\n      field: ({ selected, id }: { selected: boolean; id: IssuerId }) => {\n        const displayData = issuersDisplayData[id] ?? { label: id };\n        return (\n          <LumaCheckbox\n            checkboxKey={id}\n            checked={selected}\n            onChange={() => {\n              toggleIssuer(id);\n            }}\n            data-testid={`checkbox-${id}`}\n            label={\n              displayData?.icon ? (\n                <IssuerLogo src={displayData.icon} alt={id} />\n              ) : (\n                displayData.label\n              )\n            }\n          />\n        );\n      },\n    },\n    {\n      label: 'Quote',\n      field: ({\n        canAutoQuoteIndicative,\n      }: {\n        canAutoQuoteIndicative: boolean;\n      }) => (\n        <CenteredCell>\n          {canAutoQuoteIndicative ? (\n            <Rectangle />\n          ) : (\n            <LumaIcon\n              style={{ fontSize: '1.25rem' }}\n              type=\"regular\"\n              iconCode=\"user-clock\"\n            />\n          )}\n        </CenteredCell>\n      ),\n    },\n    // NOTE: currently not sent by backend, can be restored when implemented\n    // {\n    //   label: 'Credit Rating',\n    //   field: ({ rating, id }: { rating: string; id: IssuerId }) => (\n    //     <CenteredCell data-testid={`${id}-rating`}>{rating}</CenteredCell>\n    //   ),\n    // },\n  ];\n\n  const rows = Object.entries(issuers).map(\n    ([id, { canAutoQuoteIndicative }]) => {\n      const selected = selectedIssuers.includes(id);\n      return {\n        id,\n        values: [\n          { selected, id },\n          { canAutoQuoteIndicative, id },\n          // { rating, id },\n        ],\n      };\n    }\n  );\n  return (\n    <>\n      <LumaModal\n        isOpen={displayNoIssuersModal}\n        appElement=\"#root\"\n        style={{\n          content: {\n            border: 'none',\n            maxWidth: '29rem',\n          },\n          overlay: {\n            backgroundColor: 'rgba(0, 0, 0, 0.37)',\n          },\n        }}\n      >\n        <NoIssuersErrorTitle>Error</NoIssuersErrorTitle>\n        <NoIssuersErrorText>\n          No issuer is assigned to the selected program. Please contact Luma\n          support for assistance.\n        </NoIssuersErrorText>\n        <NoIssuersErrorButton\n          variant=\"primary\"\n          size=\"large\"\n          onClick={hideNoIssuersModal}\n          data-testid=\"button-dismiss_no_issuer_err\"\n        >\n          Dismiss\n        </NoIssuersErrorButton>\n      </LumaModal>\n      <QuotingWrapper>\n        <Title>Get Quotes</Title>\n        <Hint>\n          Request quotes from individual issuers below. The{' '}\n          <LumaIcon iconCode=\"user-clock\" type=\"regular\" /> indicates a manual\n          quote from issuer.\n        </Hint>\n        <QuotingTable columns={columns} rows={rows} />\n      </QuotingWrapper>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}