{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventDetail/EventDetail.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport React, { useEffect, useState } from 'react';\nimport { EventDataHeader } from './EventDataHeader';\nimport { selectUsername, useAppSelector } from '@luma-fe-workspace/redux';\nimport { EventContainer, EventContent, PreviewEmailContent, MoreInfoContent } from './EventDetail.style';\nimport { EventDetailAccordion } from './EventDetailAccordion';\nimport { ProductDetails } from './ProductDetails';\nimport { SelectValue } from './SelectValue';\nimport { EventEmail } from './EventEmail';\nimport { EventDataFooter } from './EventDataFooter';\nimport { Pill } from '../Pill';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let LevelSource;\n\n(function (LevelSource) {\n  LevelSource[\"CONFIRMED\"] = \"Confirmed\";\n  LevelSource[\"LUMA\"] = \"Luma\";\n  LevelSource[\"ISSUER\"] = \"Issuer\";\n})(LevelSource || (LevelSource = {}));\n\n/**\n * Base component to display all of the information associated with the event.\n * @param {boolean} isOpen - Determines if the EventDetails is currently open.\n * @param {EventProductData} productData - the product data\n * @returns {React.ReactNode} the EventDetail.\n. */\nexport const EventDetail = ({\n  isOpen,\n  productData,\n  closeDrawer: _closeDrawer = () => {\n    /* do nothing */\n  }\n}) => {\n  _s();\n\n  const userName = useAppSelector(selectUsername);\n  const [activeButton, setActiveButton] = useState('Preview Email');\n  const [emailRecipients, setEmailRecipients] = useState([]);\n  const [selectedValue, setSelectedValue] = useState({\n    type: LevelSource.CONFIRMED,\n    value: ''\n  });\n  useEffect(() => {\n    setEmailRecipients([userName]);\n  }, [userName]);\n\n  if (productData && isOpen) {\n    return /*#__PURE__*/_jsxDEV(EventContainer, {\n      children: [/*#__PURE__*/_jsxDEV(EventDataHeader, {\n        activeButton: activeButton,\n        setActiveButton: setActiveButton,\n        productDetailsData: productData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventContent, {\n        children: activeButton === 'Preview Email' ? /*#__PURE__*/_jsxDEV(PreviewEmailContent, {\n          children: [/*#__PURE__*/_jsxDEV(EventDetailAccordion, {\n            header: \"Recipients\",\n            children: emailRecipients.map(email => /*#__PURE__*/_jsxDEV(Pill, {\n              text: email\n            }, email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EventDetailAccordion, {\n            header: \"Select Value*\",\n            status: productData.eventStatus,\n            children: /*#__PURE__*/_jsxDEV(SelectValue, {\n              selectedValue: selectedValue,\n              setSelectedValue: setSelectedValue,\n              productData: productData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EventDetailAccordion, {\n            header: \"Email Preview\",\n            borderBottom: \"0\",\n            children: /*#__PURE__*/_jsxDEV(EventEmail, {\n              eventData: productData,\n              payout: selectedValue.value,\n              companyKey: \"luma\",\n              templateKey: \"singleEventNotification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(MoreInfoContent, {\n          children: /*#__PURE__*/_jsxDEV(ProductDetails, {\n            id: productData.productIdentifier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventDataFooter, {\n        emailRecipients: emailRecipients,\n        eventData: productData,\n        payout: selectedValue.value,\n        companyKey: \"luma\",\n        templateKey: \"singleEventNotification\",\n        closeDrawer: _closeDrawer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(EventDetail, \"PnRVwKhGutg4IIHz/kmP4wc3IB8=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = EventDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["React","useEffect","useState","EventDataHeader","selectUsername","useAppSelector","EventContainer","EventContent","PreviewEmailContent","MoreInfoContent","EventDetailAccordion","ProductDetails","SelectValue","EventEmail","EventDataFooter","Pill","LevelSource","EventDetail","isOpen","productData","closeDrawer","userName","activeButton","setActiveButton","emailRecipients","setEmailRecipients","selectedValue","setSelectedValue","type","CONFIRMED","value","map","email","eventStatus","productIdentifier"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventDetail/EventDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { EventDataHeader } from './EventDataHeader';\nimport {\n  EventProductData,\n  selectUsername,\n  useAppSelector,\n} from '@luma-fe-workspace/redux';\nimport {\n  EventContainer,\n  EventContent,\n  PreviewEmailContent,\n  MoreInfoContent,\n} from './EventDetail.style';\nimport { EventDetailAccordion } from './EventDetailAccordion';\nimport { ProductDetails } from './ProductDetails';\nimport { SelectValue } from './SelectValue';\nimport { EventEmail } from './EventEmail';\nimport { EventDataFooter } from './EventDataFooter';\nimport { Pill } from '../Pill';\n\nexport interface EventDetailProps {\n  isOpen: boolean;\n  productData: EventProductData;\n  closeDrawer?: () => void;\n}\n\nexport enum LevelSource {\n  CONFIRMED = 'Confirmed',\n  LUMA = 'Luma',\n  ISSUER = 'Issuer',\n}\nexport interface SelectedValue {\n  type: LevelSource;\n  value: string;\n}\n\n/**\n * Base component to display all of the information associated with the event.\n * @param {boolean} isOpen - Determines if the EventDetails is currently open.\n * @param {EventProductData} productData - the product data\n * @returns {React.ReactNode} the EventDetail.\n. */\nexport const EventDetail: React.FC<EventDetailProps> = ({\n  isOpen,\n  productData,\n  closeDrawer = () => {\n    /* do nothing */\n  },\n}: EventDetailProps): React.ReactElement | null => {\n  const userName = useAppSelector(selectUsername);\n\n  const [activeButton, setActiveButton] = useState('Preview Email');\n  const [emailRecipients, setEmailRecipients] = useState<string[]>([]);\n  const [selectedValue, setSelectedValue] = useState<SelectedValue>({\n    type: LevelSource.CONFIRMED,\n    value: '',\n  });\n\n  useEffect(() => {\n    setEmailRecipients([userName]);\n  }, [userName]);\n\n  if (productData && isOpen) {\n    return (\n      <EventContainer>\n        <EventDataHeader\n          activeButton={activeButton}\n          setActiveButton={setActiveButton}\n          productDetailsData={productData}\n        />\n        <EventContent>\n          {activeButton === 'Preview Email' ? (\n            <PreviewEmailContent>\n              <EventDetailAccordion header=\"Recipients\">\n                {emailRecipients.map((email) => (\n                  <Pill text={email} key={email} />\n                ))}\n              </EventDetailAccordion>\n              <EventDetailAccordion\n                header=\"Select Value*\"\n                status={productData.eventStatus}\n              >\n                <SelectValue\n                  selectedValue={selectedValue}\n                  setSelectedValue={setSelectedValue}\n                  productData={productData}\n                />\n              </EventDetailAccordion>\n              <EventDetailAccordion header=\"Email Preview\" borderBottom=\"0\">\n                <EventEmail\n                  eventData={productData}\n                  payout={selectedValue.value}\n                  companyKey=\"luma\"\n                  templateKey=\"singleEventNotification\"\n                />\n              </EventDetailAccordion>\n            </PreviewEmailContent>\n          ) : (\n            <MoreInfoContent>\n              <ProductDetails id={productData.productIdentifier} />\n            </MoreInfoContent>\n          )}\n        </EventContent>\n        <EventDataFooter\n          emailRecipients={emailRecipients}\n          eventData={productData}\n          payout={selectedValue.value}\n          companyKey=\"luma\"\n          templateKey=\"singleEventNotification\"\n          closeDrawer={closeDrawer}\n        />\n      </EventContainer>\n    );\n  } else {\n    return null;\n  }\n};\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAEEC,cAFF,EAGEC,cAHF,QAIO,0BAJP;AAKA,SACEC,cADF,EAEEC,YAFF,EAGEC,mBAHF,EAIEC,eAJF,QAKO,qBALP;AAMA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,IAAT,QAAqB,SAArB;;AAQA,WAAYC,WAAZ;;WAAYA,W;EAAAA,W;EAAAA,W;EAAAA,W;GAAAA,W,KAAAA,W;;AAUZ;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAuC,GAAG,CAAC;EACtDC,MADsD;EAEtDC,WAFsD;EAGtDC,WAAW,EAAXA,YAAW,GAAG,MAAM;IAClB;EACD;AALqD,CAAD,KAMJ;EAAA;;EACjD,MAAMC,QAAQ,GAAGhB,cAAc,CAACD,cAAD,CAA/B;EAEA,MAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,eAAD,CAAhD;EACA,MAAM,CAACsB,eAAD,EAAkBC,kBAAlB,IAAwCvB,QAAQ,CAAW,EAAX,CAAtD;EACA,MAAM,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAAgB;IAChE0B,IAAI,EAAEZ,WAAW,CAACa,SAD8C;IAEhEC,KAAK,EAAE;EAFyD,CAAhB,CAAlD;EAKA7B,SAAS,CAAC,MAAM;IACdwB,kBAAkB,CAAC,CAACJ,QAAD,CAAD,CAAlB;EACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;EAIA,IAAIF,WAAW,IAAID,MAAnB,EAA2B;IACzB,oBACE,QAAC,cAAD;MAAA,wBACE,QAAC,eAAD;QACE,YAAY,EAAEI,YADhB;QAEE,eAAe,EAAEC,eAFnB;QAGE,kBAAkB,EAAEJ;MAHtB;QAAA;QAAA;QAAA;MAAA,QADF,eAME,QAAC,YAAD;QAAA,UACGG,YAAY,KAAK,eAAjB,gBACC,QAAC,mBAAD;UAAA,wBACE,QAAC,oBAAD;YAAsB,MAAM,EAAC,YAA7B;YAAA,UACGE,eAAe,CAACO,GAAhB,CAAqBC,KAAD,iBACnB,QAAC,IAAD;cAAM,IAAI,EAAEA;YAAZ,GAAwBA,KAAxB;cAAA;cAAA;cAAA;YAAA,QADD;UADH;YAAA;YAAA;YAAA;UAAA,QADF,eAME,QAAC,oBAAD;YACE,MAAM,EAAC,eADT;YAEE,MAAM,EAAEb,WAAW,CAACc,WAFtB;YAAA,uBAIE,QAAC,WAAD;cACE,aAAa,EAAEP,aADjB;cAEE,gBAAgB,EAAEC,gBAFpB;cAGE,WAAW,EAAER;YAHf;cAAA;cAAA;cAAA;YAAA;UAJF;YAAA;YAAA;YAAA;UAAA,QANF,eAgBE,QAAC,oBAAD;YAAsB,MAAM,EAAC,eAA7B;YAA6C,YAAY,EAAC,GAA1D;YAAA,uBACE,QAAC,UAAD;cACE,SAAS,EAAEA,WADb;cAEE,MAAM,EAAEO,aAAa,CAACI,KAFxB;cAGE,UAAU,EAAC,MAHb;cAIE,WAAW,EAAC;YAJd;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAhBF;QAAA;UAAA;UAAA;UAAA;QAAA,QADD,gBA2BC,QAAC,eAAD;UAAA,uBACE,QAAC,cAAD;YAAgB,EAAE,EAAEX,WAAW,CAACe;UAAhC;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MA5BJ;QAAA;QAAA;QAAA;MAAA,QANF,eAuCE,QAAC,eAAD;QACE,eAAe,EAAEV,eADnB;QAEE,SAAS,EAAEL,WAFb;QAGE,MAAM,EAAEO,aAAa,CAACI,KAHxB;QAIE,UAAU,EAAC,MAJb;QAKE,WAAW,EAAC,yBALd;QAME,WAAW,EAAEV;MANf;QAAA;QAAA;QAAA;MAAA,QAvCF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAkDD,CAnDD,MAmDO;IACL,OAAO,IAAP;EACD;AACF,CA1EM;;GAAMH,W;UAOMZ,c;;;KAPNY,W"},"metadata":{},"sourceType":"module"}