{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\";\nconst _excluded = [\"label\", \"disabled\", \"checked\", \"onChange\", \"value\"];\nvar _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaRadio/LumaRadio.tsx\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { RadioContainer, StyledRadio, HiddenRadio } from './LumaRadio.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LumaRadio = _ref => {\n  let {\n    label,\n    disabled = false,\n    checked = false,\n    onChange,\n    value = 'radio'\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/_jsxDEV(RadioContainer, {\n    disabled: disabled,\n    checked: checked,\n    children: [/*#__PURE__*/_jsxDEV(HiddenRadio, Object.assign({\n      checked: checked,\n      onChange: onChange,\n      disabled: disabled,\n      value: value\n    }, rest), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledRadio, {\n      checked: checked,\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = LumaRadio;\n\nvar _c;\n\n$RefreshReg$(_c, \"LumaRadio\");","map":{"version":3,"names":["RadioContainer","StyledRadio","HiddenRadio","LumaRadio","label","disabled","checked","onChange","value","rest"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaRadio/LumaRadio.tsx"],"sourcesContent":["import { RadioContainer, StyledRadio, HiddenRadio } from './LumaRadio.styles';\n\nexport interface RadioProps extends React.HTMLAttributes<HTMLInputElement> {\n  /**\n   * The label that is rendered to the right of the radio marker.\n   */\n  label?: React.ReactNode;\n  /**\n   * Determines whether the radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Determines whether the radio is checked.\n   */\n  checked?: boolean;\n  /**\n   * onChange action on radio.\n   */\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  /**\n   * The value associated with the radio.\n   */\n  value?: string;\n}\n\nexport const LumaRadio = ({\n  label,\n  disabled = false,\n  checked = false,\n  onChange,\n  value = 'radio',\n  ...rest\n}: RadioProps) => {\n  return (\n    <RadioContainer disabled={disabled} checked={checked}>\n      <HiddenRadio\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled}\n        value={value}\n        {...rest}\n      />\n      <StyledRadio checked={checked} disabled={disabled} />\n      {label}\n    </RadioContainer>\n  );\n};\n"],"mappings":";;;;AAAA,SAASA,cAAT,EAAyBC,WAAzB,EAAsCC,WAAtC,QAAyD,oBAAzD;;AAyBA,OAAO,MAAMC,SAAS,GAAG,QAOP;EAAA,IAPQ;IACxBC,KADwB;IAExBC,QAAQ,GAAG,KAFa;IAGxBC,OAAO,GAAG,KAHc;IAIxBC,QAJwB;IAKxBC,KAAK,GAAG;EALgB,CAOR;EAAA,IADbC,IACa;;EAChB,oBACE,QAAC,cAAD;IAAgB,QAAQ,EAAEJ,QAA1B;IAAoC,OAAO,EAAEC,OAA7C;IAAA,wBACE,QAAC,WAAD;MACE,OAAO,EAAEA,OADX;MAEE,QAAQ,EAAEC,QAFZ;MAGE,QAAQ,EAAEF,QAHZ;MAIE,KAAK,EAAEG;IAJT,GAKMC,IALN;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,WAAD;MAAa,OAAO,EAAEH,OAAtB;MAA+B,QAAQ,EAAED;IAAzC;MAAA;MAAA;MAAA;IAAA,QARF,EASGD,KATH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CArBM;KAAMD,S"},"metadata":{},"sourceType":"module"}