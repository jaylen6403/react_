{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/components/EventsWidget/Scroll/Scroll.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport { ScrollContainer, ScrollWrapper, ArrowContainerLeft, ArrowContainerRight, ArrowWrapper, EventsWidgetBody } from './Scroll.styles';\nimport { colors } from '@luma-fe-workspace/design-system';\nimport { Icon } from '@luma-fe-workspace/design-system';\nimport { EventsList } from '../EventsList/EventsList';\nimport { ProductTypes } from '../../../utils/types';\nimport { Spinner } from '../../Spinner/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Scroll = ({\n  annuitiesToggle,\n  eventsLoading,\n  productsType,\n  eventsData\n}) => {\n  _s();\n\n  const maxScrollWidthRef = useRef(0);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const carouselRef = useRef(null);\n  const [showLeftArrow, setShowLeftArrow] = useState(false);\n  const [showRightArrow, setShowRightArrow] = useState(true);\n  const [updateScroll, setUpdateScroll] = useState(false);\n  const rightArrowVisible = useCallback(() => {\n    setShowRightArrow(true);\n  }, []);\n\n  const leftArrowVisible = () => !showLeftArrow && setShowLeftArrow(true);\n\n  const movePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(prevState => prevState - 1);\n      leftArrowVisible();\n      rightArrowVisible();\n    } else {\n      setShowLeftArrow(false);\n    }\n  };\n\n  const moveNext = () => {\n    var _carouselRef$current;\n\n    if (carouselRef.current !== null && ((_carouselRef$current = carouselRef.current) == null ? void 0 : _carouselRef$current.offsetWidth) * currentIndex <= maxScrollWidthRef.current) {\n      setCurrentIndex(prevState => prevState + 1);\n      leftArrowVisible();\n      rightArrowVisible();\n    } else {\n      setShowRightArrow(false);\n    }\n  };\n\n  useEffect(() => {\n    if (carouselRef !== null && carouselRef.current !== null) {\n      carouselRef.current.scrollLeft = carouselRef.current.offsetWidth * currentIndex;\n    }\n  }, [currentIndex]);\n  useEffect(() => {\n    maxScrollWidthRef.current = carouselRef.current ? carouselRef.current.scrollWidth - carouselRef.current.offsetWidth : 0;\n\n    if (maxScrollWidthRef.current !== 0) {\n      rightArrowVisible();\n    } else {\n      setShowRightArrow(false);\n    }\n  }, [updateScroll, annuitiesToggle, carouselRef]);\n\n  const scrollEvent = x => {\n    if (carouselRef) {\n      var _carouselRef$current2, _carouselRef$current3;\n\n      if (((_carouselRef$current2 = carouselRef.current) == null ? void 0 : _carouselRef$current2.scrollLeft) === 0) {\n        setCurrentIndex(0);\n        setShowLeftArrow(false);\n        rightArrowVisible();\n      } else if (((_carouselRef$current3 = carouselRef.current) == null ? void 0 : _carouselRef$current3.scrollLeft) === maxScrollWidthRef.current) {\n        var _carouselRef$current4;\n\n        const maxIndex = maxScrollWidthRef.current / ((_carouselRef$current4 = carouselRef.current) == null ? void 0 : _carouselRef$current4.offsetWidth);\n        setCurrentIndex(maxIndex);\n        leftArrowVisible();\n        setShowRightArrow(false);\n      } else {\n        leftArrowVisible();\n        rightArrowVisible();\n      }\n    }\n  };\n\n  if (!eventsLoading && !(eventsData != null && eventsData.length)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ScrollContainer, {\n    isLoading: eventsLoading,\n    children: /*#__PURE__*/_jsxDEV(ScrollWrapper, {\n      isLoading: eventsLoading,\n      children: [showLeftArrow && /*#__PURE__*/_jsxDEV(ArrowContainerLeft, {\n        onClick: movePrev,\n        children: /*#__PURE__*/_jsxDEV(ArrowWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            iconCode: \"chevron-left\",\n            prefix: \"fal\",\n            style: {\n              color: `${colors.neutral60}`,\n              height: '40px',\n              width: '40px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EventsWidgetBody, {\n        ref: carouselRef,\n        onScroll: scrollEvent,\n        isLoading: eventsLoading,\n        isSPS: productsType === ProductTypes.StructuredProducts,\n        children: eventsLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(EventsList, {\n          productType: productsType,\n          data: eventsData,\n          annuitiesToggle: annuitiesToggle,\n          setUpdateScroll: setUpdateScroll,\n          updateScroll: updateScroll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), !eventsLoading && !!eventsData && showRightArrow && /*#__PURE__*/_jsxDEV(ArrowContainerRight, {\n        onClick: moveNext,\n        children: /*#__PURE__*/_jsxDEV(ArrowWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            iconCode: \"chevron-right\",\n            prefix: \"fal\",\n            style: {\n              color: `${colors.neutral60}`,\n              height: '40px',\n              width: '40px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Scroll, \"+o5S02Mt/u4KeSKWz9TfMX1jZ5M=\");\n\n_c = Scroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scroll\");","map":{"version":3,"names":["useState","useRef","useEffect","useCallback","ScrollContainer","ScrollWrapper","ArrowContainerLeft","ArrowContainerRight","ArrowWrapper","EventsWidgetBody","colors","Icon","EventsList","ProductTypes","Spinner","Scroll","annuitiesToggle","eventsLoading","productsType","eventsData","maxScrollWidthRef","currentIndex","setCurrentIndex","carouselRef","showLeftArrow","setShowLeftArrow","showRightArrow","setShowRightArrow","updateScroll","setUpdateScroll","rightArrowVisible","leftArrowVisible","movePrev","prevState","moveNext","current","offsetWidth","scrollLeft","scrollWidth","scrollEvent","x","maxIndex","length","color","neutral60","height","width","StructuredProducts"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/components/EventsWidget/Scroll/Scroll.tsx"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\n\nimport {\n  ScrollContainer,\n  ScrollWrapper,\n  ArrowContainerLeft,\n  ArrowContainerRight,\n  ArrowWrapper,\n  EventsWidgetBody,\n} from './Scroll.styles';\nimport { colors } from '@luma-fe-workspace/design-system';\nimport { Icon } from '@luma-fe-workspace/design-system';\nimport { EventsList } from '../EventsList/EventsList';\nimport { ProductType, ProductTypes } from '../../../utils/types';\nimport { Spinner } from '../../Spinner/Spinner';\nimport { AnnuitiesEventData } from '../../../utils/annuitiesUtils';\nimport { EventCardData } from '@luma-fe-workspace/redux';\n\ninterface ScrollProps {\n  annuitiesToggle: { next: boolean; past: boolean };\n  eventsLoading: boolean;\n  productsType: ProductType;\n  eventsData: EventCardData[] | AnnuitiesEventData[] | undefined;\n}\n\nexport const Scroll = ({\n  annuitiesToggle,\n  eventsLoading,\n  productsType,\n  eventsData,\n}: ScrollProps) => {\n  const maxScrollWidthRef = useRef(0);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const carouselRef = useRef<HTMLDivElement>(null);\n  const [showLeftArrow, setShowLeftArrow] = useState(false);\n  const [showRightArrow, setShowRightArrow] = useState(true);\n  const [updateScroll, setUpdateScroll] = useState<boolean>(false);\n\n  const rightArrowVisible = useCallback(() => {\n    setShowRightArrow(true);\n  }, []);\n\n  const leftArrowVisible = () => !showLeftArrow && setShowLeftArrow(true);\n\n  const movePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex((prevState) => prevState - 1);\n      leftArrowVisible();\n      rightArrowVisible();\n    } else {\n      setShowLeftArrow(false);\n    }\n  };\n\n  const moveNext = () => {\n    if (\n      carouselRef.current !== null &&\n      carouselRef.current?.offsetWidth * currentIndex <=\n        maxScrollWidthRef.current\n    ) {\n      setCurrentIndex((prevState) => prevState + 1);\n      leftArrowVisible();\n      rightArrowVisible();\n    } else {\n      setShowRightArrow(false);\n    }\n  };\n\n  useEffect(() => {\n    if (carouselRef !== null && carouselRef.current !== null) {\n      carouselRef.current.scrollLeft =\n        carouselRef.current.offsetWidth * currentIndex;\n    }\n  }, [currentIndex]);\n\n  useEffect(() => {\n    maxScrollWidthRef.current = carouselRef.current\n      ? carouselRef.current.scrollWidth - carouselRef.current.offsetWidth\n      : 0;\n\n    if (maxScrollWidthRef.current !== 0) {\n      rightArrowVisible();\n    } else {\n      setShowRightArrow(false);\n    }\n  }, [updateScroll, annuitiesToggle, carouselRef]);\n\n  const scrollEvent = (x: React.UIEvent<HTMLDivElement>) => {\n    if (carouselRef) {\n      if (carouselRef.current?.scrollLeft === 0) {\n        setCurrentIndex(0);\n        setShowLeftArrow(false);\n        rightArrowVisible();\n      } else if (\n        carouselRef.current?.scrollLeft === maxScrollWidthRef.current\n      ) {\n        const maxIndex =\n          maxScrollWidthRef.current / carouselRef.current?.offsetWidth;\n        setCurrentIndex(maxIndex);\n        leftArrowVisible();\n        setShowRightArrow(false);\n      } else {\n        leftArrowVisible();\n        rightArrowVisible();\n      }\n    }\n  };\n\n  if (!eventsLoading && !eventsData?.length) {\n    return null;\n  }\n\n  return (\n    <ScrollContainer isLoading={eventsLoading}>\n      <ScrollWrapper isLoading={eventsLoading}>\n        {showLeftArrow && (\n          <ArrowContainerLeft onClick={movePrev}>\n            <ArrowWrapper>\n              <Icon\n                iconCode=\"chevron-left\"\n                prefix=\"fal\"\n                style={{\n                  color: `${colors.neutral60}`,\n                  height: '40px',\n                  width: '40px',\n                }}\n              />\n            </ArrowWrapper>\n          </ArrowContainerLeft>\n        )}\n        <EventsWidgetBody\n          ref={carouselRef}\n          onScroll={scrollEvent}\n          isLoading={eventsLoading}\n          isSPS={productsType === ProductTypes.StructuredProducts}\n        >\n          {eventsLoading ? (\n            <Spinner />\n          ) : (\n            <EventsList\n              productType={productsType}\n              data={eventsData}\n              annuitiesToggle={annuitiesToggle}\n              setUpdateScroll={setUpdateScroll}\n              updateScroll={updateScroll}\n            />\n          )}\n        </EventsWidgetBody>\n        {!eventsLoading && !!eventsData && showRightArrow && (\n          <ArrowContainerRight onClick={moveNext}>\n            <ArrowWrapper>\n              <Icon\n                iconCode=\"chevron-right\"\n                prefix=\"fal\"\n                style={{\n                  color: `${colors.neutral60}`,\n                  height: '40px',\n                  width: '40px',\n                }}\n              />\n            </ArrowWrapper>\n          </ArrowContainerRight>\n        )}\n      </ScrollWrapper>\n    </ScrollContainer>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}