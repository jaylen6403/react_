{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/lifecyclemanager/src/components/InfoWidget/InfoWidget.tsx\";\nimport { CollapseIcon, InfoHeader, InfoWidgetContent, InfoWidgetTitle, InfoWidgetWrapper } from './InfoWidget.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InfoWidget = ({\n  title,\n  content,\n  styles,\n  collapsible: _collapsible = true,\n  isCollapsed,\n  setIsCollapsed\n}) => {\n  return /*#__PURE__*/_jsxDEV(InfoWidgetWrapper, {\n    isCollapsed: isCollapsed,\n    styles: styles,\n    children: [/*#__PURE__*/_jsxDEV(InfoHeader, {\n      collapsible: _collapsible,\n      onClick: () => setIsCollapsed(!isCollapsed),\n      children: [/*#__PURE__*/_jsxDEV(InfoWidgetTitle, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), _collapsible && /*#__PURE__*/_jsxDEV(CollapseIcon, {\n        iconCode: \"chevron-up\",\n        type: \"solid\",\n        isCollapsed: isCollapsed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoWidgetContent, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = InfoWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoWidget\");","map":{"version":3,"names":["CollapseIcon","InfoHeader","InfoWidgetContent","InfoWidgetTitle","InfoWidgetWrapper","InfoWidget","title","content","styles","collapsible","isCollapsed","setIsCollapsed"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/lifecyclemanager/src/components/InfoWidget/InfoWidget.tsx"],"sourcesContent":["import { useState } from 'react';\nimport {\n  CollapseIcon,\n  InfoHeader,\n  InfoWidgetContent,\n  InfoWidgetTitle,\n  InfoWidgetWrapper,\n} from './InfoWidget.styles';\n\ntype InfoWidgetProps = {\n  title: string;\n  content?: React.ReactNode;\n  styles?: string;\n  collapsible?: boolean;\n  isCollapsed: boolean;\n  setIsCollapsed: (isCollapsed: boolean) => void;\n};\n\nexport const InfoWidget = ({\n  title,\n  content,\n  styles,\n  collapsible = true,\n  isCollapsed,\n  setIsCollapsed,\n}: InfoWidgetProps) => {\n  return (\n    <InfoWidgetWrapper isCollapsed={isCollapsed} styles={styles}>\n      <InfoHeader\n        collapsible={collapsible}\n        onClick={() => setIsCollapsed(!isCollapsed)}\n      >\n        <InfoWidgetTitle>{title}</InfoWidgetTitle>\n        {collapsible && (\n          <CollapseIcon\n            iconCode=\"chevron-up\"\n            type=\"solid\"\n            isCollapsed={isCollapsed}\n          />\n        )}\n      </InfoHeader>\n      <InfoWidgetContent>{content}</InfoWidgetContent>\n    </InfoWidgetWrapper>\n  );\n};\n"],"mappings":";AACA,SACEA,YADF,EAEEC,UAFF,EAGEC,iBAHF,EAIEC,eAJF,EAKEC,iBALF,QAMO,qBANP;;AAiBA,OAAO,MAAMC,UAAU,GAAG,CAAC;EACzBC,KADyB;EAEzBC,OAFyB;EAGzBC,MAHyB;EAIzBC,WAAW,EAAXA,YAAW,GAAG,IAJW;EAKzBC,WALyB;EAMzBC;AANyB,CAAD,KAOH;EACrB,oBACE,QAAC,iBAAD;IAAmB,WAAW,EAAED,WAAhC;IAA6C,MAAM,EAAEF,MAArD;IAAA,wBACE,QAAC,UAAD;MACE,WAAW,EAAEC,YADf;MAEE,OAAO,EAAE,MAAME,cAAc,CAAC,CAACD,WAAF,CAF/B;MAAA,wBAIE,QAAC,eAAD;QAAA,UAAkBJ;MAAlB;QAAA;QAAA;QAAA;MAAA,QAJF,EAKGG,YAAW,iBACV,QAAC,YAAD;QACE,QAAQ,EAAC,YADX;QAEE,IAAI,EAAC,OAFP;QAGE,WAAW,EAAEC;MAHf;QAAA;QAAA;QAAA;MAAA,QANJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE,QAAC,iBAAD;MAAA,UAAoBH;IAApB;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA1BM;KAAMF,U"},"metadata":{},"sourceType":"module"}