{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaModal/LumaModal.tsx\";\nimport \"core-js/modules/es.object.assign.js\";\nimport ReactModal from 'react-modal';\nimport { LumaIcon } from '../LumaIcon';\nimport { CloseButton } from './LumaModal.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LumaModal({\n  children,\n  isOpen,\n  appElement,\n  onAfterOpen,\n  onAfterClose,\n  style,\n  closeButton = {\n    show: false,\n    handleClose: function () {\n      throw new Error('Function not implemented.');\n    }\n  }\n}) {\n  const customStyles = {\n    content: {\n      top: '20%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      border: 'none',\n      borderRadius: '8px',\n      fontFamily: 'inherit',\n      textAlign: 'center',\n      inset: '20% auto auto 50%',\n      background: '#f4f6f8',\n      boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)'\n    },\n    overlay: {\n      zIndex: '2',\n      backgroundColor: 'rgba(0,0,0,0.4)'\n    }\n  };\n\n  if (!style) {\n    style = {\n      content: {},\n      overlay: {}\n    };\n  }\n\n  style.content = Object.assign({}, customStyles.content, style.content);\n  style.overlay = Object.assign({}, customStyles.overlay, style.overlay);\n  ReactModal.setAppElement(appElement);\n  return /*#__PURE__*/_jsxDEV(ReactModal, {\n    isOpen: isOpen,\n    onAfterOpen: onAfterOpen,\n    onAfterClose: onAfterClose,\n    style: style,\n    children: [closeButton.show && /*#__PURE__*/_jsxDEV(CloseButton, {\n      \"data-testid\": \"modal-close\",\n      children: /*#__PURE__*/_jsxDEV(LumaIcon, {\n        iconCode: \"times\",\n        onClick: closeButton.handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_c = LumaModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LumaModal\");","map":{"version":3,"names":["ReactModal","LumaIcon","CloseButton","LumaModal","children","isOpen","appElement","onAfterOpen","onAfterClose","style","closeButton","show","handleClose","Error","customStyles","content","top","left","transform","border","borderRadius","fontFamily","textAlign","inset","background","boxShadow","overlay","zIndex","backgroundColor","setAppElement"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaModal/LumaModal.tsx"],"sourcesContent":["import ReactModal, { Styles } from 'react-modal';\nimport { LumaIcon } from '../LumaIcon';\nimport { CloseButton } from './LumaModal.styles';\n\nexport interface LumaModalProps {\n  /**\n   * Modal's content\n   */\n  children: React.ReactNode;\n  /**\n   * Whether the modal is open\n   */\n  isOpen: boolean;\n  /**\n   * App's root element (for setting aria-hidden)\n   */\n  appElement: string | HTMLElement;\n  /**\n   * Callback fired after opening\n   */\n  onAfterOpen?: () => void;\n  /**\n   * Callback fired after closing\n   */\n  onAfterClose?: () => void;\n  /**\n   * Custom styling\n   */\n  style?: Styles;\n  /**\n   * Specifies whether to show the close button and its action\n   */\n  closeButton?: { show: boolean; handleClose: () => void };\n}\n\nexport function LumaModal({\n  children,\n  isOpen,\n  appElement,\n  onAfterOpen,\n  onAfterClose,\n  style,\n  closeButton = {\n    show: false,\n    handleClose: function (): void {\n      throw new Error('Function not implemented.');\n    },\n  },\n}: LumaModalProps) {\n  const customStyles: Styles = {\n    content: {\n      top: '20%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      border: 'none',\n      borderRadius: '8px',\n      fontFamily: 'inherit',\n      textAlign: 'center',\n      inset: '20% auto auto 50%',\n      background: '#f4f6f8',\n      boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)',\n    },\n    overlay: {\n      zIndex: '2',\n      backgroundColor: 'rgba(0,0,0,0.4)',\n    },\n  };\n  if (!style) {\n    style = { content: {}, overlay: {} };\n  }\n  style.content = { ...customStyles.content, ...style.content };\n  style.overlay = { ...customStyles.overlay, ...style.overlay };\n\n  ReactModal.setAppElement(appElement);\n\n  return (\n    <ReactModal\n      isOpen={isOpen}\n      onAfterOpen={onAfterOpen}\n      onAfterClose={onAfterClose}\n      style={style}\n    >\n      {closeButton.show && (\n        <CloseButton data-testid=\"modal-close\">\n          <LumaIcon iconCode=\"times\" onClick={closeButton.handleClose} />\n        </CloseButton>\n      )}\n      {children}\n    </ReactModal>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,UAAP,MAAmC,aAAnC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAiCA,OAAO,SAASC,SAAT,CAAmB;EACxBC,QADwB;EAExBC,MAFwB;EAGxBC,UAHwB;EAIxBC,WAJwB;EAKxBC,YALwB;EAMxBC,KANwB;EAOxBC,WAAW,GAAG;IACZC,IAAI,EAAE,KADM;IAEZC,WAAW,EAAE,YAAkB;MAC7B,MAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;IACD;EAJW;AAPU,CAAnB,EAaY;EACjB,MAAMC,YAAoB,GAAG;IAC3BC,OAAO,EAAE;MACPC,GAAG,EAAE,KADE;MAEPC,IAAI,EAAE,KAFC;MAGPC,SAAS,EAAE,kBAHJ;MAIPC,MAAM,EAAE,MAJD;MAKPC,YAAY,EAAE,KALP;MAMPC,UAAU,EAAE,SANL;MAOPC,SAAS,EAAE,QAPJ;MAQPC,KAAK,EAAE,mBARA;MASPC,UAAU,EAAE,SATL;MAUPC,SAAS,EAAE;IAVJ,CADkB;IAa3BC,OAAO,EAAE;MACPC,MAAM,EAAE,GADD;MAEPC,eAAe,EAAE;IAFV;EAbkB,CAA7B;;EAkBA,IAAI,CAACnB,KAAL,EAAY;IACVA,KAAK,GAAG;MAAEM,OAAO,EAAE,EAAX;MAAeW,OAAO,EAAE;IAAxB,CAAR;EACD;;EACDjB,KAAK,CAACM,OAAN,qBAAqBD,YAAY,CAACC,OAAlC,EAA8CN,KAAK,CAACM,OAApD;EACAN,KAAK,CAACiB,OAAN,qBAAqBZ,YAAY,CAACY,OAAlC,EAA8CjB,KAAK,CAACiB,OAApD;EAEA1B,UAAU,CAAC6B,aAAX,CAAyBvB,UAAzB;EAEA,oBACE,QAAC,UAAD;IACE,MAAM,EAAED,MADV;IAEE,WAAW,EAAEE,WAFf;IAGE,YAAY,EAAEC,YAHhB;IAIE,KAAK,EAAEC,KAJT;IAAA,WAMGC,WAAW,CAACC,IAAZ,iBACC,QAAC,WAAD;MAAa,eAAY,aAAzB;MAAA,uBACE,QAAC,QAAD;QAAU,QAAQ,EAAC,OAAnB;QAA2B,OAAO,EAAED,WAAW,CAACE;MAAhD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAPJ,EAWGR,QAXH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;KAvDeD,S"},"metadata":{},"sourceType":"module"}