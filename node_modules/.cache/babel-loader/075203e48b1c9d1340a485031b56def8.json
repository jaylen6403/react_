{"ast":null,"code":"import styled from 'styled-components';\nimport { AgGridReact } from 'ag-grid-react';\nimport { colors } from '@luma-fe-workspace/design-system';\nexport const CustomAgGrid = /*#__PURE__*/styled(AgGridReact).withConfig({\n  displayName: \"AGGridTablestyles__CustomAgGrid\",\n  componentId: \"sc-139zrv2-0\"\n})([\".ag-root-wrapper{border-radius:7px;}.ag-header{border-bottom:0.0625rem solid \", \";}.ag-header-row{background-color:\", \";}.ag-header-cell{display:flex;align-items:center;font-family:'IBM Plex Sans',sans-serif;font-size:0.875rem;font-weight:bold;color:\", \";padding-left:1rem;}.ag-cell{display:flex;align-items:center;font-family:'IBM Plex Sans',sans-serif;color:\", \";font-size:0.875rem;font-style:normal;font-weight:400;padding-left:1rem;line-height:0;}.ag-row{border-bottom:0.0625rem solid \", \";background-color:\", \";}.ag-center-cols-clipper{min-height:5rem !important;}.selected-row{background-color:\", \";}\"], colors.neutral20, colors.neutral20, colors.neutral80, colors.neutral80, colors.neutral40, colors.white, colors.primary10);\nexport const EmptyCriteriaWarningDescription = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"AGGridTablestyles__EmptyCriteriaWarningDescription\",\n  componentId: \"sc-139zrv2-1\"\n})([\"font-family:IBM Plex Sans;font-weight:300;display:flex;p:last-child{text-decoration:underline;cursor:pointer;color:\", \";}\"], colors.primary50);\nexport const EmptyCriteriaWarningDescriptionText = /*#__PURE__*/styled.p.withConfig({\n  displayName: \"AGGridTablestyles__EmptyCriteriaWarningDescriptionText\",\n  componentId: \"sc-139zrv2-2\"\n})([\"\"]);","map":{"version":3,"names":["styled","AgGridReact","colors","CustomAgGrid","neutral20","neutral80","neutral40","white","primary10","EmptyCriteriaWarningDescription","div","primary50","EmptyCriteriaWarningDescriptionText","p"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/AGGridTable/AGGridTable.styles.ts"],"sourcesContent":["import styled from 'styled-components';\nimport { AgGridReact } from 'ag-grid-react';\nimport { colors } from '@luma-fe-workspace/design-system';\n\nexport const CustomAgGrid = styled(AgGridReact)`\n  .ag-root-wrapper {\n    border-radius: 7px;\n  }\n  .ag-header {\n    border-bottom: 0.0625rem solid ${colors.neutral20};\n  }\n  .ag-header-row {\n    background-color: ${colors.neutral20};\n  }\n  .ag-header-cell {\n    display: flex;\n    align-items: center;\n    font-family: 'IBM Plex Sans', sans-serif;\n    font-size: 0.875rem;\n    font-weight: bold;\n    color: ${colors.neutral80};\n    padding-left: 1rem;\n  }\n\n  .ag-cell {\n    display: flex;\n    align-items: center;\n    font-family: 'IBM Plex Sans', sans-serif;\n    color: ${colors.neutral80};\n    font-size: 0.875rem;\n    font-style: normal;\n    font-weight: 400;\n    padding-left: 1rem;\n    line-height: 0;\n  }\n  .ag-row {\n    border-bottom: 0.0625rem solid ${colors.neutral40};\n    background-color: ${colors.white};\n  }\n  .ag-center-cols-clipper {\n    min-height: 5rem !important;\n  }\n  .selected-row {\n    background-color: ${colors.primary10};\n  }\n` as React.ComponentType as new <T>() => AgGridReact<T>;\n\nexport const EmptyCriteriaWarningDescription = styled.div`\n  font-family: IBM Plex Sans;\n  font-weight: 300;\n  display: flex;\n  p:last-child {\n    text-decoration: underline;\n    cursor: pointer;\n    color: ${colors.primary50};\n  }\n`;\nexport const EmptyCriteriaWarningDescriptionText = styled.p``;\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,MAAT,QAAuB,kCAAvB;AAEA,OAAO,MAAMC,YAAY,gBAAGH,MAAM,CAACC,WAAD,CAAT;EAAA;EAAA;AAAA,umBAKYC,MAAM,CAACE,SALnB,EAQDF,MAAM,CAACE,SARN,EAgBZF,MAAM,CAACG,SAhBK,EAwBZH,MAAM,CAACG,SAxBK,EAgCYH,MAAM,CAACI,SAhCnB,EAiCDJ,MAAM,CAACK,KAjCN,EAuCDL,MAAM,CAACM,SAvCN,CAAlB;AA2CP,OAAO,MAAMC,+BAA+B,gBAAGT,MAAM,CAACU,GAAV;EAAA;EAAA;AAAA,kIAO/BR,MAAM,CAACS,SAPwB,CAArC;AAUP,OAAO,MAAMC,mCAAmC,gBAAGZ,MAAM,CAACa,CAAV;EAAA;EAAA;AAAA,QAAzC"},"metadata":{},"sourceType":"module"}