{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventDetail/EventDataFooter/EventDataFooter.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { useEffect, useMemo } from 'react';\nimport { LumaButton } from '@luma-fe-workspace/design-system';\nimport { createProductDetailsUrl } from '@luma-fe-workspace/luma/dashboard';\nimport { EmailActions, EmailActionsWrapper, EmailActionsText } from './EventDataFooter.styles';\nimport { useSendUsingPostMutation } from '@luma-fe-workspace/redux';\nimport { formatEventType } from '../../../utils/gridUtils';\nimport { getTemplateValues } from '../../../utils/emailUtils';\nimport { useEventConfirmationOptions, StatusOptions } from '../../../utils/hooks/useEventConfirmationOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventDataFooter = ({\n  companyKey,\n  emailRecipients,\n  eventData,\n  payout,\n  templateKey,\n  closeDrawer: _closeDrawer = () => {\n    /* do nothing */\n  }\n}) => {\n  _s();\n\n  const [sendUsingPost, {\n    status\n  }] = useSendUsingPostMutation();\n  const {\n    toastData\n  } = useEventConfirmationOptions();\n\n  const handleLMProductLink = () => {\n    window.open(createProductDetailsUrl(eventData.productIdentifier), '_blank');\n  };\n\n  const emailTemplateValues = useMemo(() => getTemplateValues(eventData, payout), [eventData, payout]);\n  useEffect(() => {\n    toastData.setOpen(true);\n\n    if (status === 'fulfilled') {\n      toastData.setStatus(StatusOptions.Success);\n    } else if (status === 'rejected') {\n      toastData.setStatus(StatusOptions.Failure);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [status]);\n\n  const handleSendEmail = async () => {\n    try {\n      await sendUsingPost({\n        emailTemplate: {\n          to: emailRecipients,\n          from: 'support@lumafintech.com',\n          subject: `${formatEventType(eventData.confirmationType)} Notification ${emailTemplateValues['description']} ${eventData.productSymbol || ''}`,\n          companyKey: companyKey,\n          templateKey: templateKey,\n          model: emailTemplateValues\n        }\n      });\n    } catch (_unused) {\n      console.error(Error);\n    }\n\n    _closeDrawer();\n  };\n\n  return /*#__PURE__*/_jsxDEV(EmailActionsWrapper, {\n    children: /*#__PURE__*/_jsxDEV(EmailActions, {\n      children: [/*#__PURE__*/_jsxDEV(LumaButton, {\n        variant: \"secondary\",\n        size: \"medium\",\n        onClick: handleLMProductLink,\n        children: /*#__PURE__*/_jsxDEV(EmailActionsText, {\n          children: \"View in Lifecycle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LumaButton, {\n        variant: \"primary\",\n        size: \"medium\",\n        onClick: handleSendEmail,\n        children: /*#__PURE__*/_jsxDEV(EmailActionsText, {\n          children: \"Send Event Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EventDataFooter, \"E78z4orlLdDr8Xlep6uSHLB/E8g=\", false, function () {\n  return [useSendUsingPostMutation, useEventConfirmationOptions];\n});\n\n_c = EventDataFooter;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventDataFooter\");","map":{"version":3,"names":["useEffect","useMemo","LumaButton","createProductDetailsUrl","EmailActions","EmailActionsWrapper","EmailActionsText","useSendUsingPostMutation","formatEventType","getTemplateValues","useEventConfirmationOptions","StatusOptions","EventDataFooter","companyKey","emailRecipients","eventData","payout","templateKey","closeDrawer","sendUsingPost","status","toastData","handleLMProductLink","window","open","productIdentifier","emailTemplateValues","setOpen","setStatus","Success","Failure","handleSendEmail","emailTemplate","to","from","subject","confirmationType","productSymbol","model","console","error","Error"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventDetail/EventDataFooter/EventDataFooter.tsx"],"sourcesContent":["import { useEffect, useMemo } from 'react';\nimport { LumaButton } from '@luma-fe-workspace/design-system';\nimport { createProductDetailsUrl } from '@luma-fe-workspace/luma/dashboard';\nimport {\n  EmailActions,\n  EmailActionsWrapper,\n  EmailActionsText,\n} from './EventDataFooter.styles';\nimport {\n  EventProductData,\n  useSendUsingPostMutation,\n} from '@luma-fe-workspace/redux';\n\nimport { formatEventType } from '../../../utils/gridUtils';\nimport { getTemplateValues } from '../../../utils/emailUtils';\nimport {\n  useEventConfirmationOptions,\n  StatusOptions,\n} from '../../../utils/hooks/useEventConfirmationOptions';\n\ninterface Props {\n  companyKey: string;\n  emailRecipients: string[];\n  eventData: EventProductData;\n  payout: string;\n  templateKey: string;\n  closeDrawer?: () => void;\n}\nexport const EventDataFooter = ({\n  companyKey,\n  emailRecipients,\n  eventData,\n  payout,\n  templateKey,\n  closeDrawer = () => {\n    /* do nothing */\n  },\n}: Props) => {\n  const [sendUsingPost, { status }] = useSendUsingPostMutation();\n  const { toastData } = useEventConfirmationOptions();\n\n  const handleLMProductLink = () => {\n    window.open(createProductDetailsUrl(eventData.productIdentifier), '_blank');\n  };\n\n  const emailTemplateValues: { [key: string]: string | undefined } = useMemo(\n    () => getTemplateValues(eventData, payout),\n    [eventData, payout]\n  );\n\n  useEffect(() => {\n    toastData.setOpen(true);\n\n    if (status === 'fulfilled') {\n      toastData.setStatus(StatusOptions.Success);\n    } else if (status === 'rejected') {\n      toastData.setStatus(StatusOptions.Failure);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status]);\n\n  const handleSendEmail = async () => {\n    try {\n      await sendUsingPost({\n        emailTemplate: {\n          to: emailRecipients,\n          from: 'support@lumafintech.com',\n          subject: `${formatEventType(\n            eventData.confirmationType\n          )} Notification ${emailTemplateValues['description']} ${\n            eventData.productSymbol || ''\n          }`,\n          companyKey: companyKey,\n          templateKey: templateKey,\n          model: emailTemplateValues,\n        },\n      });\n    } catch {\n      console.error(Error);\n    }\n\n    closeDrawer();\n  };\n\n  return (\n    <EmailActionsWrapper>\n      <EmailActions>\n        <LumaButton\n          variant=\"secondary\"\n          size=\"medium\"\n          onClick={handleLMProductLink}\n        >\n          <EmailActionsText>View in Lifecycle</EmailActionsText>\n        </LumaButton>\n        <LumaButton variant=\"primary\" size=\"medium\" onClick={handleSendEmail}>\n          <EmailActionsText>Send Event Email</EmailActionsText>\n        </LumaButton>\n      </EmailActions>\n    </EmailActionsWrapper>\n  );\n};\n"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,uBAAT,QAAwC,mCAAxC;AACA,SACEC,YADF,EAEEC,mBAFF,EAGEC,gBAHF,QAIO,0BAJP;AAKA,SAEEC,wBAFF,QAGO,0BAHP;AAKA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SACEC,2BADF,EAEEC,aAFF,QAGO,kDAHP;;AAaA,OAAO,MAAMC,eAAe,GAAG,CAAC;EAC9BC,UAD8B;EAE9BC,eAF8B;EAG9BC,SAH8B;EAI9BC,MAJ8B;EAK9BC,WAL8B;EAM9BC,WAAW,EAAXA,YAAW,GAAG,MAAM;IAClB;EACD;AAR6B,CAAD,KASlB;EAAA;;EACX,MAAM,CAACC,aAAD,EAAgB;IAAEC;EAAF,CAAhB,IAA8Bb,wBAAwB,EAA5D;EACA,MAAM;IAAEc;EAAF,IAAgBX,2BAA2B,EAAjD;;EAEA,MAAMY,mBAAmB,GAAG,MAAM;IAChCC,MAAM,CAACC,IAAP,CAAYrB,uBAAuB,CAACY,SAAS,CAACU,iBAAX,CAAnC,EAAkE,QAAlE;EACD,CAFD;;EAIA,MAAMC,mBAA0D,GAAGzB,OAAO,CACxE,MAAMQ,iBAAiB,CAACM,SAAD,EAAYC,MAAZ,CADiD,EAExE,CAACD,SAAD,EAAYC,MAAZ,CAFwE,CAA1E;EAKAhB,SAAS,CAAC,MAAM;IACdqB,SAAS,CAACM,OAAV,CAAkB,IAAlB;;IAEA,IAAIP,MAAM,KAAK,WAAf,EAA4B;MAC1BC,SAAS,CAACO,SAAV,CAAoBjB,aAAa,CAACkB,OAAlC;IACD,CAFD,MAEO,IAAIT,MAAM,KAAK,UAAf,EAA2B;MAChCC,SAAS,CAACO,SAAV,CAAoBjB,aAAa,CAACmB,OAAlC;IACD,CAPa,CASd;;EACD,CAVQ,EAUN,CAACV,MAAD,CAVM,CAAT;;EAYA,MAAMW,eAAe,GAAG,YAAY;IAClC,IAAI;MACF,MAAMZ,aAAa,CAAC;QAClBa,aAAa,EAAE;UACbC,EAAE,EAAEnB,eADS;UAEboB,IAAI,EAAE,yBAFO;UAGbC,OAAO,EAAG,GAAE3B,eAAe,CACzBO,SAAS,CAACqB,gBADe,CAEzB,iBAAgBV,mBAAmB,CAAC,aAAD,CAAgB,IACnDX,SAAS,CAACsB,aAAV,IAA2B,EAC5B,EAPY;UAQbxB,UAAU,EAAEA,UARC;UASbI,WAAW,EAAEA,WATA;UAUbqB,KAAK,EAAEZ;QAVM;MADG,CAAD,CAAnB;IAcD,CAfD,CAeE,gBAAM;MACNa,OAAO,CAACC,KAAR,CAAcC,KAAd;IACD;;IAEDvB,YAAW;EACZ,CArBD;;EAuBA,oBACE,QAAC,mBAAD;IAAA,uBACE,QAAC,YAAD;MAAA,wBACE,QAAC,UAAD;QACE,OAAO,EAAC,WADV;QAEE,IAAI,EAAC,QAFP;QAGE,OAAO,EAAEI,mBAHX;QAAA,uBAKE,QAAC,gBAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MALF;QAAA;QAAA;QAAA;MAAA,QADF,eAQE,QAAC,UAAD;QAAY,OAAO,EAAC,SAApB;QAA8B,IAAI,EAAC,QAAnC;QAA4C,OAAO,EAAES,eAArD;QAAA,uBACE,QAAC,gBAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAzEM;;GAAMnB,e;UAUyBL,wB,EACdG,2B;;;KAXXE,e"},"metadata":{},"sourceType":"module"}