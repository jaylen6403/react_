{"ast":null,"code":"import \"core-js/modules/es.array.sort.js\";\nimport { createSlice } from '@reduxjs/toolkit';\nimport { mockLifecycleProductData } from './mockData/mockLifecycleProductData';\nimport { mockEventFiltering } from './mockData/mockLifecycleEventFilteringData';\nimport { DateHelper } from '@luma-fe-workspace/utility';\nimport { lifecycleManagerServiceApi } from '../lifecycleManagerService/lifecycleManagerServiceApi';\nimport { deskServiceApi } from '../deskService';\nconst initialState = {\n  dateRange: {\n    startDate: new Date().toISOString(),\n    endDate: DateHelper.addMonths(DateHelper.endOfMonth(new Date()).setHours(19, 59, 0, 0), 18).toISOString(),\n    rangeAbbreviation: '18M'\n  },\n  eventFilterOptions: mockEventFiltering,\n  selectedEventFilters: {\n    portfolioAttributes: {},\n    productAttributes: {}\n  },\n  lifecycleProducts: mockLifecycleProductData,\n  logoObject: {},\n  displayCurrency: 'USD'\n};\nexport const lifecycleSlice = createSlice({\n  name: 'lifecycle',\n  initialState,\n  reducers: {\n    setSelectedFilters(state, action) {\n      state.selectedEventFilters = action.payload;\n    },\n\n    setDateRange(state, action) {\n      state.dateRange = action.payload;\n    },\n\n    setDisplayCurrency(state, action) {\n      state.displayCurrency = action.payload;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addMatcher(lifecycleManagerServiceApi.endpoints.getFiltersUsingGet.matchFulfilled, (state, action) => {\n      const filterOptions = {\n        portfolioAttributes: action.payload.portfolioAttributes,\n        productAttributes: action.payload.productAttributes\n      };\n      const selectedFilters = {\n        portfolioAttributes: {},\n        productAttributes: {}\n      }; //Below clears out the selected filters\n\n      Object.keys(filterOptions['portfolioAttributes']).forEach(attr => {\n        if (selectedFilters['portfolioAttributes'][attr]) {\n          selectedFilters['portfolioAttributes'][attr] = [];\n        }\n      });\n      Object.keys(filterOptions['productAttributes']).forEach(attr => {\n        if (selectedFilters['productAttributes'][attr]) {\n          selectedFilters['productAttributes'][attr] = [];\n        }\n      }); //Below sorts the event filter options\n\n      Object.keys(filterOptions['productAttributes']).forEach(attr => {\n        if (filterOptions['productAttributes'][attr]) {\n          filterOptions['productAttributes'][attr].sort();\n        }\n      });\n      Object.keys(filterOptions['portfolioAttributes']).forEach(attr => {\n        if (filterOptions['portfolioAttributes'][attr]) {\n          filterOptions['portfolioAttributes'][attr].sort();\n        }\n      });\n      state.eventFilterOptions = filterOptions;\n      state.selectedEventFilters = selectedFilters;\n    });\n    builder.addMatcher(deskServiceApi.endpoints.getLogosUsingGet.matchFulfilled, (state, action) => {\n      state.logoObject = action.payload;\n    });\n  }\n});","map":{"version":3,"names":["createSlice","mockLifecycleProductData","mockEventFiltering","DateHelper","lifecycleManagerServiceApi","deskServiceApi","initialState","dateRange","startDate","Date","toISOString","endDate","addMonths","endOfMonth","setHours","rangeAbbreviation","eventFilterOptions","selectedEventFilters","portfolioAttributes","productAttributes","lifecycleProducts","logoObject","displayCurrency","lifecycleSlice","name","reducers","setSelectedFilters","state","action","payload","setDateRange","setDisplayCurrency","extraReducers","builder","addMatcher","endpoints","getFiltersUsingGet","matchFulfilled","filterOptions","selectedFilters","Object","keys","forEach","attr","sort","getLogosUsingGet"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/redux/lifecycle/slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { LifecycleProduct } from '../productService/productServiceEndpoints';\nimport { EventFilters, DateObject } from './types';\nimport { mockLifecycleProductData } from './mockData/mockLifecycleProductData';\nimport { mockEventFiltering } from './mockData/mockLifecycleEventFilteringData';\nimport { DateHelper } from '@luma-fe-workspace/utility';\nimport { lifecycleManagerServiceApi } from '../lifecycleManagerService/lifecycleManagerServiceApi';\nimport {\n  deskServiceApi,\n  GetCompanyLogosUsingGetResponseArg,\n} from '../deskService';\n\ninterface LifecycleState {\n  dateRange: DateObject;\n  eventFilterOptions: EventFilters;\n  selectedEventFilters: EventFilters;\n  lifecycleProducts: LifecycleProduct[];\n  logoObject: GetCompanyLogosUsingGetResponseArg;\n  displayCurrency: string;\n}\n\nconst initialState: LifecycleState = {\n  dateRange: {\n    startDate: new Date().toISOString(),\n    endDate: DateHelper.addMonths(\n      DateHelper.endOfMonth(new Date()).setHours(19, 59, 0, 0),\n      18\n    ).toISOString(),\n    rangeAbbreviation: '18M',\n  },\n  eventFilterOptions: mockEventFiltering,\n  selectedEventFilters: {\n    portfolioAttributes: {},\n    productAttributes: {},\n  },\n  lifecycleProducts: mockLifecycleProductData,\n  logoObject: {},\n  displayCurrency: 'USD',\n};\n\nexport const lifecycleSlice = createSlice({\n  name: 'lifecycle',\n  initialState,\n  reducers: {\n    setSelectedFilters(state, action: PayloadAction<EventFilters>) {\n      state.selectedEventFilters = action.payload;\n    },\n    setDateRange(state, action: PayloadAction<DateObject>) {\n      state.dateRange = action.payload;\n    },\n    setDisplayCurrency(state, action: PayloadAction<string>) {\n      state.displayCurrency = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addMatcher(\n      lifecycleManagerServiceApi.endpoints.getFiltersUsingGet.matchFulfilled,\n      (state, action) => {\n        const filterOptions: EventFilters = {\n          portfolioAttributes: action.payload.portfolioAttributes,\n          productAttributes: action.payload.productAttributes,\n        };\n        const selectedFilters: EventFilters = {\n          portfolioAttributes: {},\n          productAttributes: {},\n        };\n        //Below clears out the selected filters\n        Object.keys(filterOptions['portfolioAttributes']).forEach((attr) => {\n          if (selectedFilters['portfolioAttributes'][attr]) {\n            selectedFilters['portfolioAttributes'][attr] = [];\n          }\n        });\n        Object.keys(filterOptions['productAttributes']).forEach((attr) => {\n          if (selectedFilters['productAttributes'][attr]) {\n            selectedFilters['productAttributes'][attr] = [];\n          }\n        });\n        //Below sorts the event filter options\n        Object.keys(filterOptions['productAttributes']).forEach((attr) => {\n          if (filterOptions['productAttributes'][attr]) {\n            filterOptions['productAttributes'][attr].sort();\n          }\n        });\n        Object.keys(filterOptions['portfolioAttributes']).forEach((attr) => {\n          if (filterOptions['portfolioAttributes'][attr]) {\n            filterOptions['portfolioAttributes'][attr].sort();\n          }\n        });\n        state.eventFilterOptions = filterOptions;\n        state.selectedEventFilters = selectedFilters;\n      }\n    );\n    builder.addMatcher(\n      deskServiceApi.endpoints.getLogosUsingGet.matchFulfilled,\n      (state, action) => {\n        state.logoObject = action.payload;\n      }\n    );\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}