{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Message/Message.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.symbol.description.js\";\nimport { useEffect } from 'react';\nimport { MessageCol, MessageStyle, MessageContent, MessageTitle, MessageColoredIcon, MessageExitIcon, FlatXButton } from './Message.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Message = ({\n  /**\n   * Title of the message\n   */\n  title,\n\n  /**\n   * Description of the message (optional)\n   */\n  description,\n\n  /**\n   * If true, hide the message. By default: false\n   */\n  showMessage: _showMessage = false,\n  setShowMessage,\n\n  /**\n   * In seconds. By default: 3 seconds (subject to change)\n   */\n  timer: _timer = 3,\n\n  /**\n   * Message Type will decide the style of the Message:\n   *  (Default) info: Blue Message\n   *  success: Green Message\n   *  warn: Yellow Message\n   *  error: Red Message\n   */\n  messageType: _messageType = 'info'\n}) => {\n  _s();\n\n  const iconCode = {\n    info: 'circle-check',\n    success: 'circle-check',\n    error: 'circle-xmark',\n    warn: 'circle-exclamation'\n  }[_messageType]; // if message shouldn't be off, start timer\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setShowMessage(false), _timer * 1000);\n    return () => clearTimeout(timeout);\n  }, [_showMessage, _timer, setShowMessage]);\n  if (!_showMessage) return null;\n  return /*#__PURE__*/_jsxDEV(MessageStyle, {\n    messageType: _messageType,\n    children: [/*#__PURE__*/_jsxDEV(MessageColoredIcon, {\n      iconCode: iconCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageCol, {\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(MessageTitle, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), description ? /*#__PURE__*/_jsxDEV(MessageContent, {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 24\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlatXButton, {\n      onClick: () => setShowMessage(false),\n      children: /*#__PURE__*/_jsxDEV(MessageExitIcon, {\n        iconCode: \"times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Message, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["useEffect","MessageCol","MessageStyle","MessageContent","MessageTitle","MessageColoredIcon","MessageExitIcon","FlatXButton","Message","title","description","showMessage","setShowMessage","timer","messageType","iconCode","info","success","error","warn","timeout","setTimeout","clearTimeout"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Message/Message.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { IconCode } from '../Icon/Icon';\nimport {\n  MessageCol,\n  MessageStyle,\n  MessageContent,\n  MessageTitle,\n  MessageColoredIcon,\n  MessageExitIcon,\n  FlatXButton,\n} from './Message.style';\n\nexport type MessageType = 'info' | 'success' | 'error' | 'warn';\n\nexport interface MessageProps {\n  title: string;\n  showMessage: boolean;\n  setShowMessage: (value: boolean) => void;\n  messageType?: MessageType;\n  description?: string;\n  timer?: number;\n}\n\nexport const Message = ({\n  /**\n   * Title of the message\n   */\n  title,\n  /**\n   * Description of the message (optional)\n   */\n  description,\n  /**\n   * If true, hide the message. By default: false\n   */\n  showMessage = false,\n  setShowMessage,\n  /**\n   * In seconds. By default: 3 seconds (subject to change)\n   */\n  timer = 3,\n  /**\n   * Message Type will decide the style of the Message:\n   *  (Default) info: Blue Message\n   *  success: Green Message\n   *  warn: Yellow Message\n   *  error: Red Message\n   */\n  messageType = 'info',\n}: MessageProps) => {\n  const iconCode: IconCode = {\n    info: 'circle-check',\n    success: 'circle-check',\n    error: 'circle-xmark',\n    warn: 'circle-exclamation',\n  }[messageType] as IconCode;\n  // if message shouldn't be off, start timer\n  useEffect(() => {\n    const timeout = setTimeout(() => setShowMessage(false), timer * 1000);\n    return () => clearTimeout(timeout);\n  }, [showMessage, timer, setShowMessage]);\n  if (!showMessage) return null;\n  return (\n    <MessageStyle messageType={messageType}>\n      <MessageColoredIcon iconCode={iconCode} />\n      <MessageCol role=\"alert\">\n        <MessageTitle>{title}</MessageTitle>\n        {description ? <MessageContent>{description}</MessageContent> : null}\n      </MessageCol>\n      <FlatXButton onClick={() => setShowMessage(false)}>\n        <MessageExitIcon iconCode=\"times\" />\n      </FlatXButton>\n    </MessageStyle>\n  );\n};\n"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SACEC,UADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,YAJF,EAKEC,kBALF,EAMEC,eANF,EAOEC,WAPF,QAQO,iBARP;;AAqBA,OAAO,MAAMC,OAAO,GAAG,CAAC;EACtB;AACF;AACA;EACEC,KAJsB;;EAKtB;AACF;AACA;EACEC,WARsB;;EAStB;AACF;AACA;EACEC,WAAW,EAAXA,YAAW,GAAG,KAZQ;EAatBC,cAbsB;;EActB;AACF;AACA;EACEC,KAAK,EAALA,MAAK,GAAG,CAjBc;;EAkBtB;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAXA,YAAW,GAAG;AAzBQ,CAAD,KA0BH;EAAA;;EAClB,MAAMC,QAAkB,GAAG;IACzBC,IAAI,EAAE,cADmB;IAEzBC,OAAO,EAAE,cAFgB;IAGzBC,KAAK,EAAE,cAHkB;IAIzBC,IAAI,EAAE;EAJmB,EAKzBL,YALyB,CAA3B,CADkB,CAOlB;;EACAd,SAAS,CAAC,MAAM;IACd,MAAMoB,OAAO,GAAGC,UAAU,CAAC,MAAMT,cAAc,CAAC,KAAD,CAArB,EAA8BC,MAAK,GAAG,IAAtC,CAA1B;IACA,OAAO,MAAMS,YAAY,CAACF,OAAD,CAAzB;EACD,CAHQ,EAGN,CAACT,YAAD,EAAcE,MAAd,EAAqBD,cAArB,CAHM,CAAT;EAIA,IAAI,CAACD,YAAL,EAAkB,OAAO,IAAP;EAClB,oBACE,QAAC,YAAD;IAAc,WAAW,EAAEG,YAA3B;IAAA,wBACE,QAAC,kBAAD;MAAoB,QAAQ,EAAEC;IAA9B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MAAY,IAAI,EAAC,OAAjB;MAAA,wBACE,QAAC,YAAD;QAAA,UAAeN;MAAf;QAAA;QAAA;QAAA;MAAA,QADF,EAEGC,WAAW,gBAAG,QAAC,cAAD;QAAA,UAAiBA;MAAjB;QAAA;QAAA;QAAA;MAAA,QAAH,GAAoD,IAFlE;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAME,QAAC,WAAD;MAAa,OAAO,EAAE,MAAME,cAAc,CAAC,KAAD,CAA1C;MAAA,uBACE,QAAC,eAAD;QAAiB,QAAQ,EAAC;MAA1B;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAnDM;;GAAMJ,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}