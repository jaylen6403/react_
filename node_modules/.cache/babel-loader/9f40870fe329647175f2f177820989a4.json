{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventConfirmations/ClientApproverEventConfirmations/ClientApproverEventConfirmations.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { URL_PATHS } from '@luma-fe-workspace/utility';\nimport { UnderlierColumn, formatIssuerColumn, generateActions, IssuerNameTooltip, StatusComponent, StructuredComponent } from '../../AGGridTable/AGGridTableComponents';\nimport { AGGridConfirmationsTable } from '../../AGGridTable';\nimport { EmailPreviewDrawer } from '../../EmailPreviewDrawer';\nimport { EventDetail } from '../../EventDetail';\nimport { formatEventStatus, formatEventType, formatRegType, ISODateToFormat, observationDateFilterComparator } from '../../../utils/gridUtils';\nimport { ConfirmationPopUp } from '../../ConfirmationPopUp';\nimport { StatusOptions, useEventConfirmationOptions } from '../../../utils/hooks/useEventConfirmationOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ClientApproverEventConfirmations = ({\n  eventsData\n}) => {\n  _s();\n\n  const {\n    events,\n    clientModal,\n    toastData\n  } = useEventConfirmationOptions();\n  const [rowData, setRowData] = useState([]);\n  const [productStructure, setProductStructure] = useState(undefined);\n  const [columnDefs] = useState([{\n    field: 'Product',\n    cellRenderer: formatIssuerColumn,\n    tooltipComponent: IssuerNameTooltip,\n    tooltipField: 'Product',\n    suppressMenu: true\n  }, {\n    field: 'Obv Date',\n    comparator: observationDateFilterComparator\n  }, // {\n  //   field: 'Registration Type',\n  //   filter: false,\n  //   suppressMenu: true,\n  // },\n  {\n    field: 'Event Type',\n    suppressMenu: true\n  }, {\n    field: 'Structure',\n    cellRenderer: StructuredComponent\n  }, {\n    field: 'Underliers',\n    cellRenderer: UnderlierColumn,\n    sortable: false,\n    filter: false,\n    suppressMenu: true\n  }, {\n    field: 'Event Calculation',\n    cellRenderer: StatusComponent,\n    suppressMenu: true\n  }, {\n    field: 'Action',\n    cellRenderer: generateActions(clientModal.setData, setProductStructure),\n    suppressMenu: true,\n    sortable: false\n  }]);\n  useEffect(() => {\n    const compileRowData = () => {\n      const updatedEvents = eventsData.map(event => {\n        var _event$confirmationTy, _event$observationDat;\n\n        const eventType = formatEventType((_event$confirmationTy = event.confirmationType) != null ? _event$confirmationTy : event.eventType);\n        const eventStatus = formatEventStatus(event);\n        return {\n          activeUnderlier: event.activeUnderlier,\n          Product: event.productIdentifier,\n          'Obv Date': ISODateToFormat((_event$observationDat = event.observationDate) != null ? _event$observationDat : event.eventDate),\n          'Registration Type': formatRegType(event.registrationType),\n          'Event Type': eventType,\n          Structure: event.structureNameInternal,\n          Underliers: event.underlierList,\n          cusip: event.productIdentifier,\n          'Event Calculation': eventStatus == null ? void 0 : eventStatus.status,\n          basketType: event.basketType,\n          cashSettlementRates: event.cashSettlementRates,\n          eventStatus: eventStatus,\n          eventProductData: event,\n          productSymbol: event.productSymbol\n        };\n      });\n      setRowData(updatedEvents);\n    };\n\n    compileRowData();\n    events.setEvents(eventsData); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [eventsData]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const productQuery = new URLSearchParams(location.search).get('product');\n\n    if (productQuery) {\n      const event = eventsData.filter(elem => elem.productIdentifier === productQuery);\n      clientModal.setData(event[0]);\n      setProductStructure(event[0].structureNameInternal);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [eventsData]);\n  useEffect(() => {\n    if (clientModal.data) navigate(`/${URL_PATHS.CONFIRMATIONS}?product=${clientModal.data.productIdentifier}`);else {\n      navigate(`/${URL_PATHS.CONFIRMATIONS}`);\n    }\n  }, [clientModal.data, navigate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AGGridConfirmationsTable, {\n      rowData: rowData,\n      columnData: columnDefs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailPreviewDrawer, {\n      isOpen: Boolean(clientModal.data),\n      closeDrawer: () => clientModal.setData(undefined),\n      children: clientModal.data ? /*#__PURE__*/_jsxDEV(EventDetail, {\n        isOpen: Boolean(clientModal.data),\n        productData: clientModal.data,\n        closeDrawer: () => clientModal.setData(undefined)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopUp, {\n      closePopUp: () => toastData.setStatus(StatusOptions.None),\n      productStructure: productStructure,\n      successHeader: \"Email Sent\",\n      failureHeader: \"Failed to Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ClientApproverEventConfirmations, \"ddHKoRMLgY1Hjif9v/f55v5FSR0=\", false, function () {\n  return [useEventConfirmationOptions, useNavigate, useLocation];\n});\n\n_c = ClientApproverEventConfirmations;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientApproverEventConfirmations\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useLocation","URL_PATHS","UnderlierColumn","formatIssuerColumn","generateActions","IssuerNameTooltip","StatusComponent","StructuredComponent","AGGridConfirmationsTable","EmailPreviewDrawer","EventDetail","formatEventStatus","formatEventType","formatRegType","ISODateToFormat","observationDateFilterComparator","ConfirmationPopUp","StatusOptions","useEventConfirmationOptions","ClientApproverEventConfirmations","eventsData","events","clientModal","toastData","rowData","setRowData","productStructure","setProductStructure","undefined","columnDefs","field","cellRenderer","tooltipComponent","tooltipField","suppressMenu","comparator","sortable","filter","setData","compileRowData","updatedEvents","map","event","eventType","confirmationType","eventStatus","activeUnderlier","Product","productIdentifier","observationDate","eventDate","registrationType","Structure","structureNameInternal","Underliers","underlierList","cusip","status","basketType","cashSettlementRates","eventProductData","productSymbol","setEvents","navigate","location","productQuery","URLSearchParams","search","get","elem","data","CONFIRMATIONS","Boolean","setStatus","None"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventConfirmations/ClientApproverEventConfirmations/ClientApproverEventConfirmations.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { EventProductData } from '@luma-fe-workspace/redux';\nimport { URL_PATHS } from '@luma-fe-workspace/utility';\n\nimport {\n  UnderlierColumn,\n  formatIssuerColumn,\n  generateActions,\n  IssuerNameTooltip,\n  StatusComponent,\n  StructuredComponent,\n} from '../../AGGridTable/AGGridTableComponents';\nimport { AGGridConfirmationsTable, RowData } from '../../AGGridTable';\nimport { EmailPreviewDrawer } from '../../EmailPreviewDrawer';\nimport { EventDetail } from '../../EventDetail';\nimport {\n  formatEventStatus,\n  formatEventType,\n  formatRegType,\n  ISODateToFormat,\n  observationDateFilterComparator,\n} from '../../../utils/gridUtils';\nimport { ConfirmationPopUp } from '../../ConfirmationPopUp';\nimport {\n  StatusOptions,\n  useEventConfirmationOptions,\n} from '../../../utils/hooks/useEventConfirmationOptions';\ninterface Props {\n  eventsData: EventProductData[];\n}\n\nexport const ClientApproverEventConfirmations = ({ eventsData }: Props) => {\n  const { events, clientModal, toastData } = useEventConfirmationOptions();\n\n  const [rowData, setRowData] = useState<RowData[] | []>([]);\n\n  const [productStructure, setProductStructure] = useState<string | undefined>(\n    undefined\n  );\n\n  const [columnDefs] = useState([\n    {\n      field: 'Product',\n      cellRenderer: formatIssuerColumn,\n      tooltipComponent: IssuerNameTooltip,\n      tooltipField: 'Product',\n      suppressMenu: true,\n    },\n\n    {\n      field: 'Obv Date',\n      comparator: observationDateFilterComparator,\n    },\n    // {\n    //   field: 'Registration Type',\n    //   filter: false,\n    //   suppressMenu: true,\n    // },\n    { field: 'Event Type', suppressMenu: true },\n    { field: 'Structure', cellRenderer: StructuredComponent },\n    {\n      field: 'Underliers',\n      cellRenderer: UnderlierColumn,\n      sortable: false,\n      filter: false,\n      suppressMenu: true,\n    },\n    {\n      field: 'Event Calculation',\n      cellRenderer: StatusComponent,\n      suppressMenu: true,\n    },\n    {\n      field: 'Action',\n      cellRenderer: generateActions(clientModal.setData, setProductStructure),\n      suppressMenu: true,\n      sortable: false,\n    },\n  ]);\n\n  useEffect(() => {\n    const compileRowData = () => {\n      const updatedEvents = eventsData.map((event) => {\n        const eventType = formatEventType(\n          event.confirmationType ?? event.eventType\n        );\n        const eventStatus = formatEventStatus(event);\n\n        return {\n          activeUnderlier: event.activeUnderlier,\n          Product: event.productIdentifier,\n          'Obv Date': ISODateToFormat(event.observationDate ?? event.eventDate),\n          'Registration Type': formatRegType(event.registrationType),\n          'Event Type': eventType,\n          Structure: event.structureNameInternal,\n          Underliers: event.underlierList,\n          cusip: event.productIdentifier,\n          'Event Calculation': eventStatus?.status,\n          basketType: event.basketType,\n          cashSettlementRates: event.cashSettlementRates,\n          eventStatus: eventStatus,\n          eventProductData: event,\n          productSymbol: event.productSymbol,\n        };\n      });\n      setRowData(updatedEvents);\n    };\n    compileRowData();\n    events.setEvents(eventsData);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [eventsData]);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const productQuery = new URLSearchParams(location.search).get('product');\n\n    if (productQuery) {\n      const event = eventsData.filter(\n        (elem) => elem.productIdentifier === productQuery\n      );\n      clientModal.setData(event[0]);\n      setProductStructure(event[0].structureNameInternal);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [eventsData]);\n\n  useEffect(() => {\n    if (clientModal.data)\n      navigate(\n        `/${URL_PATHS.CONFIRMATIONS}?product=${clientModal.data.productIdentifier}`\n      );\n    else {\n      navigate(`/${URL_PATHS.CONFIRMATIONS}`);\n    }\n  }, [clientModal.data, navigate]);\n\n  return (\n    <>\n      <AGGridConfirmationsTable rowData={rowData} columnData={columnDefs} />\n      <EmailPreviewDrawer\n        isOpen={Boolean(clientModal.data)}\n        closeDrawer={() => clientModal.setData(undefined)}\n      >\n        {clientModal.data ? (\n          <EventDetail\n            isOpen={Boolean(clientModal.data)}\n            productData={clientModal.data}\n            closeDrawer={() => clientModal.setData(undefined)}\n          />\n        ) : null}\n      </EmailPreviewDrawer>\n      <ConfirmationPopUp\n        closePopUp={() => toastData.setStatus(StatusOptions.None)}\n        productStructure={productStructure}\n        successHeader=\"Email Sent\"\n        failureHeader=\"Failed to Send\"\n      />\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}