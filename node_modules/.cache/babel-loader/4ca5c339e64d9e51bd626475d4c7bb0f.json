{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/lifecyclemanager/src/lib/luma-performancereport.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { useLocation } from 'react-router-dom';\nimport { LumaLifecycleManagerContainer } from './luma-lifecyclemanager.styles';\nimport { useState, useEffect } from 'react';\nimport { useGetDisplayCurrenciesUsingGetQuery, useGetDocumentContentsUsingGetQueryEnhanced, useGetLogosUsingGetQuery } from '@luma-fe-workspace/redux';\nimport { isDev, isHigherEnvironment, isQA } from '@luma-fe-workspace/design-system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LumaPerformanceReport = () => {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const splitPathname = pathname.split('/');\n  const currentPath = splitPathname[splitPathname.length - 1];\n  const [isFilterVisible, setIsFilterVisible] = useState(false);\n  const [currentGridApi, setCurrentGridApi] = useState();\n  useGetLogosUsingGetQuery();\n  const displayCurrenciesResponse = useGetDisplayCurrenciesUsingGetQuery();\n  const [displayCurrencyOptions, setDisplayCurrencyOptions] = useState(['USD']);\n  useEffect(() => {\n    if (displayCurrenciesResponse.isSuccess && !displayCurrenciesResponse.isFetching) {\n      setDisplayCurrencyOptions(displayCurrenciesResponse.data);\n    }\n  }, [displayCurrenciesResponse]); // Portfolio Performance Report\n\n  const [portfolioPerformanceReportBlob, setPortfolioPerformanceReportBlob] = useState();\n  const documentRequestResponse = useGetDocumentContentsUsingGetQueryEnhanced({\n    key: isQA() ? '6f0ac051-9e3c-4ca2-adcc-c343ec5a10d4' : isDev() || !isHigherEnvironment() // Allow Dev and localhost\n    ? '7c9305d4-3ecd-44fc-b89f-94c5e96151e0' : ''\n  });\n  useEffect(() => {\n    if (documentRequestResponse.isSuccess && !documentRequestResponse.isFetching) {\n      setPortfolioPerformanceReportBlob(documentRequestResponse.data);\n    }\n  }, [documentRequestResponse]);\n  return /*#__PURE__*/_jsxDEV(LumaLifecycleManagerContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LumaPerformanceReport, \"IDy8QUDxmKn0QsCEOjzgDMC5L0s=\", false, function () {\n  return [useLocation, useGetLogosUsingGetQuery, useGetDisplayCurrenciesUsingGetQuery, useGetDocumentContentsUsingGetQueryEnhanced];\n});\n\n_c = LumaPerformanceReport;\nexport default LumaPerformanceReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"LumaPerformanceReport\");","map":{"version":3,"names":["useLocation","LumaLifecycleManagerContainer","useState","useEffect","useGetDisplayCurrenciesUsingGetQuery","useGetDocumentContentsUsingGetQueryEnhanced","useGetLogosUsingGetQuery","isDev","isHigherEnvironment","isQA","LumaPerformanceReport","pathname","splitPathname","split","currentPath","length","isFilterVisible","setIsFilterVisible","currentGridApi","setCurrentGridApi","displayCurrenciesResponse","displayCurrencyOptions","setDisplayCurrencyOptions","isSuccess","isFetching","data","portfolioPerformanceReportBlob","setPortfolioPerformanceReportBlob","documentRequestResponse","key"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/lifecyclemanager/src/lib/luma-performancereport.tsx"],"sourcesContent":["import { Routes, Route, Navigate, useLocation } from 'react-router-dom';\nimport { URL_PATHS } from '@luma-fe-workspace/utility';\nimport { EventsPage } from '../components/EventsPage/EventsPage';\nimport { ProductMetrics } from '../components/ProductMetrics/ProductMetrics';\nimport { AccountMetrics } from '../components/AccountMetrics/AccountMetrics';\nimport { LifecycleRoutes } from '../utils/lmUtils';\nimport {\n  LumaLifecycleManagerContainer,\n  LinkTab,\n  LinkNav,\n  LifecycleManagerBody,\n  NavContainer,\n  RightNavActions,\n  LMAppFooter,\n  PerformanceReportButton,\n  PerformanceReportLink,\n} from './luma-lifecyclemanager.styles';\nimport { useState, useEffect } from 'react';\nimport { FilterPanel } from '../components/FilterPanel/FilterPanel';\nimport { FilterBar } from '../components/FilterBar/FilterBar';\nimport { CurrencyDropdown } from '../components/CurrencyDropdown/CurrencyDropdown';\nimport {\n  useGetDisplayCurrenciesUsingGetQuery,\n  useGetDocumentContentsUsingGetQueryEnhanced,\n  useGetLogosUsingGetQuery,\n} from '@luma-fe-workspace/redux';\nimport { GridApi } from 'ag-grid-community';\nimport {\n  isDev,\n  isHigherEnvironment,\n  isQA,\n} from '@luma-fe-workspace/design-system';\n\nexport const LumaPerformanceReport = () => {\n  const { pathname } = useLocation();\n  const splitPathname = pathname.split('/');\n  const currentPath = splitPathname[splitPathname.length - 1];\n  const [isFilterVisible, setIsFilterVisible] = useState<boolean>(false);\n  const [currentGridApi, setCurrentGridApi] = useState<GridApi>();\n  useGetLogosUsingGetQuery();\n\n  const displayCurrenciesResponse = useGetDisplayCurrenciesUsingGetQuery();\n  const [displayCurrencyOptions, setDisplayCurrencyOptions] = useState<\n    string[]\n  >(['USD']);\n\n  useEffect(() => {\n    if (\n      displayCurrenciesResponse.isSuccess &&\n      !displayCurrenciesResponse.isFetching\n    ) {\n      setDisplayCurrencyOptions(displayCurrenciesResponse.data);\n    }\n  }, [displayCurrenciesResponse]);\n\n  // Portfolio Performance Report\n  const [portfolioPerformanceReportBlob, setPortfolioPerformanceReportBlob] =\n    useState<Blob>();\n  const documentRequestResponse = useGetDocumentContentsUsingGetQueryEnhanced({\n    key: isQA()\n      ? '6f0ac051-9e3c-4ca2-adcc-c343ec5a10d4'\n      : isDev() || !isHigherEnvironment() // Allow Dev and localhost\n      ? '7c9305d4-3ecd-44fc-b89f-94c5e96151e0'\n      : '',\n  });\n  useEffect(() => {\n    if (\n      documentRequestResponse.isSuccess &&\n      !documentRequestResponse.isFetching\n    ) {\n      setPortfolioPerformanceReportBlob(documentRequestResponse.data);\n    }\n  }, [documentRequestResponse]);\n\n  return (\n    <LumaLifecycleManagerContainer >\n    \n    </LumaLifecycleManagerContainer>\n  );\n};\n\nexport default LumaPerformanceReport;\n"],"mappings":";;;;;;;AAAA,SAAkCA,WAAlC,QAAqD,kBAArD;AAMA,SACEC,6BADF,QAUO,gCAVP;AAWA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAIA,SACEC,oCADF,EAEEC,2CAFF,EAGEC,wBAHF,QAIO,0BAJP;AAMA,SACEC,KADF,EAEEC,mBAFF,EAGEC,IAHF,QAIO,kCAJP;;AAMA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;EAAA;;EACzC,MAAM;IAAEC;EAAF,IAAeX,WAAW,EAAhC;EACA,MAAMY,aAAa,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAtB;EACA,MAAMC,WAAW,GAAGF,aAAa,CAACA,aAAa,CAACG,MAAd,GAAuB,CAAxB,CAAjC;EACA,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAU,KAAV,CAAtD;EACA,MAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,EAApD;EACAI,wBAAwB;EAExB,MAAMc,yBAAyB,GAAGhB,oCAAoC,EAAtE;EACA,MAAM,CAACiB,sBAAD,EAAyBC,yBAAzB,IAAsDpB,QAAQ,CAElE,CAAC,KAAD,CAFkE,CAApE;EAIAC,SAAS,CAAC,MAAM;IACd,IACEiB,yBAAyB,CAACG,SAA1B,IACA,CAACH,yBAAyB,CAACI,UAF7B,EAGE;MACAF,yBAAyB,CAACF,yBAAyB,CAACK,IAA3B,CAAzB;IACD;EACF,CAPQ,EAON,CAACL,yBAAD,CAPM,CAAT,CAbyC,CAsBzC;;EACA,MAAM,CAACM,8BAAD,EAAiCC,iCAAjC,IACJzB,QAAQ,EADV;EAEA,MAAM0B,uBAAuB,GAAGvB,2CAA2C,CAAC;IAC1EwB,GAAG,EAAEpB,IAAI,KACL,sCADK,GAELF,KAAK,MAAM,CAACC,mBAAmB,EAA/B,CAAkC;IAAlC,EACA,sCADA,GAEA;EALsE,CAAD,CAA3E;EAOAL,SAAS,CAAC,MAAM;IACd,IACEyB,uBAAuB,CAACL,SAAxB,IACA,CAACK,uBAAuB,CAACJ,UAF3B,EAGE;MACAG,iCAAiC,CAACC,uBAAuB,CAACH,IAAzB,CAAjC;IACD;EACF,CAPQ,EAON,CAACG,uBAAD,CAPM,CAAT;EASA,oBACE,QAAC,6BAAD;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA9CM;;GAAMlB,qB;UACUV,W,EAKrBM,wB,EAEkCF,oC,EAiBFC,2C;;;KAzBrBK,qB;AAgDb,eAAeA,qBAAf"},"metadata":{},"sourceType":"module"}