{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/components/EventsWidget/EventsList/EventsList.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport { useEffect, useState } from 'react';\nimport { ProductTypes } from '../../../utils/types';\nimport { AnnuitiesCard } from '../Annuities/AnnuitiesCard/AnnuitiesCard';\nimport { StructuredProductsCard } from '../StructuredProductsEvents/StructuredProductsCard/StructuredProductsCard';\nimport { ViewAllEventsCard } from '../ViewAllEventsCard/ViewAllEventsCard';\nimport { EventsListContainer } from './EventsList.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventsList = ({\n  data,\n  productType,\n  annuitiesToggle,\n  updateScroll,\n  setUpdateScroll\n}) => {\n  _s();\n\n  const [cardsToShow, setCardsToShow] = useState([]);\n\n  const isStructuredProduct = data => data.productIdentifier !== undefined;\n\n  const updateData = () => {\n    const date = new Date();\n    const today = new Intl.DateTimeFormat('en-US', {\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric'\n    }).format(date);\n    const todaysDate = today.replace(/\\//g, '-');\n    let cards = [];\n\n    if (data && data.length > 0) {\n      if (productType === ProductTypes.Annuities) {\n        const idx = data.findIndex(card => card.date >= todaysDate);\n\n        if (annuitiesToggle.next) {\n          cards = data.slice(idx).slice(0, 20);\n        } else if (annuitiesToggle.past) {\n          cards = data.slice(0, idx).reverse().slice(0, 20);\n        }\n      } else {\n        cards = data.slice(0, 20);\n      }\n\n      setUpdateScroll(!updateScroll);\n    }\n\n    setCardsToShow(cards);\n  };\n\n  useEffect(() => {\n    const compileCards = () => {\n      updateData();\n    };\n\n    compileCards();\n  }, [data, annuitiesToggle, productType]);\n  return /*#__PURE__*/_jsxDEV(EventsListContainer, {\n    children: [cardsToShow ? cardsToShow.map((portfolioEvent, idx) => isStructuredProduct(portfolioEvent) ? /*#__PURE__*/_jsxDEV(StructuredProductsCard, {\n      id: `event-card-${idx}`,\n      event: portfolioEvent\n    }, `event-card-${idx}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(AnnuitiesCard, {\n      id: `annuities_event-card-${idx}`,\n      event: portfolioEvent\n    }, `event-card-${idx}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this)) : null, /*#__PURE__*/_jsxDEV(ViewAllEventsCard, {\n      productType: productType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EventsList, \"OZz8NDPCIz+0GcKW8uSpJ7apITw=\");\n\n_c = EventsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"names":["useEffect","useState","ProductTypes","AnnuitiesCard","StructuredProductsCard","ViewAllEventsCard","EventsListContainer","EventsList","data","productType","annuitiesToggle","updateScroll","setUpdateScroll","cardsToShow","setCardsToShow","isStructuredProduct","productIdentifier","undefined","updateData","date","Date","today","Intl","DateTimeFormat","month","day","year","format","todaysDate","replace","cards","length","Annuities","idx","findIndex","card","next","slice","past","reverse","compileCards","map","portfolioEvent"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/components/EventsWidget/EventsList/EventsList.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from 'react';\nimport { EventCardData } from '@luma-fe-workspace/redux';\n\nimport { ProductType, ProductTypes } from '../../../utils/types';\nimport { AnnuitiesCard } from '../Annuities/AnnuitiesCard/AnnuitiesCard';\nimport { StructuredProductsCard } from '../StructuredProductsEvents/StructuredProductsCard/StructuredProductsCard';\nimport { ViewAllEventsCard } from '../ViewAllEventsCard/ViewAllEventsCard';\nimport { AnnuitiesEventData } from '../../../utils/annuitiesUtils';\n\nimport { EventsListContainer } from './EventsList.style';\n\ninterface Props {\n  data: EventCardData[] | AnnuitiesEventData[] | undefined;\n  productType: ProductType;\n  annuitiesToggle: { next: boolean; past: boolean };\n  setUpdateScroll: Dispatch<SetStateAction<boolean>>;\n  updateScroll: boolean;\n}\nexport const EventsList = ({\n  data,\n  productType,\n  annuitiesToggle,\n  updateScroll,\n  setUpdateScroll,\n}: Props) => {\n  const [cardsToShow, setCardsToShow] = useState<\n    EventCardData[] | AnnuitiesEventData[] | []\n  >([]);\n\n  const isStructuredProduct = (\n    data: EventCardData | AnnuitiesEventData\n  ): data is EventCardData =>\n    (data as EventCardData).productIdentifier !== undefined;\n\n  const updateData = () => {\n    const date = new Date();\n    const today = new Intl.DateTimeFormat('en-US', {\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric',\n    }).format(date);\n    const todaysDate = today.replace(/\\//g, '-');\n    let cards: EventCardData[] = [];\n\n    if (data && data.length > 0) {\n      if (productType === ProductTypes.Annuities) {\n        const idx = (data as AnnuitiesEventData[]).findIndex(\n          (card) => card.date >= todaysDate\n        );\n        if (annuitiesToggle.next) {\n          cards = data.slice(idx).slice(0, 20);\n        } else if (annuitiesToggle.past) {\n          cards = data.slice(0, idx).reverse().slice(0, 20);\n        }\n      } else {\n        cards = data.slice(0, 20);\n      }\n      setUpdateScroll(!updateScroll);\n    }\n    setCardsToShow(cards);\n  };\n\n  useEffect(() => {\n    const compileCards = () => {\n      updateData();\n    };\n    compileCards();\n  }, [data, annuitiesToggle, productType]);\n\n  return (\n    <EventsListContainer>\n      {cardsToShow\n        ? cardsToShow.map((portfolioEvent, idx) =>\n            isStructuredProduct(portfolioEvent) ? (\n              <StructuredProductsCard\n                id={`event-card-${idx}`}\n                key={`event-card-${idx}`}\n                event={portfolioEvent}\n              />\n            ) : (\n              <AnnuitiesCard\n                id={`annuities_event-card-${idx}`}\n                key={`event-card-${idx}`}\n                event={portfolioEvent}\n              />\n            )\n          )\n        : null}\n      <ViewAllEventsCard productType={productType} />\n    </EventsListContainer>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}