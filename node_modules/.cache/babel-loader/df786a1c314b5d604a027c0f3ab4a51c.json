{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/TableCellTimeOffset/TableCellTimeOffset.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { useCallback, useEffect, useState } from 'react';\nimport { TableCellDropdown } from '@luma-fe-workspace/design-system';\nimport { addMilliseconds, differenceInMilliseconds } from 'date-fns';\nimport { convertToUTC } from '@luma-fe-workspace/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst msPerMinute = 60000;\nexport const defaultQuoteDeadlineOffsetMs = 5 * msPerMinute;\nexport const TableCellTimeOffset = ({\n  setValue,\n  goodForTime\n}) => {\n  _s();\n\n  const [offset, setOffset] = useState(defaultQuoteDeadlineOffsetMs);\n  const [deadlineOptions, setDeadlineOptions] = useState([]);\n  const [time, setTime] = useState(addMilliseconds(new Date(), defaultQuoteDeadlineOffsetMs));\n  useEffect(() => {\n    setTime(addMilliseconds(new Date(), offset));\n  }, [offset]);\n  const handleSelect = useCallback(newOffset => {\n    if (!goodForTime) return;\n\n    if (typeof newOffset === 'string') {\n      const bidDeadline = convertToUTC(goodForTime);\n      const differenceinMs = differenceInMilliseconds(bidDeadline, new Date());\n      setOffset(differenceinMs);\n      setValue('Max');\n      setTime(addMilliseconds(new Date(), differenceinMs));\n    } else {\n      setOffset(newOffset);\n      setValue(newOffset);\n    }\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [goodForTime, offset, setValue]);\n  const setDueTimes = useCallback(() => {\n    if (!goodForTime) {\n      return;\n    }\n\n    const baseOptions = [defaultQuoteDeadlineOffsetMs, 10 * msPerMinute, 30 * msPerMinute, 60 * msPerMinute];\n    const bidDeadline = convertToUTC(goodForTime);\n    const differenceInMs = differenceInMilliseconds(bidDeadline, new Date());\n    const quoteDeadines = [];\n\n    for (let i = 0; i < baseOptions.length; i++) {\n      if (baseOptions[i] > differenceInMs) {\n        break;\n      } else {\n        quoteDeadines.push({\n          display: `${baseOptions[i] / msPerMinute} min`,\n          onClick: () => handleSelect(baseOptions[i])\n        });\n      }\n    }\n\n    if (quoteDeadines.length === 0) {\n      setOffset(differenceInMs);\n      setValue('Max');\n      setTime(addMilliseconds(new Date(), differenceInMs));\n    }\n\n    quoteDeadines.push({\n      display: 'Max',\n      onClick: () => handleSelect('Max')\n    });\n    setDeadlineOptions(quoteDeadines);\n  }, [goodForTime, handleSelect, setValue]);\n  useEffect(() => {\n    setDueTimes(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (deadlineOptions.length === 1) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: time.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableCellDropdown, {\n    items: deadlineOptions,\n    value: time.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableCellTimeOffset, \"jHMLuaYa4rI7EgW2QlQP8NfvTa8=\");\n\n_c = TableCellTimeOffset;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCellTimeOffset\");","map":{"version":3,"names":["useCallback","useEffect","useState","TableCellDropdown","addMilliseconds","differenceInMilliseconds","convertToUTC","msPerMinute","defaultQuoteDeadlineOffsetMs","TableCellTimeOffset","setValue","goodForTime","offset","setOffset","deadlineOptions","setDeadlineOptions","time","setTime","Date","handleSelect","newOffset","bidDeadline","differenceinMs","setDueTimes","baseOptions","differenceInMs","quoteDeadines","i","length","push","display","onClick","toLocaleTimeString","hour","minute"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/TableCellTimeOffset/TableCellTimeOffset.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { MenuItem, TableCellDropdown } from '@luma-fe-workspace/design-system';\nimport { addMilliseconds, differenceInMilliseconds } from 'date-fns';\nimport { convertToUTC } from '@luma-fe-workspace/common';\n\nexport interface TableCellTimeOffsetProps {\n  /**\n   * Function to set cell value\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  setValue: any;\n  /**\n   * RFQ collection periond\n   */\n  goodForTime: string | undefined;\n}\n\nconst msPerMinute = 60000;\nexport const defaultQuoteDeadlineOffsetMs = 5 * msPerMinute;\n\nexport const TableCellTimeOffset = ({\n  setValue,\n  goodForTime,\n}: TableCellTimeOffsetProps) => {\n  const [offset, setOffset] = useState(defaultQuoteDeadlineOffsetMs);\n  const [deadlineOptions, setDeadlineOptions] = useState<MenuItem[]>([]);\n  const [time, setTime] = useState<Date>(\n    addMilliseconds(new Date(), defaultQuoteDeadlineOffsetMs)\n  );\n  useEffect(() => {\n    setTime(addMilliseconds(new Date(), offset));\n  }, [offset]);\n\n  const handleSelect = useCallback(\n    (newOffset: number | string) => {\n      if (!goodForTime) return;\n      if (typeof newOffset === 'string') {\n        const bidDeadline = convertToUTC(goodForTime);\n        const differenceinMs = differenceInMilliseconds(\n          bidDeadline,\n          new Date()\n        );\n        setOffset(differenceinMs);\n        setValue('Max');\n        setTime(addMilliseconds(new Date(), differenceinMs));\n      } else {\n        setOffset(newOffset);\n        setValue(newOffset);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [goodForTime, offset, setValue]\n  );\n\n  const setDueTimes = useCallback(() => {\n    if (!goodForTime) {\n      return;\n    }\n    const baseOptions = [\n      defaultQuoteDeadlineOffsetMs,\n      10 * msPerMinute,\n      30 * msPerMinute,\n      60 * msPerMinute,\n    ];\n\n    const bidDeadline = convertToUTC(goodForTime);\n    const differenceInMs = differenceInMilliseconds(bidDeadline, new Date());\n    const quoteDeadines: MenuItem[] = [];\n    for (let i = 0; i < baseOptions.length; i++) {\n      if (baseOptions[i] > differenceInMs) {\n        break;\n      } else {\n        quoteDeadines.push({\n          display: `${baseOptions[i] / msPerMinute} min`,\n          onClick: () => handleSelect(baseOptions[i]),\n        });\n      }\n    }\n    if (quoteDeadines.length === 0) {\n      setOffset(differenceInMs);\n      setValue('Max');\n      setTime(addMilliseconds(new Date(), differenceInMs));\n    }\n\n    quoteDeadines.push({\n      display: 'Max',\n      onClick: () => handleSelect('Max'),\n    });\n    setDeadlineOptions(quoteDeadines);\n  }, [goodForTime, handleSelect, setValue]);\n\n  useEffect(() => {\n    setDueTimes();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (deadlineOptions.length === 1) {\n    return (\n      <span>\n        {time.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit',\n        })}\n      </span>\n    );\n  }\n  return (\n    <TableCellDropdown\n      items={deadlineOptions}\n      value={time.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit',\n      })}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}