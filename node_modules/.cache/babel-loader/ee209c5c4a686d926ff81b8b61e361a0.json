{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Dropdown/SingleSelect/SingleSelect.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.object.assign.js\";\nimport * as React from 'react';\nimport { useSelect } from 'downshift';\nimport { StyledButton } from './SingleSelect.styles';\nimport { Root, Menu, MenuItem, Divider, DropdownIcon } from '../DropdownBase.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SingleSelect({\n  ariaLabel,\n  ariaLabelledBy,\n  className,\n  hasIndicator,\n  id,\n  items,\n  onChange,\n  onBlur,\n  variant = 'primary',\n  selectedItem,\n  placeholder,\n  noHighlight,\n  iconCode = 'chevron-down',\n  iconPrefix = 'fal'\n}) {\n  _s();\n\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getMenuProps,\n    highlightedIndex,\n    getItemProps,\n    selectItem,\n    reset\n  } = useSelect({\n    id,\n    items,\n    initialSelectedItem: selectedItem,\n\n    onSelectedItemChange({\n      selectedItem: selectedItemEvent\n    }) {\n      onChange == null ? void 0 : onChange(selectedItemEvent);\n    }\n\n  });\n  React.useEffect(() => {\n    if (!selectedItem) {\n      reset();\n    } else {\n      selectItem(selectedItem);\n    }\n  }, [selectedItem, reset, selectItem]);\n  const buttonProps = Object.assign({}, getToggleButtonProps());\n  return /*#__PURE__*/_jsxDEV(Root, {\n    className: className,\n    isOpen: isOpen,\n    onBlur: e => {\n      if (e.relatedTarget && e.relatedTarget === buttonProps.ref.current) {\n        return;\n      }\n\n      onBlur == null ? void 0 : onBlur();\n    },\n    variant: variant,\n    children: [/*#__PURE__*/_jsxDEV(StyledButton, Object.assign({}, buttonProps, {\n      \"aria-haspopup\": \"menu\",\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      variant: variant,\n      children: [(selectedItem == null ? void 0 : selectedItem.display) || placeholder, hasIndicator && /*#__PURE__*/_jsxDEV(DropdownIcon, {\n        iconCode: iconCode,\n        prefix: iconPrefix\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, Object.assign({}, getMenuProps(), {\n      \"aria-labelledby\": buttonProps.id,\n      children: isOpen && items.map((item, index) => {\n        const itemProps = getItemProps({\n          item,\n          index,\n          disabled: item.isDisabled\n        });\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, Object.assign({}, itemProps, {\n            hasSectionBreak: item.hasSectionBreak,\n            isHighlighted: !noHighlight && highlightedIndex === index,\n            variant: variant,\n            children: item.display\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), item.hasSectionBreak && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 42\n          }, this)]\n        }, `${item.display}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleSelect, \"ecxCDNghIT4ez3mwVFZwO9rTVGs=\", false, function () {\n  return [useSelect];\n});\n\n_c = SingleSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleSelect\");","map":{"version":3,"names":["React","useSelect","StyledButton","Root","Menu","MenuItem","Divider","DropdownIcon","SingleSelect","ariaLabel","ariaLabelledBy","className","hasIndicator","id","items","onChange","onBlur","variant","selectedItem","placeholder","noHighlight","iconCode","iconPrefix","isOpen","getToggleButtonProps","getMenuProps","highlightedIndex","getItemProps","selectItem","reset","initialSelectedItem","onSelectedItemChange","selectedItemEvent","useEffect","buttonProps","e","relatedTarget","ref","current","display","map","item","index","itemProps","disabled","isDisabled","hasSectionBreak"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components/Dropdown/SingleSelect/SingleSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useSelect } from 'downshift';\nimport { StyledButton } from './SingleSelect.styles';\nimport { BaseMenuItem } from '../DropdownBase.types';\nimport { IconCode } from '../../Icon/Icon';\nimport {\n  Root,\n  Menu,\n  MenuItem,\n  Variant,\n  Divider,\n  DropdownIcon,\n} from '../DropdownBase.styles';\n\nexport interface MenuItem<T> extends BaseMenuItem {\n  value: T;\n}\n\ninterface SingleSelectProps<T> {\n  ariaLabel?: string;\n  ariaLabelledBy?: string;\n  className?: string;\n  hasIndicator?: boolean;\n  id?: string;\n  isDisabled?: boolean;\n  items: MenuItem<T>[];\n  onBlur?: () => void;\n  onChange?: (item?: MenuItem<T> | null) => void;\n  placeholder: React.ReactNode;\n  selectedItem?: MenuItem<T>;\n  variant: Variant;\n  noHighlight?: boolean;\n  iconCode?: IconCode;\n  iconPrefix?: 'fal' | 'fas' | 'far';\n}\n\nexport function SingleSelect<T>({\n  ariaLabel,\n  ariaLabelledBy,\n  className,\n  hasIndicator,\n  id,\n  items,\n  onChange,\n  onBlur,\n  variant = 'primary',\n  selectedItem,\n  placeholder,\n  noHighlight,\n  iconCode = 'chevron-down',\n  iconPrefix = 'fal',\n}: SingleSelectProps<T>) {\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getMenuProps,\n    highlightedIndex,\n    getItemProps,\n    selectItem,\n    reset,\n  } = useSelect({\n    id,\n    items,\n    initialSelectedItem: selectedItem,\n    onSelectedItemChange({ selectedItem: selectedItemEvent }) {\n      onChange?.(selectedItemEvent);\n    },\n  });\n\n  React.useEffect(() => {\n    if (!selectedItem) {\n      reset();\n    } else {\n      selectItem(selectedItem);\n    }\n  }, [selectedItem, reset, selectItem]);\n\n  const buttonProps = {\n    ...getToggleButtonProps(),\n  };\n\n  return (\n    <Root\n      className={className}\n      isOpen={isOpen}\n      onBlur={(e) => {\n        if (e.relatedTarget && e.relatedTarget === buttonProps.ref.current) {\n          return;\n        }\n        onBlur?.();\n      }}\n      variant={variant}\n    >\n      <StyledButton\n        {...buttonProps}\n        aria-haspopup=\"menu\"\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        variant={variant}\n      >\n        {selectedItem?.display || placeholder}\n        {hasIndicator && (\n          <DropdownIcon iconCode={iconCode} prefix={iconPrefix} />\n        )}\n      </StyledButton>\n\n      <Menu {...getMenuProps()} aria-labelledby={buttonProps.id}>\n        {isOpen &&\n          items.map((item, index) => {\n            const itemProps = getItemProps({\n              item,\n              index,\n              disabled: item.isDisabled,\n            });\n\n            return (\n              <React.Fragment key={`${item.display}-${index}`}>\n                <MenuItem\n                  {...itemProps}\n                  hasSectionBreak={item.hasSectionBreak}\n                  isHighlighted={!noHighlight && highlightedIndex === index}\n                  variant={variant}\n                >\n                  {item.display}\n                </MenuItem>\n\n                {item.hasSectionBreak && <Divider />}\n              </React.Fragment>\n            );\n          })}\n      </Menu>\n    </Root>\n  );\n}\n"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AAGA,SACEC,IADF,EAEEC,IAFF,EAGEC,QAHF,EAKEC,OALF,EAMEC,YANF,QAOO,wBAPP;;AA+BA,OAAO,SAASC,YAAT,CAAyB;EAC9BC,SAD8B;EAE9BC,cAF8B;EAG9BC,SAH8B;EAI9BC,YAJ8B;EAK9BC,EAL8B;EAM9BC,KAN8B;EAO9BC,QAP8B;EAQ9BC,MAR8B;EAS9BC,OAAO,GAAG,SAToB;EAU9BC,YAV8B;EAW9BC,WAX8B;EAY9BC,WAZ8B;EAa9BC,QAAQ,GAAG,cAbmB;EAc9BC,UAAU,GAAG;AAdiB,CAAzB,EAekB;EAAA;;EACvB,MAAM;IACJC,MADI;IAEJC,oBAFI;IAGJC,YAHI;IAIJC,gBAJI;IAKJC,YALI;IAMJC,UANI;IAOJC;EAPI,IAQF5B,SAAS,CAAC;IACZY,EADY;IAEZC,KAFY;IAGZgB,mBAAmB,EAAEZ,YAHT;;IAIZa,oBAAoB,CAAC;MAAEb,YAAY,EAAEc;IAAhB,CAAD,EAAsC;MACxDjB,QAAQ,QAAR,YAAAA,QAAQ,CAAGiB,iBAAH,CAAR;IACD;;EANW,CAAD,CARb;EAiBAhC,KAAK,CAACiC,SAAN,CAAgB,MAAM;IACpB,IAAI,CAACf,YAAL,EAAmB;MACjBW,KAAK;IACN,CAFD,MAEO;MACLD,UAAU,CAACV,YAAD,CAAV;IACD;EACF,CAND,EAMG,CAACA,YAAD,EAAeW,KAAf,EAAsBD,UAAtB,CANH;EAQA,MAAMM,WAAW,qBACZV,oBAAoB,EADR,CAAjB;EAIA,oBACE,QAAC,IAAD;IACE,SAAS,EAAEb,SADb;IAEE,MAAM,EAAEY,MAFV;IAGE,MAAM,EAAGY,CAAD,IAAO;MACb,IAAIA,CAAC,CAACC,aAAF,IAAmBD,CAAC,CAACC,aAAF,KAAoBF,WAAW,CAACG,GAAZ,CAAgBC,OAA3D,EAAoE;QAClE;MACD;;MACDtB,MAAM,QAAN,YAAAA,MAAM;IACP,CARH;IASE,OAAO,EAAEC,OATX;IAAA,wBAWE,QAAC,YAAD,oBACMiB,WADN;MAEE,iBAAc,MAFhB;MAGE,cAAYzB,SAHd;MAIE,mBAAiBC,cAJnB;MAKE,OAAO,EAAEO,OALX;MAAA,WAOG,CAAAC,YAAY,QAAZ,YAAAA,YAAY,CAAEqB,OAAd,KAAyBpB,WAP5B,EAQGP,YAAY,iBACX,QAAC,YAAD;QAAc,QAAQ,EAAES,QAAxB;QAAkC,MAAM,EAAEC;MAA1C;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF,eAwBE,QAAC,IAAD,oBAAUG,YAAY,EAAtB;MAA0B,mBAAiBS,WAAW,CAACrB,EAAvD;MAAA,UACGU,MAAM,IACLT,KAAK,CAAC0B,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;QACzB,MAAMC,SAAS,GAAGhB,YAAY,CAAC;UAC7Bc,IAD6B;UAE7BC,KAF6B;UAG7BE,QAAQ,EAAEH,IAAI,CAACI;QAHc,CAAD,CAA9B;QAMA,oBACE,QAAC,KAAD,CAAO,QAAP;UAAA,wBACE,QAAC,QAAD,oBACMF,SADN;YAEE,eAAe,EAAEF,IAAI,CAACK,eAFxB;YAGE,aAAa,EAAE,CAAC1B,WAAD,IAAgBM,gBAAgB,KAAKgB,KAHtD;YAIE,OAAO,EAAEzB,OAJX;YAAA,UAMGwB,IAAI,CAACF;UANR;YAAA;YAAA;YAAA;UAAA,QADF,EAUGE,IAAI,CAACK,eAAL,iBAAwB,QAAC,OAAD;YAAA;YAAA;YAAA;UAAA,QAV3B;QAAA,GAAsB,GAAEL,IAAI,CAACF,OAAQ,IAAGG,KAAM,EAA9C;UAAA;UAAA;UAAA;QAAA,QADF;MAcD,CArBD;IAFJ;MAAA;MAAA;MAAA;IAAA,QAxBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoDD;;GAjGelC,Y;UAwBVP,S;;;KAxBUO,Y"},"metadata":{},"sourceType":"module"}