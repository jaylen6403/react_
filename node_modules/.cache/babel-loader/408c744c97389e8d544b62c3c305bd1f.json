{"ast":null,"code":"import { baseApi as api } from './secondariesServiceBaseApi';\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: build => ({\n    getCompaniesUsingGet: build.query({\n      query: queryArg => ({\n        url: `/company`,\n        params: {\n          filterByRole: queryArg.filterByRole\n        }\n      })\n    }),\n    getCountriesUsingGet: build.query({\n      query: () => ({\n        url: `/company/countries`\n      })\n    }),\n    getDataPermissionsUsingGet: build.query({\n      query: () => ({\n        url: `/company/permissions`\n      })\n    }),\n    createOrderUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/orders`,\n        method: 'POST',\n        body: queryArg.secondaryOrder,\n        params: {\n          timerSeconds: queryArg.timerSeconds\n        }\n      })\n    }),\n    getOrdersByUserIdUsingGet: build.query({\n      query: () => ({\n        url: `/orders/user`\n      })\n    }),\n    getOrderUsingGet: build.query({\n      query: queryArg => ({\n        url: `/orders/${queryArg.orderId}`\n      })\n    }),\n    fillOrderUsingPut: build.mutation({\n      query: queryArg => ({\n        url: `/orders/${queryArg.orderId}/fill`,\n        method: 'PUT'\n      })\n    }),\n    rejectOrderUsingPut: build.mutation({\n      query: queryArg => ({\n        url: `/orders/${queryArg.orderId}/reject`,\n        method: 'PUT'\n      })\n    }),\n    createQuoteUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/quotes`,\n        method: 'POST',\n        body: queryArg.secondaryQuote\n      })\n    }),\n    expireQuoteUsingPatch: build.mutation({\n      query: queryArg => ({\n        url: `/quotes/expire`,\n        method: 'PATCH',\n        params: {\n          requestId: queryArg.requestId,\n          responseId: queryArg.responseId\n        }\n      })\n    }),\n    updateQuotePriceAndGoodUntilTimeUsingPut: build.mutation({\n      query: queryArg => ({\n        url: `/quotes/${queryArg.responseId}/price-and-expire-time`,\n        method: 'PUT',\n        params: {\n          quoteAmount: queryArg.quoteAmount,\n          requestId: queryArg.requestId,\n          time: queryArg.time\n        }\n      })\n    }),\n    getAllRequestForQuotesUsingGet: build.query({\n      query: () => ({\n        url: `/rfqs`\n      })\n    }),\n    updateRequestForQuoteUsingPut: build.mutation({\n      query: queryArg => ({\n        url: `/rfqs`,\n        method: 'PUT',\n        body: queryArg.secondaryRequestForQuote\n      })\n    }),\n    createMultipleRequestForQuotesUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/rfqs/multi-requests`,\n        method: 'POST',\n        body: queryArg.body\n      })\n    }),\n    getRequestForQuotesFromTodayUsingGet: build.query({\n      query: () => ({\n        url: `/rfqs/today`\n      })\n    }),\n    getRequestForQuoteByIdUsingGet: build.query({\n      query: queryArg => ({\n        url: `/rfqs/${queryArg.requestId}`\n      })\n    }),\n    cancelRequestForQuoteByRequestIdUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/rfqs/${queryArg.requestId}/cancel`,\n        method: 'POST'\n      })\n    }),\n    getProductsByIdentifierUsingGet: build.query({\n      query: queryArg => ({\n        url: `/security-details/product/${queryArg.identifier}`\n      })\n    }),\n    getProductsUsingGet: build.query({\n      query: queryArg => ({\n        url: `/security-details/products`,\n        params: {\n          offset: queryArg.offset,\n          pageNumber: queryArg.pageNumber,\n          pageSize: queryArg.pageSize,\n          paged: queryArg.paged,\n          'sort.sorted': queryArg['sort.sorted'],\n          'sort.unsorted': queryArg['sort.unsorted'],\n          unpaged: queryArg.unpaged\n        }\n      })\n    }),\n    getProductsBySearchCriteriaUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/security-details/products/searchCriteria`,\n        method: 'POST',\n        body: queryArg.searchOptions\n      })\n    }),\n    getProductsBySearchUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/security-details/search`,\n        method: 'POST',\n        body: queryArg.searchOptions,\n        params: {\n          params: queryArg.params\n        }\n      })\n    }),\n    expireSecondaryRecordsUsingPatch: build.mutation({\n      query: queryArg => ({\n        url: `/status/expire`,\n        method: 'PATCH',\n        body: queryArg.body\n      })\n    })\n  }),\n  overrideExisting: false\n});\nexport { injectedRtkApi as secondariesServiceApi };\nexport const {\n  useGetCompaniesUsingGetQuery,\n  useGetCountriesUsingGetQuery,\n  useGetDataPermissionsUsingGetQuery,\n  useCreateOrderUsingPostMutation,\n  useGetOrdersByUserIdUsingGetQuery,\n  useGetOrderUsingGetQuery,\n  useFillOrderUsingPutMutation,\n  useRejectOrderUsingPutMutation,\n  useCreateQuoteUsingPostMutation,\n  useExpireQuoteUsingPatchMutation,\n  useUpdateQuotePriceAndGoodUntilTimeUsingPutMutation,\n  useGetAllRequestForQuotesUsingGetQuery,\n  useUpdateRequestForQuoteUsingPutMutation,\n  useCreateMultipleRequestForQuotesUsingPostMutation,\n  useGetRequestForQuotesFromTodayUsingGetQuery,\n  useGetRequestForQuoteByIdUsingGetQuery,\n  useCancelRequestForQuoteByRequestIdUsingPostMutation,\n  useGetProductsByIdentifierUsingGetQuery,\n  useGetProductsUsingGetQuery,\n  useGetProductsBySearchCriteriaUsingPostMutation,\n  useGetProductsBySearchUsingPostMutation,\n  useExpireSecondaryRecordsUsingPatchMutation\n} = injectedRtkApi;","map":{"version":3,"names":["baseApi","api","injectedRtkApi","injectEndpoints","endpoints","build","getCompaniesUsingGet","query","queryArg","url","params","filterByRole","getCountriesUsingGet","getDataPermissionsUsingGet","createOrderUsingPost","mutation","method","body","secondaryOrder","timerSeconds","getOrdersByUserIdUsingGet","getOrderUsingGet","orderId","fillOrderUsingPut","rejectOrderUsingPut","createQuoteUsingPost","secondaryQuote","expireQuoteUsingPatch","requestId","responseId","updateQuotePriceAndGoodUntilTimeUsingPut","quoteAmount","time","getAllRequestForQuotesUsingGet","updateRequestForQuoteUsingPut","secondaryRequestForQuote","createMultipleRequestForQuotesUsingPost","getRequestForQuotesFromTodayUsingGet","getRequestForQuoteByIdUsingGet","cancelRequestForQuoteByRequestIdUsingPost","getProductsByIdentifierUsingGet","identifier","getProductsUsingGet","offset","pageNumber","pageSize","paged","unpaged","getProductsBySearchCriteriaUsingPost","searchOptions","getProductsBySearchUsingPost","expireSecondaryRecordsUsingPatch","overrideExisting","secondariesServiceApi","useGetCompaniesUsingGetQuery","useGetCountriesUsingGetQuery","useGetDataPermissionsUsingGetQuery","useCreateOrderUsingPostMutation","useGetOrdersByUserIdUsingGetQuery","useGetOrderUsingGetQuery","useFillOrderUsingPutMutation","useRejectOrderUsingPutMutation","useCreateQuoteUsingPostMutation","useExpireQuoteUsingPatchMutation","useUpdateQuotePriceAndGoodUntilTimeUsingPutMutation","useGetAllRequestForQuotesUsingGetQuery","useUpdateRequestForQuoteUsingPutMutation","useCreateMultipleRequestForQuotesUsingPostMutation","useGetRequestForQuotesFromTodayUsingGetQuery","useGetRequestForQuoteByIdUsingGetQuery","useCancelRequestForQuoteByRequestIdUsingPostMutation","useGetProductsByIdentifierUsingGetQuery","useGetProductsUsingGetQuery","useGetProductsBySearchCriteriaUsingPostMutation","useGetProductsBySearchUsingPostMutation","useExpireSecondaryRecordsUsingPatchMutation"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/redux/secondariesService/secondariesServiceEndpoints.ts"],"sourcesContent":["import { baseApi as api } from './secondariesServiceBaseApi';\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: (build) => ({\n    getCompaniesUsingGet: build.query<\n      GetCompaniesUsingGetApiResponse,\n      GetCompaniesUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/company`,\n        params: { filterByRole: queryArg.filterByRole },\n      }),\n    }),\n    getCountriesUsingGet: build.query<\n      GetCountriesUsingGetApiResponse,\n      GetCountriesUsingGetApiArg\n    >({\n      query: () => ({ url: `/company/countries` }),\n    }),\n    getDataPermissionsUsingGet: build.query<\n      GetDataPermissionsUsingGetApiResponse,\n      GetDataPermissionsUsingGetApiArg\n    >({\n      query: () => ({ url: `/company/permissions` }),\n    }),\n    createOrderUsingPost: build.mutation<\n      CreateOrderUsingPostApiResponse,\n      CreateOrderUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/orders`,\n        method: 'POST',\n        body: queryArg.secondaryOrder,\n        params: { timerSeconds: queryArg.timerSeconds },\n      }),\n    }),\n    getOrdersByUserIdUsingGet: build.query<\n      GetOrdersByUserIdUsingGetApiResponse,\n      GetOrdersByUserIdUsingGetApiArg\n    >({\n      query: () => ({ url: `/orders/user` }),\n    }),\n    getOrderUsingGet: build.query<\n      GetOrderUsingGetApiResponse,\n      GetOrderUsingGetApiArg\n    >({\n      query: (queryArg) => ({ url: `/orders/${queryArg.orderId}` }),\n    }),\n    fillOrderUsingPut: build.mutation<\n      FillOrderUsingPutApiResponse,\n      FillOrderUsingPutApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/orders/${queryArg.orderId}/fill`,\n        method: 'PUT',\n      }),\n    }),\n    rejectOrderUsingPut: build.mutation<\n      RejectOrderUsingPutApiResponse,\n      RejectOrderUsingPutApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/orders/${queryArg.orderId}/reject`,\n        method: 'PUT',\n      }),\n    }),\n    createQuoteUsingPost: build.mutation<\n      CreateQuoteUsingPostApiResponse,\n      CreateQuoteUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/quotes`,\n        method: 'POST',\n        body: queryArg.secondaryQuote,\n      }),\n    }),\n    expireQuoteUsingPatch: build.mutation<\n      ExpireQuoteUsingPatchApiResponse,\n      ExpireQuoteUsingPatchApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/quotes/expire`,\n        method: 'PATCH',\n        params: {\n          requestId: queryArg.requestId,\n          responseId: queryArg.responseId,\n        },\n      }),\n    }),\n    updateQuotePriceAndGoodUntilTimeUsingPut: build.mutation<\n      UpdateQuotePriceAndGoodUntilTimeUsingPutApiResponse,\n      UpdateQuotePriceAndGoodUntilTimeUsingPutApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/quotes/${queryArg.responseId}/price-and-expire-time`,\n        method: 'PUT',\n        params: {\n          quoteAmount: queryArg.quoteAmount,\n          requestId: queryArg.requestId,\n          time: queryArg.time,\n        },\n      }),\n    }),\n    getAllRequestForQuotesUsingGet: build.query<\n      GetAllRequestForQuotesUsingGetApiResponse,\n      GetAllRequestForQuotesUsingGetApiArg\n    >({\n      query: () => ({ url: `/rfqs` }),\n    }),\n    updateRequestForQuoteUsingPut: build.mutation<\n      UpdateRequestForQuoteUsingPutApiResponse,\n      UpdateRequestForQuoteUsingPutApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/rfqs`,\n        method: 'PUT',\n        body: queryArg.secondaryRequestForQuote,\n      }),\n    }),\n    createMultipleRequestForQuotesUsingPost: build.mutation<\n      CreateMultipleRequestForQuotesUsingPostApiResponse,\n      CreateMultipleRequestForQuotesUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/rfqs/multi-requests`,\n        method: 'POST',\n        body: queryArg.body,\n      }),\n    }),\n    getRequestForQuotesFromTodayUsingGet: build.query<\n      GetRequestForQuotesFromTodayUsingGetApiResponse,\n      GetRequestForQuotesFromTodayUsingGetApiArg\n    >({\n      query: () => ({ url: `/rfqs/today` }),\n    }),\n    getRequestForQuoteByIdUsingGet: build.query<\n      GetRequestForQuoteByIdUsingGetApiResponse,\n      GetRequestForQuoteByIdUsingGetApiArg\n    >({\n      query: (queryArg) => ({ url: `/rfqs/${queryArg.requestId}` }),\n    }),\n    cancelRequestForQuoteByRequestIdUsingPost: build.mutation<\n      CancelRequestForQuoteByRequestIdUsingPostApiResponse,\n      CancelRequestForQuoteByRequestIdUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/rfqs/${queryArg.requestId}/cancel`,\n        method: 'POST',\n      }),\n    }),\n    getProductsByIdentifierUsingGet: build.query<\n      GetProductsByIdentifierUsingGetApiResponse,\n      GetProductsByIdentifierUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/security-details/product/${queryArg.identifier}`,\n      }),\n    }),\n    getProductsUsingGet: build.query<\n      GetProductsUsingGetApiResponse,\n      GetProductsUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/security-details/products`,\n        params: {\n          offset: queryArg.offset,\n          pageNumber: queryArg.pageNumber,\n          pageSize: queryArg.pageSize,\n          paged: queryArg.paged,\n          'sort.sorted': queryArg['sort.sorted'],\n          'sort.unsorted': queryArg['sort.unsorted'],\n          unpaged: queryArg.unpaged,\n        },\n      }),\n    }),\n    getProductsBySearchCriteriaUsingPost: build.mutation<\n      GetProductsBySearchCriteriaUsingPostApiResponse,\n      GetProductsBySearchCriteriaUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/security-details/products/searchCriteria`,\n        method: 'POST',\n        body: queryArg.searchOptions,\n      }),\n    }),\n    getProductsBySearchUsingPost: build.mutation<\n      GetProductsBySearchUsingPostApiResponse,\n      GetProductsBySearchUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/security-details/search`,\n        method: 'POST',\n        body: queryArg.searchOptions,\n        params: { params: queryArg.params },\n      }),\n    }),\n    expireSecondaryRecordsUsingPatch: build.mutation<\n      ExpireSecondaryRecordsUsingPatchApiResponse,\n      ExpireSecondaryRecordsUsingPatchApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/status/expire`,\n        method: 'PATCH',\n        body: queryArg.body,\n      }),\n    }),\n  }),\n  overrideExisting: false,\n});\nexport { injectedRtkApi as secondariesServiceApi };\nexport type GetCompaniesUsingGetApiResponse = /** status 200 Ok */ CompanyV2[];\nexport type GetCompaniesUsingGetApiArg = {\n  /** filterByRole */\n  filterByRole?: string;\n};\nexport type GetCountriesUsingGetApiResponse = /** status 200 Ok */ Country[];\nexport type GetCountriesUsingGetApiArg = void;\nexport type GetDataPermissionsUsingGetApiResponse =\n  /** status 200 Ok */ CompanyPermission[];\nexport type GetDataPermissionsUsingGetApiArg = void;\nexport type CreateOrderUsingPostApiResponse /** status 200 Ok */ =\n  | SecondaryOrder\n  | /** status 201 Created */ undefined;\nexport type CreateOrderUsingPostApiArg = {\n  /** timerSeconds */\n  timerSeconds?: number;\n  /** order */\n  secondaryOrder: SecondaryOrder;\n};\nexport type GetOrdersByUserIdUsingGetApiResponse =\n  /** status 200 Ok */ SecondaryOrder[];\nexport type GetOrdersByUserIdUsingGetApiArg = void;\nexport type GetOrderUsingGetApiResponse = /** status 200 Ok */ SecondaryOrder;\nexport type GetOrderUsingGetApiArg = {\n  /** orderId */\n  orderId: number;\n};\nexport type FillOrderUsingPutApiResponse /** status 200 Ok */ =\n  | SecondaryOrder\n  | /** status 201 Created */ undefined;\nexport type FillOrderUsingPutApiArg = {\n  /** orderId */\n  orderId: number;\n};\nexport type RejectOrderUsingPutApiResponse /** status 200 Ok */ =\n  | SecondaryOrder\n  | /** status 201 Created */ undefined;\nexport type RejectOrderUsingPutApiArg = {\n  /** orderId */\n  orderId: number;\n};\nexport type CreateQuoteUsingPostApiResponse /** status 200 OK */ =\n  | SecondaryQuote\n  | /** status 201 Created */ SecondaryQuote;\nexport type CreateQuoteUsingPostApiArg = {\n  /** secondaryQuote */\n  secondaryQuote: SecondaryQuote;\n};\nexport type ExpireQuoteUsingPatchApiResponse /** status 200 OK */ =\n  | SecondaryRequestForQuote\n  | /** status 204 Ok */ SecondaryQuote;\nexport type ExpireQuoteUsingPatchApiArg = {\n  /** requestId */\n  requestId: number;\n  /** responseId */\n  responseId: number;\n};\nexport type UpdateQuotePriceAndGoodUntilTimeUsingPutApiResponse =\n  /** status 200 OK */\n  | SecondaryQuote\n  | /** status 201 Created */ undefined\n  | /** status 204 Ok */ SecondaryQuote;\nexport type UpdateQuotePriceAndGoodUntilTimeUsingPutApiArg = {\n  /** quoteAmount */\n  quoteAmount: number;\n  /** requestId */\n  requestId: number;\n  /** responseId */\n  responseId: number;\n  /** time */\n  time: string;\n};\nexport type GetAllRequestForQuotesUsingGetApiResponse =\n  /** status 200 Ok */ SecondaryRequestForQuote[];\nexport type GetAllRequestForQuotesUsingGetApiArg = void;\nexport type UpdateRequestForQuoteUsingPutApiResponse /** status 200 OK */ =\n  | SecondaryRequestForQuote\n  | /** status 201 Created */ undefined\n  | /** status 204 Updated */ SecondaryRequestForQuote;\nexport type UpdateRequestForQuoteUsingPutApiArg = {\n  /** rfq */\n  secondaryRequestForQuote: SecondaryRequestForQuote;\n};\nexport type CreateMultipleRequestForQuotesUsingPostApiResponse =\n  /** status 200 OK */\n  | SecondaryRequestForQuote[]\n  | /** status 201 Created */ SecondaryRequestForQuote[];\nexport type CreateMultipleRequestForQuotesUsingPostApiArg = {\n  /** rfqs */\n  body: SecondaryRequestForQuote[];\n};\nexport type GetRequestForQuotesFromTodayUsingGetApiResponse =\n  /** status 200 Ok */ SecondaryRequestForQuote[];\nexport type GetRequestForQuotesFromTodayUsingGetApiArg = void;\nexport type GetRequestForQuoteByIdUsingGetApiResponse =\n  /** status 200 Ok */ SecondaryRequestForQuote;\nexport type GetRequestForQuoteByIdUsingGetApiArg = {\n  /** requestId */\n  requestId: number;\n};\nexport type CancelRequestForQuoteByRequestIdUsingPostApiResponse =\n  /** status 200 OK */\n  | SecondaryRequestForQuote\n  | /** status 201 Created */ undefined\n  | /** status 204 Canceled */ SecondaryRequestForQuote;\nexport type CancelRequestForQuoteByRequestIdUsingPostApiArg = {\n  /** requestId */\n  requestId: number;\n};\nexport type GetProductsByIdentifierUsingGetApiResponse =\n  /** status 200 Ok */ Product;\nexport type GetProductsByIdentifierUsingGetApiArg = {\n  /** identifier */\n  identifier: string;\n};\nexport type GetProductsUsingGetApiResponse = /** status 200 Ok */ Product[];\nexport type GetProductsUsingGetApiArg = {\n  offset?: number;\n  pageNumber?: number;\n  pageSize?: number;\n  paged?: boolean;\n  'sort.sorted'?: boolean;\n  'sort.unsorted'?: boolean;\n  unpaged?: boolean;\n};\nexport type GetProductsBySearchCriteriaUsingPostApiResponse =\n  /** status 200 Ok */ Product[] | /** status 201 Created */ undefined;\nexport type GetProductsBySearchCriteriaUsingPostApiArg = {\n  /** searchOptions */\n  searchOptions: SearchOptions;\n};\nexport type GetProductsBySearchUsingPostApiResponse /** status 200 Ok */ =\n  | Product[]\n  | /** status 201 Created */ undefined;\nexport type GetProductsBySearchUsingPostApiArg = {\n  /** params */\n  params: any;\n  /** searchOptions */\n  searchOptions: SearchOptions;\n};\nexport type ExpireSecondaryRecordsUsingPatchApiResponse = unknown;\nexport type ExpireSecondaryRecordsUsingPatchApiArg = {\n  /** expiredItems */\n  body: any[];\n};\nexport type CompanyV2 = {\n  id?: number;\n  name?: string;\n  parentName?: string;\n  roleNames?: string[];\n};\nexport type Country = {\n  countryCode?: string;\n  countryName?: string;\n  id?: number;\n  region?: string;\n};\nexport type CompanyPermission = {\n  permission?: string;\n  sourceCompany?: string;\n  targetCompany?: string;\n};\nexport type SecondaryOrderAssociatedUserIds = {\n  liquidityProvider?: string;\n  liquidityTaker?: string;\n};\nexport type ProductIdentifier = {\n  productId?: string;\n  securityIdentifierType?: 'CUSIP' | 'ISIN';\n  securityIdentifierValue?: string;\n};\nexport type SecondaryOrderStatusTimestamp = {\n  status?: 'PENDING' | 'CANCELED' | 'REJECTED' | 'FILLED';\n  timestamp?: string;\n};\nexport type SecondaryOrder = {\n  account?: number;\n  associatedRequestId: number;\n  associatedResponseId: number;\n  associatedUserIds?: SecondaryOrderAssociatedUserIds;\n  coverPrice?: number;\n  executed?: string;\n  orderId?: number;\n  price?: number;\n  productIdentifier?: ProductIdentifier;\n  quantity?: number;\n  settlement?: string;\n  side?: 'BUY' | 'SELL';\n  status?: 'PENDING' | 'CANCELED' | 'REJECTED' | 'FILLED';\n  statusHistory?: SecondaryOrderStatusTimestamp[];\n  tlement?: string;\n};\nexport type SecondaryQuote = {\n  createDateTimestamp?: string;\n  createdByUserId?: string;\n  desk?: string;\n  firm?: string;\n  goodUntilTime: string;\n  orderId?: number;\n  quoteAmount: number;\n  quoteProvider?: string;\n  requestId: number;\n  responseId?: number;\n  revision?: number;\n  status?:\n    | 'Pending'\n    | 'Canceled'\n    | 'Filled'\n    | 'Expired'\n    | 'OTW'\n    | 'Traded Away';\n  updatedByUserId?: string;\n  updatedTimestamp?: string;\n  userAccount?: number;\n};\nexport type AccumulationDecumulationDate = {\n  periodEndDate?: string;\n  settlementDate?: string;\n};\nexport type AccumulatorDecumulator = {\n  accumulationDecumulationDateList?: AccumulationDecumulationDate[];\n  leverage?: number;\n  numberOfShares?: number;\n  settlementFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  strike?: number;\n  strikeObservationFixingType?: 'Daily' | 'Continuous' | 'European';\n  strikeObservationFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  totalNumberOfObservationDates?: number;\n};\nexport type OfferingNotification = {\n  dismissed?: boolean;\n  uuid?: string;\n};\nexport type ProceedToOfferingStatus = {\n  createOfferWithIB?: 'InProgress' | 'DataReceived' | 'DocsReceived' | 'Error';\n  createOfferWithOrderingSystem?: 'InProgress' | 'Complete' | 'Error';\n  errors?: {\n    [key: string]: string;\n  };\n  uploadDocstoOrderingSystem?: 'InProgress' | 'Complete' | 'Error';\n  uuid?: string;\n};\nexport type ClientSpecific = {\n  breakpointShares?: number;\n  broadOffering?: 'No' | 'Yes';\n  clientProductId?: string;\n  coreApproval?: 'Core' | 'Non-Core';\n  dealBackup?: string[];\n  dealLead?: string[];\n  firstPaymentDate?: string;\n  interestPeriod?: 'Short' | 'Standard' | 'Long';\n  internalTradingDesk?: string;\n  issuerCreditCode?: string;\n  legalPrintEstimate?: number;\n  legalTeam?: string;\n  locked?: boolean;\n  numBreakpointInvestors?: number;\n  offeringNotification?: OfferingNotification;\n  offeringScope?: 'Broad' | 'Tailored';\n  offshoreEligibility?: 'No' | 'Yes' | 'Offshore Only';\n  proceedToOfferingStatus?: ProceedToOfferingStatus;\n  productCode?: 'ELNP' | 'ELNS' | 'ELNC' | 'ELNE' | 'CORP' | 'CORN';\n  productSymbol?: string;\n  prosRequestId?: string;\n  pvFundingLessFeesPercentage?: number;\n  ramCode?: string;\n  securityId?: string;\n  splitIds?: string[];\n  trader?: string;\n};\nexport type Underlier = {\n  dividendYield?: number;\n  exchangeCode?: string;\n  initialFixing?:\n    | 'End of Day'\n    | 'Open'\n    | 'Intraday'\n    | 'VWAP'\n    | 'Limit'\n    | 'Firm';\n  underlierLevel?: number;\n  underlierName?: string;\n  underlierSource: 'Bloomberg' | 'RIC';\n  underlierStrikeDate?: string;\n  underlierSymbol: string;\n  underlierWeight?: number;\n};\nexport type CallSchedule = {\n  callBarrierLevelStepValue?: number;\n  callObservationDate?: string;\n  callPremiumStepValue?: number;\n  callScheduleUnderlierList?: Underlier[];\n  callSettlementDate?: string;\n};\nexport type ProductCall = {\n  callBarrierLevelCurrent?: number;\n  callBarrierLevelFinal?: number;\n  callBarrierLevelHigh?: number;\n  callBarrierLevelLow?: number;\n  callBarrierLevelUnderlierList?: Underlier[];\n  callBarrierStepIncrement?: number;\n  callBasketType?:\n    | 'Equal'\n    | 'Custom'\n    | 'WoF'\n    | 'BoF'\n    | 'Out Performance'\n    | 'Single';\n  callCrossing?: 'Below' | 'At or Below' | 'Above' | 'At or Above';\n  callMemory?: boolean;\n  callObservationDateList?: CallSchedule[];\n  callObservationFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  callPeriodObservationType?: 'Daily' | 'Continuous' | 'European';\n  callPremiumCurrent?: number;\n  callPremiumFinal?: number;\n  callPremiumHigh?: number;\n  callPremiumLow?: number;\n  callPremiumStepIncrement?: number;\n  callType?: 'Issuer' | 'Auto' | 'Autocall Step' | 'Null';\n  expectedMaturity?: string;\n  numberNoCallPeriods?: number;\n  stepType?: 'Up' | 'Down';\n};\nexport type RateBarrierLevel = {\n  rateBarrierLevel?: number;\n  rateBarrierLevelEndDate?: string;\n  rateBarrierLevelStartDate?: string;\n};\nexport type RateCap = {\n  rateCap?: number;\n  rateCapEndDate?: string;\n  rateCapStartDate?: string;\n};\nexport type RateConditionalCoupon = {\n  rateConditionalCoupon?: number;\n  rateConditionalCouponEndDate?: string;\n  rateConditionalCouponStartDate?: string;\n};\nexport type RateMin = {\n  rateMin?: number;\n  rateMinEndDate?: string;\n  rateMinStartDate?: string;\n};\nexport type ProductCln = {\n  cdsName?: string;\n  cdsTenor?: number;\n  creditEvent?: string;\n  debtIsinList?: string[];\n  debtWeightList?: string[];\n  fixedCouponMultiplier?: string;\n  floatInstrument?: string;\n  floatRateFixingOffsetDays?: number;\n  floatRateFixingSchedule?: any[];\n  floatRateFixingTime?: string;\n  interestMultiplierPerYear?: number;\n  rateBarrierLevel?: RateBarrierLevel[];\n  rateBarrierObservationFrequency?: string;\n  rateCap?: RateCap[];\n  rateConditionalCoupon?: RateConditionalCoupon[];\n  rateMin?: RateMin[];\n  ratePaymentType?: string;\n};\nexport type ProductCms = {\n  longTermRateUnderlierSource?: 'Bloomberg' | 'RIC';\n  longTermRateUnderlierSymbol?: string;\n  shortTermRateUnderlierSource?: 'Bloomberg' | 'RIC';\n  shortTermRateUnderlierSymbol?: string;\n};\nexport type ExternalDocumentProvider = {\n  externalDocumentProviderId?: string;\n  legalReview?: 'Yes' | 'No';\n  secLink?: string;\n  taxReview?: 'Yes' | 'No';\n};\nexport type MatchInformation = {\n  matchAccepted?: boolean;\n  matchEligible?: boolean;\n  matchNotional?: number;\n  matchNotionalExternalCP?: number;\n  matchNotionalInternalCP?: number;\n  matchPending?: boolean;\n  matchPercentage?: number;\n  matchRejected?: boolean;\n};\nexport type ClientReoffer = {\n  reofferClientName?: string;\n  reofferClientRateCurrent?: number;\n  reofferClientRateFinal?: number;\n  reofferClientRateHigh?: number;\n  reofferClientRateLow?: number;\n};\nexport type ProductGeneral = {\n  accountType?: 'Advisory' | 'Brokerage';\n  ancillaryFeatures?: (\n    | 'With Lookback Initial'\n    | 'With Lookback Final'\n    | 'With Coupon Memory'\n    | 'With Minimum Return'\n    | 'With Minimum Coupon'\n    | 'With Averaging In'\n    | 'With Averaging Out'\n    | 'With Modified Averaging In'\n    | 'With Modified Averaging Out'\n    | 'With Supplemental'\n    | 'With Knock Out'\n  )[];\n  assetClass?: string;\n  averagingExclusion?: 'High' | 'Low';\n  averagingInDates?: string[];\n  averagingModified?: boolean;\n  averagingOutDates?: string[];\n  basketReturnAdjustment?: number;\n  basketType?:\n    | 'Equal'\n    | 'Custom'\n    | 'WoF'\n    | 'BoF'\n    | 'Out Performance'\n    | 'Single';\n  bidDeadlineTimestamp?: string;\n  businessDayConvention?:\n    | 'Following'\n    | 'Modified Following'\n    | 'Previous'\n    | 'End of Month Following'\n    | 'No Adjustment'\n    | 'Modified Previous'\n    | 'End of Month No Adjustment'\n    | 'End of Month Previous';\n  calculationAgent?: string;\n  completionStatus?: 'Complete' | 'Incomplete' | 'Custom';\n  currency?:\n    | 'USD'\n    | 'EUR'\n    | 'GBP'\n    | 'JPY'\n    | 'RUB'\n    | 'CAD'\n    | 'MXN'\n    | 'CNY'\n    | 'INR'\n    | 'CHF'\n    | 'SEK'\n    | 'ARS'\n    | 'AUD'\n    | 'BRL'\n    | 'CLP'\n    | 'COP'\n    | 'CZK'\n    | 'DKK'\n    | 'HKD'\n    | 'HUF'\n    | 'IDR'\n    | 'ISK'\n    | 'KRW'\n    | 'MYR'\n    | 'NOK'\n    | 'NZD'\n    | 'PEN'\n    | 'PHP'\n    | 'PLN'\n    | 'SGD'\n    | 'THB'\n    | 'TRY'\n    | 'TWD'\n    | 'ZAR';\n  cusip?: string;\n  dateOffset?: number;\n  dayCountFraction?: string;\n  estimatedInitialValue?: number;\n  externalBasketName?: string;\n  externalDocumentProvider?: ExternalDocumentProvider;\n  externalProductId?: string;\n  fairPriceFinal?: number;\n  fdicInsured?: boolean;\n  finalValuationDate?: string;\n  fundingSpread?: number[];\n  fundservID?: string;\n  highWaterMarkDate?: string;\n  indicativeDeadlineTimestamp?: string;\n  isin?: string;\n  issueDate?: string;\n  issuePriceCurrent?: number;\n  issuePriceFinal?: number;\n  issuePriceHigh?: number;\n  issuePriceLow?: number;\n  issuer?: string;\n  longTermCapitalGain?: boolean;\n  lookbackFinalDate?: string;\n  lookbackFinalValuationType?: 'Min' | 'Max';\n  lookbackInitialDate?: string;\n  lookbackInitialValuationType?: 'Min' | 'Max';\n  lumaProductIdentifier?: string;\n  matchInformation?: MatchInformation;\n  maturityDate?: string;\n  minimumTradingLot?: number;\n  offeringType?: 'Private Placement' | 'Public Offering';\n  oisDfPercentage?: number;\n  originator?: string;\n  performanceStrike?: number;\n  productCategory?:\n    | 'Capital Protection'\n    | 'Yield'\n    | 'Participation'\n    | 'Leverage'\n    | 'Credit'\n    | 'OTC';\n  productDeadlineTimestamp?: string;\n  productFaceValue?: number;\n  productLaunchTimestamp?: string;\n  productName?: string;\n  productNoteList?: string[];\n  productNotionalCap?: number;\n  productNotionalCurrent?: number;\n  productNotionalFinal?: number;\n  productNotionalHigh?: number;\n  productNotionalLow?: number;\n  productRiskRanking?: number;\n  productType?:\n    | 'Capital Protection'\n    | 'Capital Protection with Knock Out'\n    | 'Discount Certificate'\n    | 'Barrier Reverse Convertible'\n    | 'Reverse Convertible'\n    | 'Callable Barrier Reverse Convertible'\n    | 'Callable Reverse Convertible'\n    | 'Tracker Certificate'\n    | 'Outperformance Certificate'\n    | 'Bonus Certificate'\n    | 'Twin Win'\n    | 'Warrants'\n    | 'Mini Futures'\n    | 'CLN'\n    | 'Accumulator'\n    | 'Decumulator';\n  registrationType?:\n    | 'Registered Note'\n    | 'Reg S'\n    | '3a2'\n    | 'Private Placement'\n    | 'CD'\n    | 'GIC'\n    | 'PAR'\n    | 'PPN'\n    | 'ML GIC'\n    | 'Exempt Distribution';\n  reofferClientList?: ClientReoffer[];\n  requestId?: string;\n  returnType?: 'Growth' | 'Growth and Income' | 'Income' | 'Digital';\n  riskFreeRate?: string;\n  salesCreditCurrent?: number;\n  salesCreditFinal?: number;\n  salesCreditHigh?: number;\n  salesCreditLow?: number;\n  secondaryMarketQuotingType?: 'Clean' | 'Dirty';\n  settlementType?: 'Cash' | 'Physical';\n  sspaStructureTypeId?: string;\n  sspaStructureTypeName?: string;\n  stage?:\n    | 'Request'\n    | 'Quote'\n    | 'Offer'\n    | 'Refresh Price'\n    | 'Confirm Lock'\n    | 'Execution'\n    | 'Post Trade'\n    | 'Not Traded'\n    | 'Ops Review';\n  standardPrice?: number;\n  status?:\n    | 'Accepting Indications'\n    | 'Book Building Traded Not Settled'\n    | 'Request'\n    | 'Estimated Quote'\n    | 'Indicative Quote'\n    | 'Final Quote'\n    | 'Offer'\n    | 'Confirm Lock'\n    | 'Final Execution'\n    | 'New'\n    | 'Live'\n    | 'Matured'\n    | 'Called'\n    | 'Indicative Quote Received'\n    | 'Open for Orders'\n    | 'Pending Confirmation'\n    | 'Final Notional Confirmed'\n    | 'Pending Final Docs'\n    | 'Cancelled'\n    | 'Offering Expired'\n    | 'Restricted'\n    | 'Traded Not Settled'\n    | 'Accepting Orders'\n    | 'Traded Pending Documentation'\n    | 'Expired'\n    | 'Book Building Traded Pending Documentation'\n    | 'Review Required'\n    | 'Update Product Details';\n  strikeDate?: string;\n  structureFee?: number;\n  structureLongNameExternal?: string;\n  structureLongNameInternal?: string;\n  structureNameExternal?: string;\n  structureNameInternal?: string;\n  structureShortNameExternal?: string;\n  structureShortNameInternal?: string;\n  supplementalPercentage?: number;\n  swapMaturity?: '1mL' | '3mL' | '1m' | '3m' | '6m';\n  tenorCurrent?: number;\n  tenorFinal?: number;\n  tenorHigh?: number;\n  tenorLow?: number;\n  tenorUnit: 'Weeks' | 'Months' | 'Years';\n  totalPnl?: number;\n  tradeDate?: string;\n  underlierList?: Underlier[];\n  upfrontDeferred?: string;\n  wrapperType: 'Note' | 'CD' | 'Market Linked Trust' | 'OTC';\n};\nexport type ProductGrowth = {\n  absoluteReturnBarrierLevelCurrent?: number;\n  absoluteReturnBarrierLevelFinal?: number;\n  absoluteReturnBarrierLevelHigh?: number;\n  absoluteReturnBarrierLevelLow?: number;\n  absoluteReturnBarrierUnderlierList?: Underlier[];\n  absoluteReturnParticipationRateCurrent?: number;\n  absoluteReturnParticipationRateFinal?: number;\n  absoluteReturnParticipationRateHigh?: number;\n  absoluteReturnParticipationRateLow?: number;\n  bearish?: boolean;\n  digitalReturnBarrierCurrent?: number;\n  digitalReturnBarrierFinal?: number;\n  digitalReturnBarrierHigh?: number;\n  digitalReturnBarrierLow?: number;\n  digitalReturnBarrierObservationDateList?: any[];\n  digitalReturnBarrierObservationFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  digitalReturnBarrierUnderlierList?: Underlier[];\n  digitalReturnCurrent?: number;\n  digitalReturnFinal?: number;\n  digitalReturnHigh?: number;\n  digitalReturnLow?: number;\n  growthType?: (\n    | 'Point to Point'\n    | 'Capped Point to Point'\n    | 'ITM Digital'\n    | 'ATM Digital'\n    | 'OTM Digital'\n    | 'Capped ITM Digital'\n    | 'Capped ATM Digital'\n    | 'Capped OTM Digital'\n    | 'Uncapped ITM Digital'\n    | 'Uncapped ATM Digital'\n    | 'Uncapped OTM Digital'\n    | 'Dual Directional'\n    | 'Capped Dual Directional'\n    | 'Digital Dual Directional'\n    | 'Uncapped Digital Dual Directional'\n    | 'Capped Digital Dual Directional'\n    | 'Snowball'\n    | 'Variable Snowball'\n    | 'Cliquet'\n    | 'Hybrid Credit Linked Point to Point'\n    | 'Capped Hybrid Credit Linked Point to Point'\n  )[];\n  knockOutBarrierCurrent?: number;\n  knockOutBarrierFinal?: number;\n  knockOutBarrierHigh?: number;\n  knockOutBarrierLow?: number;\n  knockOutRebateCurrent?: number;\n  knockOutRebateFinal?: number;\n  knockOutRebateHigh?: number;\n  knockOutRebateLow?: number;\n  lowerCallStrikeCurrent?: number;\n  lowerCallStrikeFinal?: number;\n  lowerCallStrikeHigh?: number;\n  lowerCallStrikeLow?: number;\n  lowerCallStrikeUnderlierList?: Underlier[];\n  lowerPutStrike?: number;\n  maximumReturnCurrent?: number;\n  maximumReturnFinal?: number;\n  maximumReturnHigh?: number;\n  maximumReturnLow?: number;\n  minimumReturnCurrent?: number;\n  minimumReturnFinal?: number;\n  minimumReturnHigh?: number;\n  minimumReturnLow?: number;\n  underlierReturnCapLevelCurrent?: number;\n  underlierReturnCapLevelFinal?: number;\n  underlierReturnCapLevelHigh?: number;\n  underlierReturnCapLevelLow?: number;\n  upsideAboveDigitalReturn?: boolean;\n  upsideBasketType?:\n    | 'Equal'\n    | 'Custom'\n    | 'WoF'\n    | 'BoF'\n    | 'Out Performance'\n    | 'Single';\n  upsideParticipationAboveDigitalReturnCurrent?: number;\n  upsideParticipationAboveDigitalReturnFinal?: number;\n  upsideParticipationAboveDigitalReturnHigh?: number;\n  upsideParticipationAboveDigitalReturnLow?: number;\n  upsideParticipationRateCurrent?: number;\n  upsideParticipationRateFinal?: number;\n  upsideParticipationRateHigh?: number;\n  upsideParticipationRateLow?: number;\n  upsideParticipationUnderlierList?: Underlier[];\n};\nexport type ProductProtection = {\n  KIbarrierCrossing?: 'Below' | 'At or Below' | 'Above' | 'At or Above';\n  capitalProtectionLevelCurrent?: number;\n  capitalProtectionLevelFinal?: number;\n  capitalProtectionLevelHigh?: number;\n  capitalProtectionLevelLow?: number;\n  downsideBasketType?:\n    | 'Equal'\n    | 'Custom'\n    | 'WoF'\n    | 'BoF'\n    | 'Out Performance'\n    | 'Single';\n  downsideType?:\n    | 'Buffer'\n    | 'Barrier'\n    | 'Full'\n    | 'Partial'\n    | 'Bearish'\n    | 'No Principal Protection'\n    | 'Airbag'\n    | 'Geared Barrier'\n    | 'Geared Buffer';\n  finalFixingCrossing?: 'Below' | 'At or Below' | 'Above' | 'At or Above';\n  oneStarLevel?: number;\n  oneStarType?:\n    | 'Equal'\n    | 'Custom'\n    | 'WoF'\n    | 'BoF'\n    | 'Out Performance'\n    | 'Single';\n  principalBarrierLevelCurrent?: number;\n  principalBarrierLevelFinal?: number;\n  principalBarrierLevelHigh?: number;\n  principalBarrierLevelLow?: number;\n  principalBarrierLevelUnderlierList?: Underlier[];\n  principalBufferLevelCurrent?: number;\n  principalBufferLevelFinal?: number;\n  principalBufferLevelHigh?: number;\n  principalBufferLevelLow?: number;\n  principalBufferLevelUnderlierList?: Underlier[];\n  protectionLevel?: number;\n  putLeverageCurrent?: number;\n  putLeverageFinal?: number;\n  putLeverageHigh?: number;\n  putLeverageLow?: number;\n  putObservationDateList?: string[];\n  putObservationFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  putStrikeCurrent?: number;\n  putStrikeFinal?: number;\n  putStrikeHigh?: number;\n  putStrikeLow?: number;\n  putStrikeUnderlierList?: Underlier[];\n  putType?: 'Down and In' | 'Vanilla';\n};\nexport type SupportingDocumentation = {\n  documentLanguage?: ('EN' | 'FR' | 'ES' | 'DE' | 'IT')[];\n  documentationType?:\n    | 'KID'\n    | 'Fact Sheets'\n    | 'Target Market'\n    | 'Cost & Charges'\n    | 'Termsheet'\n    | 'Final Terms'\n    | 'Prelim Draft'\n    | 'Template Prospectus Supplement'\n    | 'Prelim Distributable'\n    | 'Preliminary Prospectus Supplement'\n    | 'Final Distributable'\n    | 'Final Draft'\n    | 'Indicative Term Sheet'\n    | 'Miscellaneous'\n    | 'Summary Sheet Draft'\n    | 'Summary Sheet Distributable'\n    | 'Swiss Simplified Prospectus';\n};\nexport type ProductRegulatory = {\n  countryDistribution?: (\n    | 'Canada'\n    | 'Switzerland'\n    | 'Germany'\n    | 'Italy'\n    | 'France'\n    | 'Spain'\n    | 'Portugal'\n    | 'United Kingdom'\n    | 'Netherlands'\n    | 'Belgium'\n    | 'Luxembourg'\n    | 'Austria'\n    | 'Ireland'\n    | 'Sweden'\n    | 'Finland'\n    | 'Norway'\n    | 'Denmark'\n    | 'Israel'\n    | 'UAE'\n    | 'South Africa'\n    | 'USA'\n    | 'Mexico'\n    | 'Panama'\n    | 'Colombia'\n    | 'Peru'\n    | 'Chile'\n    | 'Uruguay'\n    | 'Argentina'\n    | 'Paraguay'\n    | 'Puerto Rico'\n    | 'Ecuador'\n    | 'Hong Kong'\n    | 'Singapore'\n  )[];\n  listing?:\n    | 'None'\n    | 'SIX'\n    | 'BX Swiss'\n    | 'FWB'\n    | 'GETTEX'\n    | 'SWB'\n    | 'Euronext France'\n    | 'Euronext NL'\n    | 'Euronext Lisbon'\n    | 'Euronext Brussels'\n    | 'BVME'\n    | 'LuxSE'\n    | 'BME'\n    | 'LSE'\n    | 'WBAG';\n  supportingDocumentation?: SupportingDocumentation[];\n  targetMarket?:\n    | 'Retail'\n    | 'Professional Counterparties'\n    | 'Eligible Counterparties';\n};\nexport type ProductScenarios = {\n  scenarioOne?: string;\n  scenarioTwo?: string;\n};\nexport type LeverageFactor = {\n  leverageFactor?: number;\n  leverageFactorEndDate?: string;\n  leverageFactorStartDate?: string;\n};\nexport type PaymentSchedule = {\n  bifurcationOfInterest?: boolean;\n  interest?: number;\n  optionPremium?: number;\n  paymentBarrierLevel?: number;\n  paymentObservationDate?: string;\n  paymentRate?: number;\n  paymentResetDate?: string;\n  paymentSettlementDate?: string;\n};\nexport type ProductYield = {\n  bifurcationOfInterest?: boolean;\n  cashPoolKnockInLevel?: string;\n  cashPoolKnockInVolume?: string;\n  couponBarrierCrossingType?: 'Above' | 'At Or Above';\n  couponBasketType?: 'Equal' | 'Custom' | 'WoF' | 'BoF' | 'Out Performance';\n  equityPool?: number;\n  floatSpread?: number;\n  interest?: number;\n  leverageFactors?: LeverageFactor[];\n  minCouponPayPeriod?:\n    | 'Annually'\n    | 'Bi-Monthly'\n    | 'Monthly'\n    | 'Quarterly'\n    | 'At Maturity'\n    | 'Semi-Annually';\n  minPaymentRatePerAnnumCurrent?: number;\n  minPaymentRatePerAnnumFinal?: number;\n  minPaymentRatePerAnnumHigh?: number;\n  minPaymentRatePerAnnumLow?: number;\n  minPaymentRatePerPeriodCurrent?: number;\n  minPaymentRatePerPeriodFinal?: number;\n  minPaymentRatePerPeriodHigh?: number;\n  minPaymentRatePerPeriodLow?: number;\n  optionPremium?: number;\n  paymentBarrierCurrent?: number;\n  paymentBarrierFinal?: number;\n  paymentBarrierHigh?: number;\n  paymentBarrierLow?: number;\n  paymentBarrierObservationFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  paymentBarrierUnderlierList?: Underlier[];\n  paymentDateList?: PaymentSchedule[];\n  paymentEvaluationFrequencyCurrent?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  paymentEvaluationFrequencyFinal?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  paymentFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  paymentMemory?: boolean;\n  paymentRatePerAnnumCurrent?: number;\n  paymentRatePerAnnumFinal?: number;\n  paymentRatePerAnnumHigh?: number;\n  paymentRatePerAnnumLow?: number;\n  paymentRatePerPeriodCurrent?: number;\n  paymentRatePerPeriodFinal?: number;\n  paymentRatePerPeriodHigh?: number;\n  paymentRatePerPeriodLow?: number;\n  paymentType?:\n    | 'Fixed'\n    | 'Contingent'\n    | 'Range Accrual'\n    | 'Annual Averaging'\n    | 'All Up'\n    | 'Resetting Annual Averaging'\n    | 'AutoCap'\n    | 'Rate Builder'\n    | 'Fixed To Floating'\n    | 'Time Series'\n    | 'Fixed to Reset'\n    | 'Variable Interest Credit Linked'\n    | 'Fixed Interest Credit Linked'\n    | 'Rate Linked'\n    | 'Credit Linked'\n    | 'Stock Basket'\n    | 'Resetting Time Series'\n    | 'Cliquet'\n    | 'Fixed To Contingent'\n    | 'Builder'\n    | 'Leveraged Builder';\n  paymentTypeChangeDate?: string;\n  rateBuilderGrouping?: string[];\n  rateBuilderReturns?: string[];\n  rateBuilderValuesCurrent?: number[];\n  rateBuilderValuesFinal?: number[];\n  rateBuilderValuesHigh?: number[];\n  rateBuilderValuesLow?: number[];\n  stockReturnCapCurrent?: string;\n  stockReturnCapFinal?: string;\n  stockReturnCapHigh?: string;\n  stockReturnCapLow?: string;\n  stockReturnCapUnderlierList?: Underlier[];\n  stockReturnFloorCurrent?: string;\n  stockReturnFloorFinal?: string;\n  stockReturnFloorHigh?: string;\n  stockReturnFloorLow?: string;\n  stockReturnFloorUnderlierList?: Underlier[];\n  triggerParticipationRate?: number;\n  upperBarrierLevelCurrent?: number;\n  upperBarrierLevelFinal?: number;\n  upperBarrierLevelHigh?: number;\n  upperBarrierLevelLow?: number;\n  variablePayFinalObservationDate?: string;\n  variablePayInitialObservationDate?: string;\n  yieldBasketType?:\n    | 'Equal'\n    | 'Custom'\n    | 'WoF'\n    | 'BoF'\n    | 'Out Performance'\n    | 'Single';\n  yieldCrossing?: 'Below' | 'At or Below' | 'Above' | 'At or Above';\n};\nexport type IssuerDocumentSEC = {\n  docType?: 'Termsheet' | 'KID';\n  documentId?: string;\n  encodedPDF?: string;\n  isFinal?: boolean;\n  jurisdiction?:\n    | 'Switzerland'\n    | 'Germany'\n    | 'Italy'\n    | 'France'\n    | 'Spain'\n    | 'Portugal'\n    | 'United Kingdom'\n    | 'Netherlands'\n    | 'Belgium'\n    | 'Luxembourg'\n    | 'Austria'\n    | 'Ireland'\n    | 'Sweden'\n    | 'Finland'\n    | 'Norway'\n    | 'Denmark'\n    | 'Israel'\n    | 'UAE'\n    | 'South Africa'\n    | 'USA'\n    | 'Mexico'\n    | 'Panama'\n    | 'Colombia'\n    | 'Peru'\n    | 'Chile'\n    | 'Uruguay'\n    | 'Argentina'\n    | 'Paraguay'\n    | 'Puerto Rico'\n    | 'Ecuador'\n    | 'Hong Kong'\n    | 'Singapore'\n    | 'Canada';\n  language?: 'EN' | 'ES' | 'ZH' | 'FR' | 'DE' | 'IT' | 'PT' | 'RU' | 'SV';\n  link?: string;\n  orderId?: string;\n  password?: string;\n  quoteId?: string;\n  quoteProvider?: string;\n  quoteProviderOrderId?: string;\n  quoteProviderQuoteId?: string;\n  username?: string;\n};\nexport type ProductQuote = {\n  clientReferenceId?: string;\n  counterpartyFundingType?: 'Upfront' | 'Deferred';\n  counterpartyFundingValue?: number;\n  createDateTimestamp?: string;\n  createdByUserId?: string;\n  createdByUsername?: string;\n  creationHubQuoteId?: string;\n  current?: number;\n  documents?: IssuerDocumentSEC[];\n  errorMessages?: string[];\n  estimatedInitialValue?: number;\n  estimatedLife?: number;\n  estimatedLifeUnit?: 'Weeks' | 'Months' | 'Years';\n  expirationTimestamp?: string;\n  high?: number;\n  issuerReferenceId?: string;\n  low?: number;\n  message?: string[];\n  messages?: string[];\n  notional?: number;\n  numberOfShares?: number;\n  quoteId?: string;\n  quoteProvider: string;\n  requestId: string;\n  requestType?: 'Indicative' | 'Firm';\n  revision?: number;\n  sensitivity?: number;\n  solveFor?:\n    | 'Tenor'\n    | 'Product Notional'\n    | 'Reoffer Client Rate'\n    | 'Payment Evaluation Frequency'\n    | 'Payment Rate Per Period'\n    | 'Payment Rate Per Annum'\n    | 'Min Payment Rate Per Annum'\n    | 'Min Payment Rate Per Period'\n    | 'Stock Return Floor'\n    | 'Rate Builder Values'\n    | 'Call Level List'\n    | 'Call Premium Level List'\n    | 'Put Strike'\n    | 'Principal Barrier Level'\n    | 'Digital Return'\n    | 'Upside Participation Rate'\n    | 'Lower Call Strike'\n    | 'Underlier Return Cap Level'\n    | 'Digital Return Percentage'\n    | 'Digital Return Barrier'\n    | 'Upside Participation Above Digital Return'\n    | 'Absolute Return Barrier Level'\n    | 'Downside Participation Rate'\n    | 'Maximum Return'\n    | 'Payment Barrier'\n    | 'Stock Return Cap'\n    | 'Sales Credit'\n    | 'Absolute Return Participation Rate'\n    | 'Call Barrier Level'\n    | 'Principal Buffer Level'\n    | 'Upper Barrier Level'\n    | 'Knock Out Rebate'\n    | 'Knock Out Barrier'\n    | 'Issue Price'\n    | 'Capital Protection Level'\n    | 'Put Leverage'\n    | 'Accumulator Decumulator Strike';\n  status?:\n    | 'Invalid'\n    | 'Quote Received'\n    | 'Quote Expired'\n    | 'Quote Rejected'\n    | 'Quote Cancelled'\n    | 'Traded Away'\n    | 'Quote Accepted'\n    | 'Request for Approval'\n    | 'Request for Approval (Client)';\n  underlierLevel?: number;\n  updatedByUserId?: string;\n  updatedTimestamp?: string;\n};\nexport type Product = {\n  accumulatorDecumulator?: AccumulatorDecumulator;\n  clientSpecific?: ClientSpecific;\n  createTimestamp?: string;\n  createdByUserId?: string;\n  productCall: ProductCall;\n  productCln?: ProductCln;\n  productCms?: ProductCms;\n  productGeneral: ProductGeneral;\n  productGrowth: ProductGrowth;\n  productId?: string;\n  productProtection: ProductProtection;\n  productRegulatory?: ProductRegulatory;\n  productScenarios?: ProductScenarios;\n  productYield: ProductYield;\n  quotes?: {\n    [key: string]: ProductQuote;\n  };\n  revision?: number;\n  updateTimestamp?: string;\n  updatedByUserId?: string;\n};\nexport type SecondaryProductIdentifier = {\n  productId?: string;\n  securityIdentifierType?: 'CUSIP' | 'ISIN';\n  securityIdentifierValue?: string;\n};\nexport type SecondaryRequestForQuote = {\n  acceptedQuote?: SecondaryQuote;\n  createDateTimestamp?: string;\n  createdByUserId?: string;\n  desk?: string;\n  endTime?: string;\n  firm?: string;\n  product?: Product;\n  productIdentifier?: SecondaryProductIdentifier;\n  quantity: number;\n  quotes?: SecondaryQuote[];\n  requestId?: number;\n  requestType?: 'BWIC' | 'OWIC';\n  revision?: number;\n  settlementTimestamp?: string;\n  status?: 'OPEN' | 'PENDING' | 'FILLED' | 'CANCELED' | 'EXPIRED';\n  tlementTimestamp?: string;\n  updatedByUserId?: string;\n  updatedTimestamp?: string;\n  userAccount?: number;\n};\nexport type OptionalString = {\n  empty?: boolean;\n  present?: boolean;\n};\nexport type SearchCriteria = {\n  key?: string;\n  operation?:\n    | 'IN'\n    | 'EQ'\n    | 'LT'\n    | 'LTE'\n    | 'GT'\n    | 'GTE'\n    | 'BETWEEN'\n    | 'IN_BETWEEN'\n    | 'CONTAINS'\n    | 'MULTIPLE_CONTAINS'\n    | 'ELEM_MATCH'\n    | 'ELEM_MATCH_IN';\n  value?: object;\n};\nexport type SearchOptions = {\n  junctionOperation?: OptionalString;\n  projectionFields?: string[];\n  searchCriteriaList?: SearchCriteria[];\n};\nexport const {\n  useGetCompaniesUsingGetQuery,\n  useGetCountriesUsingGetQuery,\n  useGetDataPermissionsUsingGetQuery,\n  useCreateOrderUsingPostMutation,\n  useGetOrdersByUserIdUsingGetQuery,\n  useGetOrderUsingGetQuery,\n  useFillOrderUsingPutMutation,\n  useRejectOrderUsingPutMutation,\n  useCreateQuoteUsingPostMutation,\n  useExpireQuoteUsingPatchMutation,\n  useUpdateQuotePriceAndGoodUntilTimeUsingPutMutation,\n  useGetAllRequestForQuotesUsingGetQuery,\n  useUpdateRequestForQuoteUsingPutMutation,\n  useCreateMultipleRequestForQuotesUsingPostMutation,\n  useGetRequestForQuotesFromTodayUsingGetQuery,\n  useGetRequestForQuoteByIdUsingGetQuery,\n  useCancelRequestForQuoteByRequestIdUsingPostMutation,\n  useGetProductsByIdentifierUsingGetQuery,\n  useGetProductsUsingGetQuery,\n  useGetProductsBySearchCriteriaUsingPostMutation,\n  useGetProductsBySearchUsingPostMutation,\n  useExpireSecondaryRecordsUsingPatchMutation,\n} = injectedRtkApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}