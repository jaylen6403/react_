{"ast":null,"code":"import { baseApi as api } from './productServiceBaseApi';\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: build => ({\n    getCacheNamesUsingGet: build.query({\n      query: queryArg => ({\n        url: `/caches`,\n        params: {\n          details: queryArg.details\n        }\n      })\n    }),\n    clearAllCachesUsingDelete: build.mutation({\n      query: () => ({\n        url: `/caches`,\n        method: 'DELETE'\n      })\n    }),\n    getCacheEntriesUsingGet: build.query({\n      query: queryArg => ({\n        url: `/caches/entries`,\n        params: {\n          cacheName: queryArg.cacheName,\n          details: queryArg.details,\n          key: queryArg.key\n        }\n      })\n    }),\n    getCacheKeysUsingGet: build.query({\n      query: queryArg => ({\n        url: `/caches/keys`,\n        params: {\n          cacheName: queryArg.cacheName,\n          details: queryArg.details,\n          key: queryArg.key\n        }\n      })\n    }),\n    getCusipsAndInterestedUsersUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/cusipsandinterestedusers`,\n        method: 'POST',\n        body: queryArg.body,\n        params: {\n          productManager: queryArg.productManager\n        }\n      })\n    }),\n    getTradeDeskListUsingGet1: build.query({\n      query: () => ({\n        url: `/desk`\n      })\n    }),\n    getAllDeskUsersForTradeDeskUsingGet: build.query({\n      query: queryArg => ({\n        url: `/desk/${queryArg.tradeDeskId}/user`\n      })\n    }),\n    getProductForEditUsingGet: build.query({\n      query: queryArg => ({\n        url: `/editable-products/${queryArg.productIdentifier}`\n      })\n    }),\n    getHeatMapProductsBySourceTypeUsingGet: build.query({\n      query: queryArg => ({\n        url: `/heatmap/products`,\n        params: {\n          source: queryArg.source,\n          type: queryArg['type']\n        }\n      })\n    }),\n    getLatestRangeMinMaxBySourceUsingGet: build.query({\n      query: queryArg => ({\n        url: `/heatmap/raterange`,\n        params: {\n          source: queryArg.source\n        }\n      })\n    }),\n    getTradeDeskListUsingGet: build.query({\n      query: () => ({\n        url: `/marketplace/product/tradeDesk/program`\n      })\n    }),\n    checkIfUserCompletedTrainingUsingGet: build.query({\n      query: () => ({\n        url: `/marketplace/product/training/completed/user`\n      })\n    }),\n    setVisibilityUsingPut: build.mutation({\n      query: queryArg => ({\n        url: `/marketplace/product/visibility/program`,\n        method: 'PUT',\n        body: queryArg.body\n      })\n    }),\n    getSettlementCounterpartyUsingGet: build.query({\n      query: queryArg => ({\n        url: `/marketplace/product/${queryArg.programId}/${queryArg.cusip}`\n      })\n    }),\n    getProductsUsingGet: build.query({\n      query: queryArg => ({\n        url: `/marketplace/product/${queryArg.tradeDeskId}`\n      })\n    }),\n    getPortfolioUsingGet: build.query({\n      query: queryArg => ({\n        url: `/portfolios`,\n        params: {\n          tradeDeskId: queryArg.tradeDeskId\n        }\n      })\n    }),\n    getPortfolioChartDataUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/portfolios/chartdata`,\n        method: 'POST',\n        body: queryArg.body\n      })\n    }),\n    getPortfolioEventsUsingGet1: build.query({\n      query: queryArg => ({\n        url: `/portfolios/events`,\n        params: {\n          enddate: queryArg.enddate,\n          startdate: queryArg.startdate,\n          tradeDeskId: queryArg.tradeDeskId\n        }\n      })\n    }),\n    getPortfolioUnderlierRankUsingGet: build.query({\n      query: () => ({\n        url: `/portfolios/rank`\n      })\n    }),\n    getProductIdentifiersUsingGet: build.query({\n      query: () => ({\n        url: `/product-identifiers`\n      })\n    }),\n    getIssuerAllowsCalcsUsingGet: build.query({\n      query: queryArg => ({\n        url: `/product/allowsCalcs`,\n        params: {\n          cusip: queryArg.cusip\n        }\n      })\n    }),\n    uploadProductDataUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/product/data`,\n        method: 'POST',\n        body: queryArg.body\n      })\n    }),\n    getProductEventDatesUsingGet1: build.query({\n      query: queryArg => ({\n        url: `/product/eventdates`,\n        params: {\n          enddate: queryArg.enddate,\n          startdate: queryArg.startdate\n        }\n      })\n    }),\n    getHockeystickChartDetailsUsingGet: build.query({\n      query: queryArg => ({\n        url: `/product/hockeystickChartDetails`,\n        params: {\n          cusip: queryArg.cusip\n        }\n      })\n    }),\n    issuersFromProductsUsingGet: build.query({\n      query: () => ({\n        url: `/product/issuers`\n      })\n    }),\n    uploadIssuerProductOrderDataUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/product/order`,\n        method: 'POST',\n        body: queryArg.body,\n        params: {\n          issuer: queryArg.issuer\n        }\n      })\n    }),\n    getStructureTypeDisplayDataUsingGet: build.query({\n      query: queryArg => ({\n        url: `/product/structureTypeDisplayData`,\n        params: {\n          cusip: queryArg.cusip\n        }\n      })\n    }),\n    getProductDetailsUsingGet: build.query({\n      query: queryArg => ({\n        url: `/product/${queryArg.cusip}/details`\n      })\n    }),\n    getProductUsingGet: build.query({\n      query: queryArg => ({\n        url: `/products`,\n        params: {\n          cusip: queryArg.cusip\n        }\n      })\n    }),\n    isinToCusipUsingGet: build.query({\n      query: queryArg => ({\n        url: `/products/cusip`,\n        params: {\n          isins: queryArg.isins\n        }\n      })\n    }),\n    getProductDocumentsUsingGet: build.query({\n      query: queryArg => ({\n        url: `/products/documentLinks`,\n        params: {\n          cusips: queryArg.cusips\n        }\n      })\n    }),\n    getProductInstrumentIdentifiersUsingGet: build.query({\n      query: () => ({\n        url: `/products/instrumentIdentifiers`\n      })\n    }),\n    getProductInstrumentIdentifiersPostUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/products/instrumentIdentifiers`,\n        method: 'POST',\n        body: queryArg.body\n      })\n    }),\n    cusipToIsinUsingGet: build.query({\n      query: queryArg => ({\n        url: `/products/isin`,\n        params: {\n          countryCode: queryArg.countryCode,\n          cusips: queryArg.cusips\n        }\n      })\n    }),\n    getUnCachedProductsUsingGet: build.query({\n      query: queryArg => ({\n        url: `/products/latest`,\n        params: {\n          cusip: queryArg.cusip\n        }\n      })\n    }),\n    getProductOrdersForUserUsingGet: build.query({\n      query: queryArg => ({\n        url: `/products/orders`,\n        params: {\n          cusip: queryArg.cusip\n        }\n      })\n    }),\n    getRepsPerPmPerCusipUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/products/reps`,\n        method: 'POST',\n        body: queryArg.body\n      })\n    }),\n    getCanonicalProductUsingPost: build.mutation({\n      query: queryArg => ({\n        url: `/products/${queryArg.identifier}`,\n        method: 'POST',\n        body: queryArg.body\n      })\n    }),\n    getProductMarkToMarketUsingGet: build.query({\n      query: queryArg => ({\n        url: `/products/${queryArg.productIdentifier}/mark-to-market`\n      })\n    }),\n    getProductMarkToMarketGraphPointsUsingGet: build.query({\n      query: queryArg => ({\n        url: `/products/${queryArg.productIdentifier}/mark-to-market/graph`\n      })\n    })\n  }),\n  overrideExisting: false\n});\nexport { injectedRtkApi as productServiceApi };\nexport const {\n  useGetCacheNamesUsingGetQuery,\n  useClearAllCachesUsingDeleteMutation,\n  useGetCacheEntriesUsingGetQuery,\n  useGetCacheKeysUsingGetQuery,\n  useGetCusipsAndInterestedUsersUsingPostMutation,\n  useGetTradeDeskListUsingGet1Query,\n  useGetAllDeskUsersForTradeDeskUsingGetQuery,\n  useGetProductForEditUsingGetQuery,\n  useGetHeatMapProductsBySourceTypeUsingGetQuery,\n  useGetLatestRangeMinMaxBySourceUsingGetQuery,\n  useGetTradeDeskListUsingGetQuery,\n  useCheckIfUserCompletedTrainingUsingGetQuery,\n  useSetVisibilityUsingPutMutation,\n  useGetSettlementCounterpartyUsingGetQuery,\n  useGetProductsUsingGetQuery,\n  useGetPortfolioUsingGetQuery,\n  useGetPortfolioChartDataUsingPostMutation,\n  useGetPortfolioEventsUsingGet1Query,\n  useGetPortfolioUnderlierRankUsingGetQuery,\n  useGetProductIdentifiersUsingGetQuery,\n  useGetIssuerAllowsCalcsUsingGetQuery,\n  useUploadProductDataUsingPostMutation,\n  useGetProductEventDatesUsingGet1Query,\n  useGetHockeystickChartDetailsUsingGetQuery,\n  useIssuersFromProductsUsingGetQuery,\n  useUploadIssuerProductOrderDataUsingPostMutation,\n  useGetStructureTypeDisplayDataUsingGetQuery,\n  useGetProductDetailsUsingGetQuery,\n  useGetProductUsingGetQuery,\n  useIsinToCusipUsingGetQuery,\n  useGetProductDocumentsUsingGetQuery,\n  useGetProductInstrumentIdentifiersUsingGetQuery,\n  useGetProductInstrumentIdentifiersPostUsingPostMutation,\n  useCusipToIsinUsingGetQuery,\n  useGetUnCachedProductsUsingGetQuery,\n  useGetProductOrdersForUserUsingGetQuery,\n  useGetRepsPerPmPerCusipUsingPostMutation,\n  useGetCanonicalProductUsingPostMutation,\n  useGetProductMarkToMarketUsingGetQuery,\n  useGetProductMarkToMarketGraphPointsUsingGetQuery\n} = injectedRtkApi;","map":{"version":3,"names":["baseApi","api","injectedRtkApi","injectEndpoints","endpoints","build","getCacheNamesUsingGet","query","queryArg","url","params","details","clearAllCachesUsingDelete","mutation","method","getCacheEntriesUsingGet","cacheName","key","getCacheKeysUsingGet","getCusipsAndInterestedUsersUsingPost","body","productManager","getTradeDeskListUsingGet1","getAllDeskUsersForTradeDeskUsingGet","tradeDeskId","getProductForEditUsingGet","productIdentifier","getHeatMapProductsBySourceTypeUsingGet","source","type","getLatestRangeMinMaxBySourceUsingGet","getTradeDeskListUsingGet","checkIfUserCompletedTrainingUsingGet","setVisibilityUsingPut","getSettlementCounterpartyUsingGet","programId","cusip","getProductsUsingGet","getPortfolioUsingGet","getPortfolioChartDataUsingPost","getPortfolioEventsUsingGet1","enddate","startdate","getPortfolioUnderlierRankUsingGet","getProductIdentifiersUsingGet","getIssuerAllowsCalcsUsingGet","uploadProductDataUsingPost","getProductEventDatesUsingGet1","getHockeystickChartDetailsUsingGet","issuersFromProductsUsingGet","uploadIssuerProductOrderDataUsingPost","issuer","getStructureTypeDisplayDataUsingGet","getProductDetailsUsingGet","getProductUsingGet","isinToCusipUsingGet","isins","getProductDocumentsUsingGet","cusips","getProductInstrumentIdentifiersUsingGet","getProductInstrumentIdentifiersPostUsingPost","cusipToIsinUsingGet","countryCode","getUnCachedProductsUsingGet","getProductOrdersForUserUsingGet","getRepsPerPmPerCusipUsingPost","getCanonicalProductUsingPost","identifier","getProductMarkToMarketUsingGet","getProductMarkToMarketGraphPointsUsingGet","overrideExisting","productServiceApi","useGetCacheNamesUsingGetQuery","useClearAllCachesUsingDeleteMutation","useGetCacheEntriesUsingGetQuery","useGetCacheKeysUsingGetQuery","useGetCusipsAndInterestedUsersUsingPostMutation","useGetTradeDeskListUsingGet1Query","useGetAllDeskUsersForTradeDeskUsingGetQuery","useGetProductForEditUsingGetQuery","useGetHeatMapProductsBySourceTypeUsingGetQuery","useGetLatestRangeMinMaxBySourceUsingGetQuery","useGetTradeDeskListUsingGetQuery","useCheckIfUserCompletedTrainingUsingGetQuery","useSetVisibilityUsingPutMutation","useGetSettlementCounterpartyUsingGetQuery","useGetProductsUsingGetQuery","useGetPortfolioUsingGetQuery","useGetPortfolioChartDataUsingPostMutation","useGetPortfolioEventsUsingGet1Query","useGetPortfolioUnderlierRankUsingGetQuery","useGetProductIdentifiersUsingGetQuery","useGetIssuerAllowsCalcsUsingGetQuery","useUploadProductDataUsingPostMutation","useGetProductEventDatesUsingGet1Query","useGetHockeystickChartDetailsUsingGetQuery","useIssuersFromProductsUsingGetQuery","useUploadIssuerProductOrderDataUsingPostMutation","useGetStructureTypeDisplayDataUsingGetQuery","useGetProductDetailsUsingGetQuery","useGetProductUsingGetQuery","useIsinToCusipUsingGetQuery","useGetProductDocumentsUsingGetQuery","useGetProductInstrumentIdentifiersUsingGetQuery","useGetProductInstrumentIdentifiersPostUsingPostMutation","useCusipToIsinUsingGetQuery","useGetUnCachedProductsUsingGetQuery","useGetProductOrdersForUserUsingGetQuery","useGetRepsPerPmPerCusipUsingPostMutation","useGetCanonicalProductUsingPostMutation","useGetProductMarkToMarketUsingGetQuery","useGetProductMarkToMarketGraphPointsUsingGetQuery"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/redux/productService/productServiceEndpoints.ts"],"sourcesContent":["import { baseApi as api } from './productServiceBaseApi';\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: (build) => ({\n    getCacheNamesUsingGet: build.query<\n      GetCacheNamesUsingGetApiResponse,\n      GetCacheNamesUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/caches`,\n        params: { details: queryArg.details },\n      }),\n    }),\n    clearAllCachesUsingDelete: build.mutation<\n      ClearAllCachesUsingDeleteApiResponse,\n      ClearAllCachesUsingDeleteApiArg\n    >({\n      query: () => ({ url: `/caches`, method: 'DELETE' }),\n    }),\n    getCacheEntriesUsingGet: build.query<\n      GetCacheEntriesUsingGetApiResponse,\n      GetCacheEntriesUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/caches/entries`,\n        params: {\n          cacheName: queryArg.cacheName,\n          details: queryArg.details,\n          key: queryArg.key,\n        },\n      }),\n    }),\n    getCacheKeysUsingGet: build.query<\n      GetCacheKeysUsingGetApiResponse,\n      GetCacheKeysUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/caches/keys`,\n        params: {\n          cacheName: queryArg.cacheName,\n          details: queryArg.details,\n          key: queryArg.key,\n        },\n      }),\n    }),\n    getCusipsAndInterestedUsersUsingPost: build.mutation<\n      GetCusipsAndInterestedUsersUsingPostApiResponse,\n      GetCusipsAndInterestedUsersUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/cusipsandinterestedusers`,\n        method: 'POST',\n        body: queryArg.body,\n        params: { productManager: queryArg.productManager },\n      }),\n    }),\n    getTradeDeskListUsingGet1: build.query<\n      GetTradeDeskListUsingGet1ApiResponse,\n      GetTradeDeskListUsingGet1ApiArg\n    >({\n      query: () => ({ url: `/desk` }),\n    }),\n    getAllDeskUsersForTradeDeskUsingGet: build.query<\n      GetAllDeskUsersForTradeDeskUsingGetApiResponse,\n      GetAllDeskUsersForTradeDeskUsingGetApiArg\n    >({\n      query: (queryArg) => ({ url: `/desk/${queryArg.tradeDeskId}/user` }),\n    }),\n    getProductForEditUsingGet: build.query<\n      GetProductForEditUsingGetApiResponse,\n      GetProductForEditUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/editable-products/${queryArg.productIdentifier}`,\n      }),\n    }),\n    getHeatMapProductsBySourceTypeUsingGet: build.query<\n      GetHeatMapProductsBySourceTypeUsingGetApiResponse,\n      GetHeatMapProductsBySourceTypeUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/heatmap/products`,\n        params: { source: queryArg.source, type: queryArg['type'] },\n      }),\n    }),\n    getLatestRangeMinMaxBySourceUsingGet: build.query<\n      GetLatestRangeMinMaxBySourceUsingGetApiResponse,\n      GetLatestRangeMinMaxBySourceUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/heatmap/raterange`,\n        params: { source: queryArg.source },\n      }),\n    }),\n    getTradeDeskListUsingGet: build.query<\n      GetTradeDeskListUsingGetApiResponse,\n      GetTradeDeskListUsingGetApiArg\n    >({\n      query: () => ({ url: `/marketplace/product/tradeDesk/program` }),\n    }),\n    checkIfUserCompletedTrainingUsingGet: build.query<\n      CheckIfUserCompletedTrainingUsingGetApiResponse,\n      CheckIfUserCompletedTrainingUsingGetApiArg\n    >({\n      query: () => ({ url: `/marketplace/product/training/completed/user` }),\n    }),\n    setVisibilityUsingPut: build.mutation<\n      SetVisibilityUsingPutApiResponse,\n      SetVisibilityUsingPutApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/marketplace/product/visibility/program`,\n        method: 'PUT',\n        body: queryArg.body,\n      }),\n    }),\n    getSettlementCounterpartyUsingGet: build.query<\n      GetSettlementCounterpartyUsingGetApiResponse,\n      GetSettlementCounterpartyUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/marketplace/product/${queryArg.programId}/${queryArg.cusip}`,\n      }),\n    }),\n    getProductsUsingGet: build.query<\n      GetProductsUsingGetApiResponse,\n      GetProductsUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/marketplace/product/${queryArg.tradeDeskId}`,\n      }),\n    }),\n    getPortfolioUsingGet: build.query<\n      GetPortfolioUsingGetApiResponse,\n      GetPortfolioUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/portfolios`,\n        params: { tradeDeskId: queryArg.tradeDeskId },\n      }),\n    }),\n    getPortfolioChartDataUsingPost: build.mutation<\n      GetPortfolioChartDataUsingPostApiResponse,\n      GetPortfolioChartDataUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/portfolios/chartdata`,\n        method: 'POST',\n        body: queryArg.body,\n      }),\n    }),\n    getPortfolioEventsUsingGet1: build.query<\n      GetPortfolioEventsUsingGet1ApiResponse,\n      GetPortfolioEventsUsingGet1ApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/portfolios/events`,\n        params: {\n          enddate: queryArg.enddate,\n          startdate: queryArg.startdate,\n          tradeDeskId: queryArg.tradeDeskId,\n        },\n      }),\n    }),\n    getPortfolioUnderlierRankUsingGet: build.query<\n      GetPortfolioUnderlierRankUsingGetApiResponse,\n      GetPortfolioUnderlierRankUsingGetApiArg\n    >({\n      query: () => ({ url: `/portfolios/rank` }),\n    }),\n    getProductIdentifiersUsingGet: build.query<\n      GetProductIdentifiersUsingGetApiResponse,\n      GetProductIdentifiersUsingGetApiArg\n    >({\n      query: () => ({ url: `/product-identifiers` }),\n    }),\n    getIssuerAllowsCalcsUsingGet: build.query<\n      GetIssuerAllowsCalcsUsingGetApiResponse,\n      GetIssuerAllowsCalcsUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/product/allowsCalcs`,\n        params: { cusip: queryArg.cusip },\n      }),\n    }),\n    uploadProductDataUsingPost: build.mutation<\n      UploadProductDataUsingPostApiResponse,\n      UploadProductDataUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/product/data`,\n        method: 'POST',\n        body: queryArg.body,\n      }),\n    }),\n    getProductEventDatesUsingGet1: build.query<\n      GetProductEventDatesUsingGet1ApiResponse,\n      GetProductEventDatesUsingGet1ApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/product/eventdates`,\n        params: { enddate: queryArg.enddate, startdate: queryArg.startdate },\n      }),\n    }),\n    getHockeystickChartDetailsUsingGet: build.query<\n      GetHockeystickChartDetailsUsingGetApiResponse,\n      GetHockeystickChartDetailsUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/product/hockeystickChartDetails`,\n        params: { cusip: queryArg.cusip },\n      }),\n    }),\n    issuersFromProductsUsingGet: build.query<\n      IssuersFromProductsUsingGetApiResponse,\n      IssuersFromProductsUsingGetApiArg\n    >({\n      query: () => ({ url: `/product/issuers` }),\n    }),\n    uploadIssuerProductOrderDataUsingPost: build.mutation<\n      UploadIssuerProductOrderDataUsingPostApiResponse,\n      UploadIssuerProductOrderDataUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/product/order`,\n        method: 'POST',\n        body: queryArg.body,\n        params: { issuer: queryArg.issuer },\n      }),\n    }),\n    getStructureTypeDisplayDataUsingGet: build.query<\n      GetStructureTypeDisplayDataUsingGetApiResponse,\n      GetStructureTypeDisplayDataUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/product/structureTypeDisplayData`,\n        params: { cusip: queryArg.cusip },\n      }),\n    }),\n    getProductDetailsUsingGet: build.query<\n      GetProductDetailsUsingGetApiResponse,\n      GetProductDetailsUsingGetApiArg\n    >({\n      query: (queryArg) => ({ url: `/product/${queryArg.cusip}/details` }),\n    }),\n    getProductUsingGet: build.query<\n      GetProductUsingGetApiResponse,\n      GetProductUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/products`,\n        params: { cusip: queryArg.cusip },\n      }),\n    }),\n    isinToCusipUsingGet: build.query<\n      IsinToCusipUsingGetApiResponse,\n      IsinToCusipUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/products/cusip`,\n        params: { isins: queryArg.isins },\n      }),\n    }),\n    getProductDocumentsUsingGet: build.query<\n      GetProductDocumentsUsingGetApiResponse,\n      GetProductDocumentsUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/products/documentLinks`,\n        params: { cusips: queryArg.cusips },\n      }),\n    }),\n    getProductInstrumentIdentifiersUsingGet: build.query<\n      GetProductInstrumentIdentifiersUsingGetApiResponse,\n      GetProductInstrumentIdentifiersUsingGetApiArg\n    >({\n      query: () => ({ url: `/products/instrumentIdentifiers` }),\n    }),\n    getProductInstrumentIdentifiersPostUsingPost: build.mutation<\n      GetProductInstrumentIdentifiersPostUsingPostApiResponse,\n      GetProductInstrumentIdentifiersPostUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/products/instrumentIdentifiers`,\n        method: 'POST',\n        body: queryArg.body,\n      }),\n    }),\n    cusipToIsinUsingGet: build.query<\n      CusipToIsinUsingGetApiResponse,\n      CusipToIsinUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/products/isin`,\n        params: { countryCode: queryArg.countryCode, cusips: queryArg.cusips },\n      }),\n    }),\n    getUnCachedProductsUsingGet: build.query<\n      GetUnCachedProductsUsingGetApiResponse,\n      GetUnCachedProductsUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/products/latest`,\n        params: { cusip: queryArg.cusip },\n      }),\n    }),\n    getProductOrdersForUserUsingGet: build.query<\n      GetProductOrdersForUserUsingGetApiResponse,\n      GetProductOrdersForUserUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/products/orders`,\n        params: { cusip: queryArg.cusip },\n      }),\n    }),\n    getRepsPerPmPerCusipUsingPost: build.mutation<\n      GetRepsPerPmPerCusipUsingPostApiResponse,\n      GetRepsPerPmPerCusipUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/products/reps`,\n        method: 'POST',\n        body: queryArg.body,\n      }),\n    }),\n    getCanonicalProductUsingPost: build.mutation<\n      GetCanonicalProductUsingPostApiResponse,\n      GetCanonicalProductUsingPostApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/products/${queryArg.identifier}`,\n        method: 'POST',\n        body: queryArg.body,\n      }),\n    }),\n    getProductMarkToMarketUsingGet: build.query<\n      GetProductMarkToMarketUsingGetApiResponse,\n      GetProductMarkToMarketUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/products/${queryArg.productIdentifier}/mark-to-market`,\n      }),\n    }),\n    getProductMarkToMarketGraphPointsUsingGet: build.query<\n      GetProductMarkToMarketGraphPointsUsingGetApiResponse,\n      GetProductMarkToMarketGraphPointsUsingGetApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/products/${queryArg.productIdentifier}/mark-to-market/graph`,\n      }),\n    }),\n  }),\n  overrideExisting: false,\n});\nexport { injectedRtkApi as productServiceApi };\nexport type GetCacheNamesUsingGetApiResponse = /** status 200 OK */ object[];\nexport type GetCacheNamesUsingGetApiArg = {\n  /** details */\n  details?: boolean;\n};\nexport type ClearAllCachesUsingDeleteApiResponse = unknown;\nexport type ClearAllCachesUsingDeleteApiArg = void;\nexport type GetCacheEntriesUsingGetApiResponse =\n  /** status 200 OK */ CacheSupportResults;\nexport type GetCacheEntriesUsingGetApiArg = {\n  /** cacheName */\n  cacheName: string;\n  /** details */\n  details?: boolean;\n  /** key */\n  key?: string[];\n};\nexport type GetCacheKeysUsingGetApiResponse =\n  /** status 200 OK */ CacheSupportResults;\nexport type GetCacheKeysUsingGetApiArg = {\n  /** cacheName */\n  cacheName: string;\n  /** details */\n  details?: boolean;\n  /** key */\n  key?: string[];\n};\nexport type GetCusipsAndInterestedUsersUsingPostApiResponse =\n  /** status 200 OK */\n  | {\n      [key: string]: string[];\n    }\n  | /** status 201 Created */ undefined;\nexport type GetCusipsAndInterestedUsersUsingPostApiArg = {\n  /** productManager */\n  productManager: boolean;\n  /** cusips */\n  body: string[];\n};\nexport type GetTradeDeskListUsingGet1ApiResponse = /** status 200 OK */ Desk[];\nexport type GetTradeDeskListUsingGet1ApiArg = void;\nexport type GetAllDeskUsersForTradeDeskUsingGetApiResponse =\n  /** status 200 OK */ DeskUser[];\nexport type GetAllDeskUsersForTradeDeskUsingGetApiArg = {\n  /** tradeDeskId */\n  tradeDeskId: number;\n};\nexport type GetProductForEditUsingGetApiResponse =\n  /** status 200 OK */ CanonicalProduct;\nexport type GetProductForEditUsingGetApiArg = {\n  /** productIdentifier */\n  productIdentifier: string;\n};\nexport type GetHeatMapProductsBySourceTypeUsingGetApiResponse =\n  /** status 200 OK */ HeatMapGridData[];\nexport type GetHeatMapProductsBySourceTypeUsingGetApiArg = {\n  /** source */\n  source: string;\n  /** type */\n  type: string;\n};\nexport type GetLatestRangeMinMaxBySourceUsingGetApiResponse =\n  /** status 200 OK */ {\n    [key: string]: number;\n  };\nexport type GetLatestRangeMinMaxBySourceUsingGetApiArg = {\n  /** source */\n  source: string;\n};\nexport type GetTradeDeskListUsingGetApiResponse =\n  /** status 200 OK */ TradeDesk[];\nexport type GetTradeDeskListUsingGetApiArg = void;\nexport type CheckIfUserCompletedTrainingUsingGetApiResponse =\n  /** status 200 OK */ boolean;\nexport type CheckIfUserCompletedTrainingUsingGetApiArg = void;\nexport type SetVisibilityUsingPutApiResponse /** status 200 OK */ =\n  | number[]\n  | /** status 201 Created */ undefined;\nexport type SetVisibilityUsingPutApiArg = {\n  /** customProducts */\n  body: CustomProduct[];\n};\nexport type GetSettlementCounterpartyUsingGetApiResponse =\n  /** status 200 OK */ string;\nexport type GetSettlementCounterpartyUsingGetApiArg = {\n  /** cusip */\n  cusip: string;\n  /** programId */\n  programId: number;\n};\nexport type GetProductsUsingGetApiResponse =\n  /** status 200 OK */ MarketplaceProduct[];\nexport type GetProductsUsingGetApiArg = {\n  /** tradeDeskId */\n  tradeDeskId: number;\n};\nexport type GetPortfolioUsingGetApiResponse = /** status 200 OK */ Portfolio[];\nexport type GetPortfolioUsingGetApiArg = {\n  /** tradeDeskId */\n  tradeDeskId?: number;\n};\nexport type GetPortfolioChartDataUsingPostApiResponse /** status 200 OK */ =\n  | {\n      [key: string]: {\n        [key: string]: GraphDataPercentage[];\n      };\n    }\n  | /** status 201 Created */ undefined;\nexport type GetPortfolioChartDataUsingPostApiArg = {\n  /** cusips */\n  body: string[];\n};\nexport type GetPortfolioEventsUsingGet1ApiResponse =\n  /** status 200 OK */ PortfolioEvent[];\nexport type GetPortfolioEventsUsingGet1ApiArg = {\n  /** enddate */\n  enddate: string;\n  /** startdate */\n  startdate: string;\n  /** tradeDeskId */\n  tradeDeskId?: number;\n};\nexport type GetPortfolioUnderlierRankUsingGetApiResponse =\n  /** status 200 OK */ UnderlierRank[];\nexport type GetPortfolioUnderlierRankUsingGetApiArg = void;\nexport type GetProductIdentifiersUsingGetApiResponse =\n  /** status 200 OK */ ProductIdentifier[];\nexport type GetProductIdentifiersUsingGetApiArg = void;\nexport type GetIssuerAllowsCalcsUsingGetApiResponse =\n  /** status 200 OK */ boolean;\nexport type GetIssuerAllowsCalcsUsingGetApiArg = {\n  /** cusip */\n  cusip: string;\n};\nexport type UploadProductDataUsingPostApiResponse /** status 200 OK */ =\n  | string\n  | /** status 201 Created */ undefined;\nexport type UploadProductDataUsingPostApiArg = {\n  body: {\n    file: Blob;\n  };\n};\nexport type GetProductEventDatesUsingGet1ApiResponse =\n  /** status 200 OK */ ProductEventDate[];\nexport type GetProductEventDatesUsingGet1ApiArg = {\n  /** enddate */\n  enddate: string;\n  /** startdate */\n  startdate: string;\n};\nexport type GetHockeystickChartDetailsUsingGetApiResponse =\n  /** status 200 OK */ HockeystickChartDetails;\nexport type GetHockeystickChartDetailsUsingGetApiArg = {\n  /** cusip */\n  cusip: string;\n};\nexport type IssuersFromProductsUsingGetApiResponse =\n  /** status 200 OK */ string[];\nexport type IssuersFromProductsUsingGetApiArg = void;\nexport type UploadIssuerProductOrderDataUsingPostApiResponse =\n  /** status 200 OK */ string | /** status 201 Created */ undefined;\nexport type UploadIssuerProductOrderDataUsingPostApiArg = {\n  /** issuer */\n  issuer: string;\n  body: {\n    file: Blob;\n  };\n};\nexport type GetStructureTypeDisplayDataUsingGetApiResponse =\n  /** status 200 OK */ StructureTypeDisplayData;\nexport type GetStructureTypeDisplayDataUsingGetApiArg = {\n  /** cusip */\n  cusip: string;\n};\nexport type GetProductDetailsUsingGetApiResponse =\n  /** status 200 OK */ ProductDetails;\nexport type GetProductDetailsUsingGetApiArg = {\n  /** cusip */\n  cusip: string;\n};\nexport type GetProductUsingGetApiResponse = /** status 200 OK */ Product[];\nexport type GetProductUsingGetApiArg = {\n  /** cusip */\n  cusip: string;\n};\nexport type IsinToCusipUsingGetApiResponse =\n  /** status 200 OK */ ProductIdentifier[];\nexport type IsinToCusipUsingGetApiArg = {\n  /** isins */\n  isins: string[];\n};\nexport type GetProductDocumentsUsingGetApiResponse =\n  /** status 200 OK */ ProductDocuments[];\nexport type GetProductDocumentsUsingGetApiArg = {\n  /** cusips */\n  cusips: string;\n};\nexport type GetProductInstrumentIdentifiersUsingGetApiResponse =\n  /** status 200 OK */ InstrumentIdentifier[];\nexport type GetProductInstrumentIdentifiersUsingGetApiArg = void;\nexport type GetProductInstrumentIdentifiersPostUsingPostApiResponse =\n  /** status 200 OK */\n  InstrumentIdentifier[] | /** status 201 Created */ undefined;\nexport type GetProductInstrumentIdentifiersPostUsingPostApiArg = {\n  /** uniqueIds */\n  body: string[];\n};\nexport type CusipToIsinUsingGetApiResponse =\n  /** status 200 OK */ ProductIdentifier[];\nexport type CusipToIsinUsingGetApiArg = {\n  /** countryCode */\n  countryCode?: string;\n  /** cusips */\n  cusips: string[];\n};\nexport type GetUnCachedProductsUsingGetApiResponse =\n  /** status 200 OK */ Product[];\nexport type GetUnCachedProductsUsingGetApiArg = {\n  /** cusip */\n  cusip: string[];\n};\nexport type GetProductOrdersForUserUsingGetApiResponse =\n  /** status 200 OK */ ProductOrder[];\nexport type GetProductOrdersForUserUsingGetApiArg = {\n  /** cusip */\n  cusip: string;\n};\nexport type GetRepsPerPmPerCusipUsingPostApiResponse /** status 200 OK */ =\n  | {\n      [key: string]: {\n        [key: string]: string[];\n      };\n    }\n  | /** status 201 Created */ undefined;\nexport type GetRepsPerPmPerCusipUsingPostApiArg = {\n  /** cusips */\n  body: string[];\n};\nexport type GetCanonicalProductUsingPostApiResponse /** status 200 OK */ =\n  | CanonicalProduct[]\n  | /** status 201 Created */ undefined;\nexport type GetCanonicalProductUsingPostApiArg = {\n  /** identifier */\n  identifier: string;\n  /** projectionFields */\n  body: string[];\n};\nexport type GetProductMarkToMarketUsingGetApiResponse =\n  /** status 200 OK */ ProductMarkToMarketData[];\nexport type GetProductMarkToMarketUsingGetApiArg = {\n  /** productIdentifier */\n  productIdentifier: string;\n};\nexport type GetProductMarkToMarketGraphPointsUsingGetApiResponse =\n  /** status 200 OK */ number[][];\nexport type GetProductMarkToMarketGraphPointsUsingGetApiArg = {\n  /** productIdentifier */\n  productIdentifier: string;\n};\nexport type CacheSupportResults = {\n  cacheName?: string;\n  count?: number;\n  results?: object[];\n};\nexport type NotificationSettings = {\n  deskEmailTo?: string;\n  notifyCDFGRM?: boolean;\n  notifyCDFGRMEdit?: boolean;\n  notifyDesk?: boolean;\n  notifyDeskEdit?: boolean;\n  notifyOnTradeApprove?: boolean;\n  notifyRegRep?: boolean;\n  notifyRegRepEdit?: boolean;\n  notifySA?: boolean;\n  notifySAEdit?: boolean;\n  salesAsstEmailTo?: string;\n  secureOrderConfirmationMessage?: string;\n  secureOrderConfirmations?: boolean;\n  secureOrderPassword?: string;\n  secureOrderRecipients?: string;\n};\nexport type Program = {\n  cdMinimumOrderQty?: number;\n  closingTimeFixed?: string;\n  id?: number;\n  legalName?: string;\n  noteMinimumOrderQty?: number;\n  shortName?: string;\n  timeOffSet?: number;\n  tradeDeskId?: number;\n};\nexport type Desk = {\n  active?: boolean;\n  defaultProgram?: number;\n  id?: number;\n  legalName?: string;\n  notificationSettings?: NotificationSettings;\n  productTypes?: string[];\n  programs?: Program[];\n  shortName?: string;\n  specialPricing?: boolean;\n};\nexport type DeskUser = {\n  buyOrdersPermission?: boolean;\n  cdTrainingCompleted?: boolean;\n  cdfgrmEmail?: string;\n  chExportAccess?: boolean;\n  editOrders?: boolean;\n  email?: string;\n  firstName?: string;\n  id?: number;\n  lastName?: string;\n  notesTrainingCompleted?: boolean;\n  productTypes?: string[];\n  programIdList?: number[];\n  programIdsString?: string;\n  regRepNames?: string[];\n  regionalTradeDesk?: number;\n  repId?: string;\n  representativesList?: string[];\n  role?: string;\n  saEmail?: string;\n  username?: string;\n  uuid?: string;\n};\nexport type AccumulationDecumulationDate = {\n  periodEndDate?: string;\n  settlementDate?: string;\n};\nexport type AccumulatorDecumulator = {\n  accumulationDecumulationDateList?: AccumulationDecumulationDate[];\n  leverage?: number;\n  numberOfShares?: number;\n  settlementFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  strike?: number;\n  strikeObservationFixingType?: 'Daily' | 'Continuous' | 'European';\n  strikeObservationFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  totalNumberOfObservationDates?: number;\n};\nexport type OfferingNotification = {\n  dismissed?: boolean;\n  uuid?: string;\n};\nexport type ProceedToOfferingStatus = {\n  createOfferWithIB?: 'InProgress' | 'DataReceived' | 'DocsReceived' | 'Error';\n  createOfferWithOrderingSystem?: 'InProgress' | 'Complete' | 'Error';\n  errors?: {\n    [key: string]: string;\n  };\n  uploadDocstoOrderingSystem?: 'InProgress' | 'Complete' | 'Error';\n  uuid?: string;\n};\nexport type ClientSpecific = {\n  breakpointShares?: number;\n  broadOffering?: 'No' | 'Yes';\n  clientProductId?: string;\n  coreApproval?: 'Core' | 'Non-Core';\n  dealBackup?: string[];\n  dealLead?: string[];\n  firstPaymentDate?: string;\n  interestPeriod?: 'Short' | 'Standard' | 'Long';\n  internalTradingDesk?: string;\n  issuerCreditCode?: string;\n  legalPrintEstimate?: number;\n  legalTeam?: string;\n  locked?: boolean;\n  numBreakpointInvestors?: number;\n  offeringNotification?: OfferingNotification;\n  offeringScope?: 'Broad' | 'Tailored';\n  offshoreEligibility?: 'No' | 'Yes' | 'Offshore Only';\n  proceedToOfferingStatus?: ProceedToOfferingStatus;\n  productCode?: 'ELNP' | 'ELNS' | 'ELNC' | 'ELNE' | 'CORP' | 'CORN';\n  productSymbol?: string;\n  prosRequestId?: string;\n  pvFundingLessFeesPercentage?: number;\n  ramCode?: string;\n  securityId?: string;\n  splitIds?: string[];\n  trader?: string;\n};\nexport type Underlier = {\n  dividendYield?: number;\n  exchangeCode?: string;\n  initialFixing?:\n    | 'End of Day'\n    | 'Open'\n    | 'Intraday'\n    | 'VWAP'\n    | 'Limit'\n    | 'Firm';\n  name?: string;\n  source?: string;\n  symbol?: string;\n  underlierLevel?: number;\n  underlierName?: string;\n  underlierSource: 'Bloomberg' | 'RIC';\n  underlierStrikeDate?: string;\n  underlierSymbol: string;\n  underlierWeight?: number;\n  weight?: number;\n};\nexport type CallSchedule = {\n  callBarrierLevelStepValue?: number;\n  callObservationDate?: string;\n  callPremiumStepValue?: number;\n  callScheduleUnderlierList?: Underlier[];\n  callSettlementDate?: string;\n};\nexport type ProductCall = {\n  callBarrierLevelCurrent?: number;\n  callBarrierLevelFinal?: number;\n  callBarrierLevelHigh?: number;\n  callBarrierLevelLow?: number;\n  callBarrierLevelUnderlierList?: Underlier[];\n  callBarrierStepIncrement?: number;\n  callBasketType?:\n    | 'Equal'\n    | 'Custom'\n    | 'WoF'\n    | 'BoF'\n    | 'Out Performance'\n    | 'Single';\n  callCrossing?: 'Below' | 'At or Below' | 'Above' | 'At or Above';\n  callMemory?: boolean;\n  callObservationDateList?: CallSchedule[];\n  callObservationFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  callPeriodObservationType?: 'Daily' | 'Continuous' | 'European';\n  callPremiumCurrent?: number;\n  callPremiumFinal?: number;\n  callPremiumHigh?: number;\n  callPremiumLow?: number;\n  callPremiumStepIncrement?: number;\n  callType?: 'Issuer' | 'Auto' | 'Autocall Step' | 'Null';\n  expectedMaturity?: string;\n  numberNoCallPeriods?: number;\n  stepType?: 'Up' | 'Down';\n};\nexport type RateBarrierLevel = {\n  rateBarrierLevel?: number;\n  rateBarrierLevelEndDate?: string;\n  rateBarrierLevelStartDate?: string;\n};\nexport type RateCap = {\n  rateCap?: number;\n  rateCapEndDate?: string;\n  rateCapStartDate?: string;\n};\nexport type RateConditionalCoupon = {\n  rateConditionalCoupon?: number;\n  rateConditionalCouponEndDate?: string;\n  rateConditionalCouponStartDate?: string;\n};\nexport type RateMin = {\n  rateMin?: number;\n  rateMinEndDate?: string;\n  rateMinStartDate?: string;\n};\nexport type ProductCln = {\n  cdsName?: string;\n  cdsTenor?: number;\n  creditEvent?: string;\n  debtIsinList?: string[];\n  debtWeightList?: string[];\n  fixedCouponMultiplier?: string;\n  floatInstrument?: string;\n  floatRateFixingOffsetDays?: number;\n  floatRateFixingSchedule?: any[];\n  floatRateFixingTime?: string;\n  interestMultiplierPerYear?: number;\n  rateBarrierLevel?: RateBarrierLevel[];\n  rateBarrierObservationFrequency?: string;\n  rateCap?: RateCap[];\n  rateConditionalCoupon?: RateConditionalCoupon[];\n  rateMin?: RateMin[];\n  ratePaymentType?: string;\n};\nexport type ProductCms = {\n  longTermRateUnderlierSource?: 'Bloomberg' | 'RIC';\n  longTermRateUnderlierSymbol?: string;\n  shortTermRateUnderlierSource?: 'Bloomberg' | 'RIC';\n  shortTermRateUnderlierSymbol?: string;\n};\nexport type ExternalDocumentProvider = {\n  externalDocumentProviderId?: string;\n  legalReview?: 'Yes' | 'No';\n  secLink?: string;\n  taxReview?: 'Yes' | 'No';\n};\nexport type MatchInformation = {\n  matchAccepted?: boolean;\n  matchEligible?: boolean;\n  matchNotional?: number;\n  matchNotionalExternalCP?: number;\n  matchNotionalInternalCP?: number;\n  matchPending?: boolean;\n  matchPercentage?: number;\n  matchRejected?: boolean;\n};\nexport type ClientReoffer = {\n  reofferClientName?: string;\n  reofferClientRateCurrent?: number;\n  reofferClientRateFinal?: number;\n  reofferClientRateHigh?: number;\n  reofferClientRateLow?: number;\n};\nexport type ProductGeneral = {\n  accountType?: 'Advisory' | 'Brokerage';\n  ancillaryFeatures?: (\n    | 'With Lookback Initial'\n    | 'With Lookback Final'\n    | 'With Coupon Memory'\n    | 'With Minimum Return'\n    | 'With Minimum Coupon'\n    | 'With Averaging In'\n    | 'With Averaging Out'\n    | 'With Modified Averaging In'\n    | 'With Modified Averaging Out'\n    | 'With Supplemental'\n    | 'With Knock Out'\n  )[];\n  assetClass?: string;\n  averagingExclusion?: 'High' | 'Low';\n  averagingInDates?: string[];\n  averagingModified?: boolean;\n  averagingOutDates?: string[];\n  basketReturnAdjustment?: number;\n  basketType?:\n    | 'Equal'\n    | 'Custom'\n    | 'WoF'\n    | 'BoF'\n    | 'Out Performance'\n    | 'Single';\n  bidDeadlineTimestamp?: string;\n  businessDayConvention?:\n    | 'Following'\n    | 'Modified Following'\n    | 'Previous'\n    | 'End of Month Following'\n    | 'No Adjustment'\n    | 'Modified Previous'\n    | 'End of Month No Adjustment'\n    | 'End of Month Previous';\n  calculationAgent?: string;\n  completionStatus?: 'Complete' | 'Incomplete' | 'Custom';\n  currency?:\n    | 'USD'\n    | 'EUR'\n    | 'GBP'\n    | 'JPY'\n    | 'RUB'\n    | 'CAD'\n    | 'MXN'\n    | 'CNY'\n    | 'INR'\n    | 'CHF'\n    | 'SEK'\n    | 'ARS'\n    | 'AUD'\n    | 'BRL'\n    | 'CLP'\n    | 'COP'\n    | 'CZK'\n    | 'DKK'\n    | 'HKD'\n    | 'HUF'\n    | 'IDR'\n    | 'ISK'\n    | 'KRW'\n    | 'MYR'\n    | 'NOK'\n    | 'NZD'\n    | 'PEN'\n    | 'PHP'\n    | 'PLN'\n    | 'SGD'\n    | 'THB'\n    | 'TRY'\n    | 'TWD'\n    | 'ZAR';\n  cusip?: string;\n  dateOffset?: number;\n  dayCountFraction?: string;\n  estimatedInitialValue?: number;\n  externalBasketName?: string;\n  externalDocumentProvider?: ExternalDocumentProvider;\n  fairPriceFinal?: number;\n  fdicInsured?: boolean;\n  finalValuationDate?: string;\n  fundingSpread?: number[];\n  fundservID?: string;\n  highWaterMarkDate?: string;\n  indicativeDeadlineTimestamp?: string;\n  isin?: string;\n  issueDate?: string;\n  issuePriceCurrent?: number;\n  issuePriceFinal?: number;\n  issuePriceHigh?: number;\n  issuePriceLow?: number;\n  issuer?: string;\n  longTermCapitalGain?: boolean;\n  lookbackFinalDate?: string;\n  lookbackFinalValuationType?: 'Min' | 'Max';\n  lookbackInitialDate?: string;\n  lookbackInitialValuationType?: 'Min' | 'Max';\n  lumaProductIdentifier?: string;\n  matchInformation?: MatchInformation;\n  maturityDate?: string;\n  minimumTradingLot?: number;\n  offeringType?: 'Private Placement' | 'Public Offering';\n  oisDfPercentage?: number;\n  originator?: string;\n  performanceStrike?: number;\n  productCategory?:\n    | 'Capital Protection'\n    | 'Yield'\n    | 'Participation'\n    | 'Leverage'\n    | 'Credit'\n    | 'OTC';\n  productDeadlineTimestamp?: string;\n  productFaceValue?: number;\n  productLaunchTimestamp?: string;\n  productName?: string;\n  productNoteList?: string[];\n  productNotionalCap?: number;\n  productNotionalCurrent?: number;\n  productNotionalFinal?: number;\n  productNotionalHigh?: number;\n  productNotionalLow?: number;\n  productRiskRanking?: number;\n  productType?:\n    | 'Capital Protection'\n    | 'Capital Protection with Knock Out'\n    | 'Discount Certificate'\n    | 'Barrier Reverse Convertible'\n    | 'Reverse Convertible'\n    | 'Callable Barrier Reverse Convertible'\n    | 'Callable Reverse Convertible'\n    | 'Tracker Certificate'\n    | 'Outperformance Certificate'\n    | 'Bonus Certificate'\n    | 'Twin Win'\n    | 'Warrants'\n    | 'Mini Futures'\n    | 'CLN'\n    | 'Accumulator'\n    | 'Decumulator';\n  registrationType?:\n    | 'Registered Note'\n    | 'Reg S'\n    | '3a2'\n    | 'Private Placement'\n    | 'CD'\n    | 'GIC'\n    | 'PAR'\n    | 'PPN'\n    | 'ML GIC'\n    | 'Exempt Distribution';\n  reofferClientList?: ClientReoffer[];\n  requestId?: string;\n  returnType?: 'Growth' | 'Growth and Income' | 'Income' | 'Digital';\n  riskFreeRate?: string;\n  salesCreditCurrent?: number;\n  salesCreditFinal?: number;\n  salesCreditHigh?: number;\n  salesCreditLow?: number;\n  secondaryMarketQuotingType?: 'Clean' | 'Dirty';\n  settlementType?: 'Cash' | 'Physical';\n  sspaStructureTypeId?: string;\n  sspaStructureTypeName?: string;\n  stage?:\n    | 'Request'\n    | 'Quote'\n    | 'Offer'\n    | 'Refresh Price'\n    | 'Confirm Lock'\n    | 'Execution'\n    | 'Post Trade'\n    | 'Not Traded'\n    | 'Ops Review';\n  standardPrice?: number;\n  status?:\n    | 'Accepting Indications'\n    | 'Book Building Traded Not Settled'\n    | 'Request'\n    | 'Estimated Quote'\n    | 'Indicative Quote'\n    | 'Final Quote'\n    | 'Offer'\n    | 'Confirm Lock'\n    | 'Final Execution'\n    | 'New'\n    | 'Live'\n    | 'Matured'\n    | 'Called'\n    | 'Indicative Quote Received'\n    | 'Open for Orders'\n    | 'Pending Confirmation'\n    | 'Final Notional Confirmed'\n    | 'Pending Final Docs'\n    | 'Cancelled'\n    | 'Offering Expired'\n    | 'Restricted'\n    | 'Traded Not Settled'\n    | 'Accepting Orders'\n    | 'Traded Pending Documentation'\n    | 'Expired'\n    | 'Book Building Traded Pending Documentation'\n    | 'Review Required'\n    | 'Update Product Details';\n  strikeDate?: string;\n  structureFee?: number;\n  structureLongNameExternal?: string;\n  structureLongNameInternal?: string;\n  structureNameExternal?: string;\n  structureNameInternal?: string;\n  structureShortNameExternal?: string;\n  structureShortNameInternal?: string;\n  supplementalPercentage?: number;\n  swapMaturity?: '1mL' | '3mL' | '1m' | '3m' | '6m';\n  tenorCurrent?: number;\n  tenorFinal?: number;\n  tenorHigh?: number;\n  tenorLow?: number;\n  tenorUnit: 'Weeks' | 'Months' | 'Years';\n  totalPnl?: number;\n  tradeDate?: string;\n  underlierList?: Underlier[];\n  upfrontDeferred?: string;\n  wrapperType: 'Note' | 'CD' | 'Market Linked Trust' | 'OTC';\n};\nexport type ProductGrowth = {\n  absoluteReturnBarrierLevelCurrent?: number;\n  absoluteReturnBarrierLevelFinal?: number;\n  absoluteReturnBarrierLevelHigh?: number;\n  absoluteReturnBarrierLevelLow?: number;\n  absoluteReturnBarrierUnderlierList?: Underlier[];\n  absoluteReturnParticipationRateCurrent?: number;\n  absoluteReturnParticipationRateFinal?: number;\n  absoluteReturnParticipationRateHigh?: number;\n  absoluteReturnParticipationRateLow?: number;\n  bearish?: boolean;\n  digitalReturnBarrierCurrent?: number;\n  digitalReturnBarrierFinal?: number;\n  digitalReturnBarrierHigh?: number;\n  digitalReturnBarrierLow?: number;\n  digitalReturnBarrierObservationDateList?: any[];\n  digitalReturnBarrierObservationFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  digitalReturnBarrierUnderlierList?: Underlier[];\n  digitalReturnCurrent?: number;\n  digitalReturnFinal?: number;\n  digitalReturnHigh?: number;\n  digitalReturnLow?: number;\n  growthType?: (\n    | 'Point to Point'\n    | 'Capped Point to Point'\n    | 'ITM Digital'\n    | 'ATM Digital'\n    | 'OTM Digital'\n    | 'Capped ITM Digital'\n    | 'Capped ATM Digital'\n    | 'Capped OTM Digital'\n    | 'Uncapped ITM Digital'\n    | 'Uncapped ATM Digital'\n    | 'Uncapped OTM Digital'\n    | 'Dual Directional'\n    | 'Capped Dual Directional'\n    | 'Digital Dual Directional'\n    | 'Uncapped Digital Dual Directional'\n    | 'Capped Digital Dual Directional'\n    | 'Snowball'\n    | 'Cliquet'\n    | 'Hybrid Credit Linked Point to Point'\n    | 'Capped Hybrid Credit Linked Point to Point'\n  )[];\n  knockOutBarrierCurrent?: number;\n  knockOutBarrierFinal?: number;\n  knockOutBarrierHigh?: number;\n  knockOutBarrierLow?: number;\n  knockOutRebateCurrent?: number;\n  knockOutRebateFinal?: number;\n  knockOutRebateHigh?: number;\n  knockOutRebateLow?: number;\n  lowerCallStrikeCurrent?: number;\n  lowerCallStrikeFinal?: number;\n  lowerCallStrikeHigh?: number;\n  lowerCallStrikeLow?: number;\n  lowerCallStrikeUnderlierList?: Underlier[];\n  lowerPutStrike?: number;\n  maximumReturnCurrent?: number;\n  maximumReturnFinal?: number;\n  maximumReturnHigh?: number;\n  maximumReturnLow?: number;\n  minimumReturnCurrent?: number;\n  minimumReturnFinal?: number;\n  minimumReturnHigh?: number;\n  minimumReturnLow?: number;\n  underlierReturnCapLevelCurrent?: number;\n  underlierReturnCapLevelFinal?: number;\n  underlierReturnCapLevelHigh?: number;\n  underlierReturnCapLevelLow?: number;\n  upsideAboveDigitalReturn?: boolean;\n  upsideBasketType?:\n    | 'Equal'\n    | 'Custom'\n    | 'WoF'\n    | 'BoF'\n    | 'Out Performance'\n    | 'Single';\n  upsideParticipationAboveDigitalReturnCurrent?: number;\n  upsideParticipationAboveDigitalReturnFinal?: number;\n  upsideParticipationAboveDigitalReturnHigh?: number;\n  upsideParticipationAboveDigitalReturnLow?: number;\n  upsideParticipationRateCurrent?: number;\n  upsideParticipationRateFinal?: number;\n  upsideParticipationRateHigh?: number;\n  upsideParticipationRateLow?: number;\n  upsideParticipationUnderlierList?: Underlier[];\n};\nexport type ProductProtection = {\n  KIbarrierCrossing?: 'Below' | 'At or Below' | 'Above' | 'At or Above';\n  capitalProtectionLevelCurrent?: number;\n  capitalProtectionLevelFinal?: number;\n  capitalProtectionLevelHigh?: number;\n  capitalProtectionLevelLow?: number;\n  downsideBasketType?:\n    | 'Equal'\n    | 'Custom'\n    | 'WoF'\n    | 'BoF'\n    | 'Out Performance'\n    | 'Single';\n  downsideType?:\n    | 'Buffer'\n    | 'Barrier'\n    | 'Full'\n    | 'Partial'\n    | 'Bearish'\n    | 'No Principal Protection'\n    | 'Airbag'\n    | 'Geared Barrier'\n    | 'Geared Buffer';\n  finalFixingCrossing?: 'Below' | 'At or Below' | 'Above' | 'At or Above';\n  oneStarLevel?: number;\n  oneStarType?:\n    | 'Equal'\n    | 'Custom'\n    | 'WoF'\n    | 'BoF'\n    | 'Out Performance'\n    | 'Single';\n  principalBarrierLevelCurrent?: number;\n  principalBarrierLevelFinal?: number;\n  principalBarrierLevelHigh?: number;\n  principalBarrierLevelLow?: number;\n  principalBarrierLevelUnderlierList?: Underlier[];\n  principalBufferLevelCurrent?: number;\n  principalBufferLevelFinal?: number;\n  principalBufferLevelHigh?: number;\n  principalBufferLevelLow?: number;\n  principalBufferLevelUnderlierList?: Underlier[];\n  protectionLevel?: number;\n  putLeverageCurrent?: number;\n  putLeverageFinal?: number;\n  putLeverageHigh?: number;\n  putLeverageLow?: number;\n  putObservationDateList?: string[];\n  putObservationFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  putStrikeCurrent?: number;\n  putStrikeFinal?: number;\n  putStrikeHigh?: number;\n  putStrikeLow?: number;\n  putStrikeUnderlierList?: Underlier[];\n  putType?: 'Down and In' | 'Vanilla';\n};\nexport type SupportingDocumentation = {\n  documentLanguage?: ('EN' | 'FR' | 'ES' | 'DE' | 'IT')[];\n  documentationType?:\n    | 'KID'\n    | 'Fact Sheets'\n    | 'Target Market'\n    | 'Cost & Charges'\n    | 'Termsheet'\n    | 'Final Terms'\n    | 'Prelim Draft'\n    | 'Template Prospectus Supplement'\n    | 'Prelim Distributable'\n    | 'Preliminary Prospectus Supplement'\n    | 'Final Distributable'\n    | 'Final Draft'\n    | 'Indicative Term Sheet'\n    | 'Miscellaneous'\n    | 'Summary Sheet Draft'\n    | 'Summary Sheet Distributable'\n    | 'Swiss Simplified Prospectus';\n};\nexport type ProductRegulatory = {\n  countryDistribution?: (\n    | 'Canada'\n    | 'Switzerland'\n    | 'Germany'\n    | 'Italy'\n    | 'France'\n    | 'Spain'\n    | 'Portugal'\n    | 'United Kingdom'\n    | 'Netherlands'\n    | 'Belgium'\n    | 'Luxembourg'\n    | 'Austria'\n    | 'Ireland'\n    | 'Sweden'\n    | 'Finland'\n    | 'Norway'\n    | 'Denmark'\n    | 'Israel'\n    | 'UAE'\n    | 'South Africa'\n    | 'USA'\n    | 'Mexico'\n    | 'Panama'\n    | 'Colombia'\n    | 'Peru'\n    | 'Chile'\n    | 'Uruguay'\n    | 'Argentina'\n    | 'Paraguay'\n    | 'Puerto Rico'\n    | 'Ecuador'\n    | 'Hong Kong'\n    | 'Singapore'\n  )[];\n  listing?:\n    | 'None'\n    | 'SIX'\n    | 'BX Swiss'\n    | 'FWB'\n    | 'GETTEX'\n    | 'SWB'\n    | 'Euronext France'\n    | 'Euronext NL'\n    | 'Euronext Lisbon'\n    | 'Euronext Brussels'\n    | 'BVME'\n    | 'LuxSE'\n    | 'BME'\n    | 'LSE'\n    | 'WBAG';\n  supportingDocumentation?: SupportingDocumentation[];\n  targetMarket?:\n    | 'Retail'\n    | 'Professional Counterparties'\n    | 'Eligible Counterparties';\n};\nexport type ProductScenarios = {\n  scenarioOne?: string;\n  scenarioTwo?: string;\n};\nexport type LeverageFactor = {\n  leverageFactor?: number;\n  leverageFactorEndDate?: string;\n  leverageFactorStartDate?: string;\n};\nexport type PaymentSchedule = {\n  bifurcationOfInterest?: boolean;\n  interest?: number;\n  optionPremium?: number;\n  paymentBarrierLevel?: number;\n  paymentObservationDate?: string;\n  paymentRate?: number;\n  paymentResetDate?: string;\n  paymentSettlementDate?: string;\n};\nexport type ProductYield = {\n  bifurcationOfInterest?: boolean;\n  cashPoolKnockInLevel?: string;\n  cashPoolKnockInVolume?: string;\n  couponBarrierCrossingType?: 'Above' | 'At Or Above';\n  couponBasketType?: 'Equal' | 'Custom' | 'WoF' | 'BoF' | 'Out Performance';\n  equityPool?: number;\n  floatSpread?: number;\n  interest?: number;\n  leverageFactors?: LeverageFactor[];\n  minCouponPayPeriod?:\n    | 'Annually'\n    | 'Bi-Monthly'\n    | 'Monthly'\n    | 'Quarterly'\n    | 'At Maturity'\n    | 'Semi-Annually';\n  minPaymentRatePerAnnumCurrent?: number;\n  minPaymentRatePerAnnumFinal?: number;\n  minPaymentRatePerAnnumHigh?: number;\n  minPaymentRatePerAnnumLow?: number;\n  minPaymentRatePerPeriodCurrent?: number;\n  minPaymentRatePerPeriodFinal?: number;\n  minPaymentRatePerPeriodHigh?: number;\n  minPaymentRatePerPeriodLow?: number;\n  optionPremium?: number;\n  paymentBarrierCurrent?: number;\n  paymentBarrierFinal?: number;\n  paymentBarrierHigh?: number;\n  paymentBarrierLow?: number;\n  paymentBarrierObservationFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  paymentBarrierUnderlierList?: Underlier[];\n  paymentDateList?: PaymentSchedule[];\n  paymentEvaluationFrequencyCurrent?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  paymentEvaluationFrequencyFinal?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  paymentFrequency?:\n    | 'Continuous'\n    | 'Daily'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'Monthly'\n    | 'Bi-Monthly'\n    | 'Quarterly'\n    | 'Semi-Annually'\n    | 'Annually'\n    | 'European'\n    | 'European Continuous'\n    | 'At Maturity'\n    | 'On Final Valuation Date'\n    | 'On Final Observation'\n    | 'Custom';\n  paymentMemory?: boolean;\n  paymentRatePerAnnumCurrent?: number;\n  paymentRatePerAnnumFinal?: number;\n  paymentRatePerAnnumHigh?: number;\n  paymentRatePerAnnumLow?: number;\n  paymentRatePerPeriodCurrent?: number;\n  paymentRatePerPeriodFinal?: number;\n  paymentRatePerPeriodHigh?: number;\n  paymentRatePerPeriodLow?: number;\n  paymentType?:\n    | 'Fixed'\n    | 'Contingent'\n    | 'Range Accrual'\n    | 'Annual Averaging'\n    | 'All Up'\n    | 'Resetting Annual Averaging'\n    | 'AutoCap'\n    | 'Rate Builder'\n    | 'Fixed To Floating'\n    | 'Time Series'\n    | 'Fixed to Reset'\n    | 'Variable Interest Credit Linked'\n    | 'Fixed Interest Credit Linked'\n    | 'Rate Linked'\n    | 'Credit Linked'\n    | 'Stock Basket'\n    | 'Resetting Time Series'\n    | 'Cliquet'\n    | 'Fixed To Contingent'\n    | 'Builder'\n    | 'Leveraged Builder';\n  paymentTypeChangeDate?: string;\n  rateBuilderGrouping?: string[];\n  rateBuilderReturns?: string[];\n  rateBuilderValuesCurrent?: number[];\n  rateBuilderValuesFinal?: number[];\n  rateBuilderValuesHigh?: number[];\n  rateBuilderValuesLow?: number[];\n  stockReturnCapCurrent?: string;\n  stockReturnCapFinal?: string;\n  stockReturnCapHigh?: string;\n  stockReturnCapLow?: string;\n  stockReturnCapUnderlierList?: Underlier[];\n  stockReturnFloorCurrent?: string;\n  stockReturnFloorFinal?: string;\n  stockReturnFloorHigh?: string;\n  stockReturnFloorLow?: string;\n  stockReturnFloorUnderlierList?: Underlier[];\n  triggerParticipationRate?: number;\n  upperBarrierLevelCurrent?: number;\n  upperBarrierLevelFinal?: number;\n  upperBarrierLevelHigh?: number;\n  upperBarrierLevelLow?: number;\n  variablePayFinalObservationDate?: string;\n  variablePayInitialObservationDate?: string;\n  yieldBasketType?:\n    | 'Equal'\n    | 'Custom'\n    | 'WoF'\n    | 'BoF'\n    | 'Out Performance'\n    | 'Single';\n  yieldCrossing?: 'Below' | 'At or Below' | 'Above' | 'At or Above';\n};\nexport type ProductQuote = {\n  clientReferenceId?: string;\n  counterpartyFundingType?: 'Upfront' | 'Deferred';\n  counterpartyFundingValue?: number;\n  createDateTimestamp?: string;\n  createdByUserId?: string;\n  createdByUsername?: string;\n  creationHubQuoteId?: string;\n  current?: number;\n  errorMessages?: string[];\n  estimatedInitialValue?: number;\n  estimatedLife?: number;\n  estimatedLifeUnit?: 'Weeks' | 'Months' | 'Years';\n  expirationTimestamp?: string;\n  high?: number;\n  issuerReferenceId?: string;\n  low?: number;\n  message?: string[];\n  messages?: string[];\n  notional?: number;\n  numberOfShares?: number;\n  quoteId?: string;\n  quoteProvider: string;\n  requestId: string;\n  requestType?: 'Indicative' | 'Firm';\n  revision?: number;\n  sensitivity?: number;\n  solveFor?:\n    | 'Tenor'\n    | 'Product Notional'\n    | 'Reoffer Client Rate'\n    | 'Payment Evaluation Frequency'\n    | 'Payment Rate Per Period'\n    | 'Payment Rate Per Annum'\n    | 'Min Payment Rate Per Annum'\n    | 'Min Payment Rate Per Period'\n    | 'Stock Return Floor'\n    | 'Rate Builder Values'\n    | 'Call Level List'\n    | 'Call Premium Level List'\n    | 'Put Strike'\n    | 'Principal Barrier Level'\n    | 'Digital Return'\n    | 'Upside Participation Rate'\n    | 'Lower Call Strike'\n    | 'Underlier Return Cap Level'\n    | 'Digital Return Percentage'\n    | 'Digital Return Barrier'\n    | 'Upside Participation Above Digital Return'\n    | 'Absolute Return Barrier Level'\n    | 'Downside Participation Rate'\n    | 'Maximum Return'\n    | 'Payment Barrier'\n    | 'Stock Return Cap'\n    | 'Sales Credit'\n    | 'Absolute Return Participation Rate'\n    | 'Call Barrier Level'\n    | 'Principal Buffer Level'\n    | 'Upper Barrier Level'\n    | 'Knock Out Rebate'\n    | 'Knock Out Barrier'\n    | 'Issue Price'\n    | 'Capital Protection Level'\n    | 'Put Leverage'\n    | 'Accumulator Decumulator Strike';\n  status?:\n    | 'Invalid'\n    | 'Quote Received'\n    | 'Quote Expired'\n    | 'Quote Rejected'\n    | 'Quote Cancelled'\n    | 'Traded Away'\n    | 'Quote Accepted'\n    | 'Request for Approval'\n    | 'Request for Approval (Client)';\n  underlierLevel?: number;\n  updatedByUserId?: string;\n  updatedTimestamp?: string;\n};\nexport type CanonicalProduct = {\n  accumulatorDecumulator?: AccumulatorDecumulator;\n  clientSpecific?: ClientSpecific;\n  createTimestamp?: string;\n  createdByUserId?: string;\n  id?: string;\n  previousStage?:\n    | 'Request'\n    | 'Quote'\n    | 'Offer'\n    | 'Refresh Price'\n    | 'Confirm Lock'\n    | 'Execution'\n    | 'Post Trade'\n    | 'Not Traded'\n    | 'Ops Review';\n  previousStatus?:\n    | 'Accepting Indications'\n    | 'Book Building Traded Not Settled'\n    | 'Request'\n    | 'Estimated Quote'\n    | 'Indicative Quote'\n    | 'Final Quote'\n    | 'Offer'\n    | 'Confirm Lock'\n    | 'Final Execution'\n    | 'New'\n    | 'Live'\n    | 'Matured'\n    | 'Called'\n    | 'Indicative Quote Received'\n    | 'Open for Orders'\n    | 'Pending Confirmation'\n    | 'Final Notional Confirmed'\n    | 'Pending Final Docs'\n    | 'Cancelled'\n    | 'Offering Expired'\n    | 'Restricted'\n    | 'Traded Not Settled'\n    | 'Accepting Orders'\n    | 'Traded Pending Documentation'\n    | 'Expired'\n    | 'Book Building Traded Pending Documentation'\n    | 'Review Required'\n    | 'Update Product Details';\n  productCall: ProductCall;\n  productCln?: ProductCln;\n  productCms?: ProductCms;\n  productGeneral: ProductGeneral;\n  productGrowth: ProductGrowth;\n  productId?: string;\n  productProtection: ProductProtection;\n  productRegulatory?: ProductRegulatory;\n  productScenarios?: ProductScenarios;\n  productYield: ProductYield;\n  programs?: string[];\n  quotes?: {\n    [key: string]: ProductQuote;\n  };\n  revision?: number;\n  updateTimestamp?: string;\n  updatedByUserId?: string;\n  version?: number;\n};\nexport type HeatMapGridData = {\n  cioRanking?: string;\n  companyName?: string;\n  currencyCode?: string;\n  dataFlag?: {\n    [key: string]: boolean;\n  };\n  errorMessage?: {\n    [key: string]: string;\n  };\n  exchangeCode?: string;\n  region?: string;\n  researchRating?: string;\n  ric?: string;\n  sector?: string;\n  source?: string;\n  structure?: string;\n  tenorId?: {\n    [key: string]: number;\n  };\n  tenors?: {\n    [key: string]: number;\n  };\n  ticker?: string;\n  trigger?: number;\n  type?: string;\n};\nexport type TradeDesk = {\n  defaultProgramId?: number;\n  id?: number;\n  legalName?: string;\n  productTypes?: string[];\n  programs?: Program[];\n  shortName?: string;\n};\nexport type CustomProduct = {\n  cusip?: string;\n  programId?: number;\n  settlementCounterparty?: string;\n  visibility?: boolean;\n};\nexport type LocalTime = {\n  hour?: number;\n  minute?: number;\n  nano?: number;\n  second?: number;\n};\nexport type DocumentDetails = {\n  documentName?: string;\n  documentType?: string;\n  documentUrl?: string;\n};\nexport type MarketplaceProduct = {\n  accountType?: string;\n  annualMaxReturn?: string;\n  annualMinGuarentee?: string;\n  annualizedCapRange?: string;\n  assetClass?: string;\n  autoCap?: string;\n  callPremium?: string;\n  callValue?: string;\n  capFrequency?: string;\n  capRange?: string;\n  closingTimeFixed?: LocalTime;\n  completionStatus?: string;\n  couponBarrier?: string;\n  cusip?: string;\n  deskDeadlineDate?: string;\n  deskDeadlineTime?: LocalTime;\n  documentLinks?: DocumentDetails[];\n  fixingType?: string;\n  floor?: string;\n  freqMinPay?: string;\n  isBuyClosed?: boolean;\n  isBuyEnabled?: boolean;\n  issuer?: string;\n  maturityDate?: string;\n  maxReturn?: string;\n  minGuarantee?: string;\n  noCallPeriod?: string;\n  participationRate?: string;\n  paymentFrequency?: string;\n  pricingDate?: string;\n  principalBarrier?: string;\n  principalBarrierObserved?: string;\n  principalBuffer?: string;\n  principalProtection?: string;\n  productName?: string;\n  productStatus?: 'Live' | 'Matured' | 'Called' | 'Expired' | '';\n  productSymbol?: string;\n  productType?: string;\n  program?: Program;\n  redemptionType?: string;\n  registrationType?: string;\n  repDeadlineDate?: string;\n  repDeadlineTime?: LocalTime;\n  repPrice?: string;\n  returnType?: string;\n  salesConcession?: string;\n  settlementCounterparty?: string;\n  settlementDate?: string;\n  strikeDate?: string;\n  structureNameExternal?: string;\n  structureType?: string;\n  taxTreatment?: string;\n  term?: number;\n  timeOffset?: number;\n  tradeDate?: string;\n  underliers?: Underlier[];\n  underlyers?: string;\n  underlyingTickers?: string;\n  visibility?: boolean;\n};\nexport type GraphDataPercentage = {\n  key?: string;\n  percentage?: number;\n};\nexport type PortfolioOrder = {\n  accountNumber?: string;\n  orderId?: string;\n  orderKey?: number;\n  quantity?: number;\n  representativeName?: string;\n};\nexport type PortfolioProduct = {\n  accountNumber?: string;\n  activeUnderlier?: string;\n  assetClass?: string;\n  assetClassNotBlank?: string;\n  bidPrice?: number;\n  completionStatus?: string;\n  couponPaymentDate?: string;\n  currency?: string;\n  cusip?: string;\n  documentLinks?: DocumentDetails[];\n  fixingType?: string;\n  issuer?: string;\n  markToMarket?: number;\n  markToMarketDate?: string;\n  markToMarketSource?: string;\n  maturityDate?: string;\n  nextCallDate?: string;\n  nextObservationDate?: string;\n  nextObservationType?: 'C' | 'M';\n  notionalUnwound?: boolean;\n  orderId?: string;\n  orderKey?: number;\n  orders?: PortfolioOrder[];\n  paymentFrequency?: string;\n  principalBarrierObserved?: string;\n  productName?: string;\n  productStatus?: 'Live' | 'Matured' | 'Called' | 'Expired' | '';\n  productSymbol?: string;\n  productType?: string;\n  protectionLevel?: number;\n  protectionType?: string;\n  qualitativeDistanceToBarrier?: 'ABOVE' | 'BELOW' | 'WITHIN';\n  quantitativeDistanceToBarrier?: number;\n  quantity?: number;\n  redemptionType?: string;\n  representativeName?: string;\n  returnType?: string;\n  settlementDate?: string;\n  strikeDate?: string;\n  structureNameExternal?: string;\n  structureType?: string;\n  term?: number;\n  tradeDate?: string;\n  underliers?: Underlier[];\n};\nexport type Portfolio = {\n  portfolioChartingBy?: {\n    [key: string]: {\n      [key: string]: GraphDataPercentage[];\n    };\n  };\n  portfolioName?: string;\n  portfolioProducts?: PortfolioProduct[];\n};\nexport type PortfolioEvent = {\n  barrierBufferLabel?: string;\n  barrierBufferValue?: number;\n  callType?: string;\n  completionStatus?: string;\n  currencyCode?: string;\n  cusip?: string;\n  date?: string;\n  eventFutureInfo?: string;\n  eventPastInfo?: string;\n  eventProximity?: string;\n  eventType?: string;\n  issuer?: string;\n  issuerLogo?: string;\n  notional?: number;\n  productStatus?: 'Live' | 'Matured' | 'Called' | 'Expired' | '';\n  productSymbol?: string;\n  qualitativeProximity?: string;\n  settlementDate?: string;\n  type?:\n    | 'Payment Date'\n    | 'Valuation Date'\n    | 'Maturity Date'\n    | 'Final Valuation Date'\n    | 'Pricing Date'\n    | 'Settlement Date'\n    | 'Call Date'\n    | 'Call Review Date'\n    | 'Trade Date';\n  underlierList?: Underlier[];\n};\nexport type UnderlierRank = {\n  name?: string;\n  notionalPercentage?: number;\n  productCount?: number;\n  productOrderCount?: number;\n  ticker?: string;\n};\nexport type ProductIdentifier = {\n  cusip?: string;\n  isin?: string;\n  preferredIdentifier?: string;\n};\nexport type PortfolioEventV2 = {\n  eventDate?: string;\n  eventType?: string;\n};\nexport type LifecycleProduct = {\n  activeUnderlier?: string;\n  assetClass?: string;\n  currency?: string;\n  documents?: {\n    [key: string]: string;\n  };\n  issuer?: string;\n  markToMarket?: number;\n  nextEvent?: PortfolioEventV2;\n  notional?: number;\n  principalProximity?: string;\n  productIdentifier?: string;\n  productStatus?: 'LIVE' | 'MATURED' | 'CALLED' | 'EXPIRED' | '';\n  returnType?: string;\n  structureType?: string;\n  timeToMaturity?: string;\n  totalHoldings?: number;\n  underlierList?: Underlier[];\n};\nexport type CallProximity = {\n  calculatedValue?: number;\n  dangerZone?: number;\n  dateOfObservation?: string;\n  daysFromStrike?: number;\n  daysUntilEvent?: number;\n  displayValue?: number;\n  message?: string;\n  providedValue?: number;\n};\nexport type EventProximity = {\n  calculatedValue?: number;\n  dangerZone?: number;\n  dateOfObservation?: string;\n  displayValue?: number;\n  message?: string;\n  providedValue?: number;\n};\nexport type Product = {\n  assetClass?: string;\n  completionStatus?: string;\n  cusip?: string;\n  documentLinks?: DocumentDetails[];\n  fixingType?: string;\n  issuer?: string;\n  maturityDate?: string;\n  paymentFrequency?: string;\n  principalBarrierObserved?: string;\n  productName?: string;\n  productStatus?: 'Live' | 'Matured' | 'Called' | 'Expired' | '';\n  productSymbol?: string;\n  productType?: string;\n  redemptionType?: string;\n  returnType?: string;\n  settlementDate?: string;\n  strikeDate?: string;\n  structureNameExternal?: string;\n  structureType?: string;\n  term?: number;\n  tradeDate?: string;\n  underliers?: Underlier[];\n};\nexport type ProductEventDate = {\n  barrierBufferLabel?: string;\n  barrierBufferValue?: number;\n  callProximity?: CallProximity;\n  callType?: string;\n  cusip?: string;\n  date?: string;\n  daysUntil?: string;\n  description?: string;\n  eventFutureInfo?: string;\n  eventPastInfo?: string;\n  eventProximity?: EventProximity;\n  eventType?: string;\n  isPast?: boolean;\n  product?: Product;\n  timeUntilMessage?: string;\n  type?:\n    | 'Payment Date'\n    | 'Valuation Date'\n    | 'Maturity Date'\n    | 'Final Valuation Date'\n    | 'Pricing Date'\n    | 'Settlement Date'\n    | 'Call Date'\n    | 'Call Review Date'\n    | 'Trade Date';\n};\nexport type HockeystickChartDetails = {\n  chartTitle?: string;\n  currentPerformancePlotPoint?: number[][];\n  fallbackImageUri?: string;\n  hockeystickPlotPoints?: number[][];\n};\nexport type StructureTypeDisplayData = {\n  _id?: string;\n  heroImages?: {\n    [key: string]: string;\n  };\n  staticGraphImages?: {\n    [key: string]: string;\n  };\n  structureTypeDescriptions?: {\n    [key: string]: string;\n  };\n  structureTypeName?: string;\n};\nexport type CalculationDate = {\n  date?: string;\n  level?: number;\n  type?: string;\n};\nexport type ProductMarketData = {\n  issuer?: string;\n  lastModified?: string;\n  lastPrice?: number;\n  midPrice?: number;\n  primaryActivity?: number;\n  refinitivExtractId?: string;\n  secondaryActivity?: number;\n  tradeDate?: string;\n  type?: 'Cusip' | 'ISIN';\n  uniqueId?: string;\n};\nexport type ProductDetails = {\n  assetClass?: string;\n  barrier?: number;\n  basketType?: string;\n  buffer?: number;\n  calculationAgent?: string;\n  calculationDates?: CalculationDate[];\n  callBarrierLevel?: number;\n  callObservationFrequency?:\n    | 'Daily'\n    | 'Monthly'\n    | 'Quarterly'\n    | 'Annually'\n    | 'At Maturity'\n    | 'Semi-Annually'\n    | 'Bi-Monthly'\n    | 'Continuous'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'European'\n    | 'On Final Valuation Date'\n    | 'Custom';\n  callType?: 'Issuer' | 'Auto' | 'Autocall Step';\n  completionStatus?: string;\n  countryDistribution?: string;\n  couponBarrier?: number;\n  couponMemory?: boolean;\n  couponObservationFrequency?:\n    | 'Daily'\n    | 'Monthly'\n    | 'Quarterly'\n    | 'Annually'\n    | 'Semi-Annually'\n    | 'At Maturity'\n    | 'Bi-Monthly'\n    | 'Continuous'\n    | 'Weekly'\n    | 'Bi-Weekly'\n    | 'European'\n    | 'On Final Valuation Date'\n    | 'Custom';\n  couponPercentagePA?: number;\n  couponType?: 'Fixed' | 'Range Accrual' | 'Contingent' | 'AutoCap' | 'All Up';\n  currency?:\n    | 'USD'\n    | 'EUR'\n    | 'GBP'\n    | 'JPY'\n    | 'RUB'\n    | 'CAD'\n    | 'MXN'\n    | 'CNY'\n    | 'INR'\n    | 'CHF'\n    | 'SEK'\n    | 'ARS'\n    | 'AUD'\n    | 'BRL'\n    | 'CLP'\n    | 'COP'\n    | 'CZK'\n    | 'DKK'\n    | 'HKD'\n    | 'HUF'\n    | 'IDR'\n    | 'ISK'\n    | 'KRW'\n    | 'MYR'\n    | 'NOK'\n    | 'NZD'\n    | 'PEN'\n    | 'PHP'\n    | 'PLN'\n    | 'SGD'\n    | 'THB'\n    | 'TRY'\n    | 'TWD'\n    | 'ZAR';\n  cusip?: string;\n  dateMetaData?: {\n    [key: string]: string;\n  };\n  denomination?: number;\n  details?: object;\n  digitalBarrier?: number;\n  digitalReturn?: number;\n  documentLinks?: DocumentDetails[];\n  finalValuationDate?: string;\n  fixingType?: string;\n  issueSize?: number;\n  issuer?: string;\n  listing?: string;\n  markToMarketSource?: string;\n  maturityDate?: string;\n  maximumReturn?: number;\n  minimumReturn?: number;\n  numberNoCallPeriods?: number;\n  offering?: string;\n  participationRate?: number;\n  paymentFrequency?: string;\n  principalBarrierObserved?: string;\n  productDates?: ProductEventDate[];\n  productDatesColumnData?: string[];\n  productMarketData?: ProductMarketData[];\n  productName?: string;\n  productStatus?: 'Live' | 'Matured' | 'Called' | 'Expired' | '';\n  productSymbol?: string;\n  productType?: string;\n  protectionLevel?: number;\n  protectionType?:\n    | 'Full'\n    | 'Barrier'\n    | 'Buffer'\n    | 'PPPN'\n    | 'FULL'\n    | 'BEARISH'\n    | 'NO_PRINCIPAL_PROTECTION'\n    | 'AIRBAG';\n  putLeverage?: number;\n  quoting?: string;\n  redemptionType?: string;\n  returnType?: string;\n  settlementDate?: string;\n  strikeDate?: string;\n  structureNameExternal?: string;\n  structureType?: string;\n  structureTypeName?: string;\n  term?: number;\n  timeToMaturity?: string;\n  tradeDate?: string;\n  underliers?: Underlier[];\n};\nexport type ProductDocuments = {\n  cusip?: string;\n  documents?: {\n    [key: string]: string;\n  };\n};\nexport type InstrumentIdentifier = {\n  issuer?: string;\n  marketDataSource?: string;\n  tradeDate?: string;\n  type?: 'Cusip' | 'Isin';\n  uniqueProductId?: string;\n};\nexport type ProductOrder = {\n  accountNumber?: string;\n  assetClass?: string;\n  cusip?: string;\n  issuer?: string;\n  notionalUnwound?: boolean;\n  orderId?: string;\n  orderKey?: number;\n  quantity?: number;\n  repUserName?: string;\n  representativeName?: string;\n  tradeDeskShortName?: string;\n};\nexport type ProductMarkToMarketData = {\n  primaryActivity?: number;\n  productIdentifier?: string;\n  source?: string;\n  tradeDate?: string;\n};\nexport const {\n  useGetCacheNamesUsingGetQuery,\n  useClearAllCachesUsingDeleteMutation,\n  useGetCacheEntriesUsingGetQuery,\n  useGetCacheKeysUsingGetQuery,\n  useGetCusipsAndInterestedUsersUsingPostMutation,\n  useGetTradeDeskListUsingGet1Query,\n  useGetAllDeskUsersForTradeDeskUsingGetQuery,\n  useGetProductForEditUsingGetQuery,\n  useGetHeatMapProductsBySourceTypeUsingGetQuery,\n  useGetLatestRangeMinMaxBySourceUsingGetQuery,\n  useGetTradeDeskListUsingGetQuery,\n  useCheckIfUserCompletedTrainingUsingGetQuery,\n  useSetVisibilityUsingPutMutation,\n  useGetSettlementCounterpartyUsingGetQuery,\n  useGetProductsUsingGetQuery,\n  useGetPortfolioUsingGetQuery,\n  useGetPortfolioChartDataUsingPostMutation,\n  useGetPortfolioEventsUsingGet1Query,\n  useGetPortfolioUnderlierRankUsingGetQuery,\n  useGetProductIdentifiersUsingGetQuery,\n  useGetIssuerAllowsCalcsUsingGetQuery,\n  useUploadProductDataUsingPostMutation,\n  useGetProductEventDatesUsingGet1Query,\n  useGetHockeystickChartDetailsUsingGetQuery,\n  useIssuersFromProductsUsingGetQuery,\n  useUploadIssuerProductOrderDataUsingPostMutation,\n  useGetStructureTypeDisplayDataUsingGetQuery,\n  useGetProductDetailsUsingGetQuery,\n  useGetProductUsingGetQuery,\n  useIsinToCusipUsingGetQuery,\n  useGetProductDocumentsUsingGetQuery,\n  useGetProductInstrumentIdentifiersUsingGetQuery,\n  useGetProductInstrumentIdentifiersPostUsingPostMutation,\n  useCusipToIsinUsingGetQuery,\n  useGetUnCachedProductsUsingGetQuery,\n  useGetProductOrdersForUserUsingGetQuery,\n  useGetRepsPerPmPerCusipUsingPostMutation,\n  useGetCanonicalProductUsingPostMutation,\n  useGetProductMarkToMarketUsingGetQuery,\n  useGetProductMarkToMarketGraphPointsUsingGetQuery,\n} = injectedRtkApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}