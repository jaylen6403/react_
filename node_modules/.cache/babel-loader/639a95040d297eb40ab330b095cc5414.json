{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventDetail/EventEmail/EventEmail.tsx\",\n    _s = $RefreshSig$();\n\nimport Mustache from 'mustache';\nimport { EmailContainer, EmailDetails, EmailPreviewWrapper } from './EventEmail.style';\nimport { Spinner } from '@luma-fe-workspace/luma/dashboard';\nimport { useGetEmailByTemplateKeyAndCompanyKeyUsingGetQuery } from '@luma-fe-workspace/redux';\nimport { useMemo } from 'react';\nimport { getTemplateValues } from '../../../utils/emailUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventEmail = ({\n  companyKey,\n  eventData,\n  payout: _payout = '0',\n  templateKey\n}) => {\n  _s();\n\n  var _emailData$html;\n\n  const {\n    isLoading: emailIsLoading,\n    data: emailData\n  } = useGetEmailByTemplateKeyAndCompanyKeyUsingGetQuery({\n    companyKey,\n    templateKey\n  });\n  const emailTemplateValues = useMemo(() => getTemplateValues(eventData, _payout), [eventData, _payout]);\n  const view = Mustache.render((_emailData$html = emailData == null ? void 0 : emailData.html) != null ? _emailData$html : '', emailTemplateValues);\n  return /*#__PURE__*/_jsxDEV(EmailContainer, {\n    children: !emailIsLoading && emailData ? /*#__PURE__*/_jsxDEV(EmailDetails, {\n      children: /*#__PURE__*/_jsxDEV(EmailPreviewWrapper, {\n        dangerouslySetInnerHTML: {\n          __html: view\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EventEmail, \"3VJaVgNevth803TM9bpzVXobC5E=\", false, function () {\n  return [useGetEmailByTemplateKeyAndCompanyKeyUsingGetQuery];\n});\n\n_c = EventEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventEmail\");","map":{"version":3,"names":["Mustache","EmailContainer","EmailDetails","EmailPreviewWrapper","Spinner","useGetEmailByTemplateKeyAndCompanyKeyUsingGetQuery","useMemo","getTemplateValues","EventEmail","companyKey","eventData","payout","templateKey","isLoading","emailIsLoading","data","emailData","emailTemplateValues","view","render","html","__html"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventDetail/EventEmail/EventEmail.tsx"],"sourcesContent":["import Mustache from 'mustache';\nimport {\n  EmailContainer,\n  EmailDetails,\n  EmailPreviewWrapper,\n} from './EventEmail.style';\n\nimport { Spinner } from '@luma-fe-workspace/luma/dashboard';\nimport {\n  EventProductData,\n  useGetEmailByTemplateKeyAndCompanyKeyUsingGetQuery,\n} from '@luma-fe-workspace/redux';\nimport { useMemo } from 'react';\nimport { getTemplateValues } from '../../../utils/emailUtils';\n\ninterface Props {\n  companyKey: string;\n  eventData: EventProductData;\n  payout: string;\n  templateKey: string;\n}\n\nexport const EventEmail = ({\n  companyKey,\n  eventData,\n  payout = '0',\n  templateKey,\n}: Props) => {\n  const { isLoading: emailIsLoading, data: emailData } =\n    useGetEmailByTemplateKeyAndCompanyKeyUsingGetQuery({\n      companyKey,\n      templateKey,\n    });\n\n  const emailTemplateValues: { [key: string]: string | undefined } = useMemo(\n    () => getTemplateValues(eventData, payout),\n    [eventData, payout]\n  );\n\n  const view = Mustache.render(emailData?.html ?? '', emailTemplateValues);\n\n  return (\n    <EmailContainer>\n      {!emailIsLoading && emailData ? (\n        <EmailDetails>\n          <EmailPreviewWrapper dangerouslySetInnerHTML={{ __html: view }} />\n        </EmailDetails>\n      ) : (\n        <Spinner />\n      )}\n    </EmailContainer>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,mBAHF,QAIO,oBAJP;AAMA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAEEC,kDAFF,QAGO,0BAHP;AAIA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,iBAAT,QAAkC,2BAAlC;;AASA,OAAO,MAAMC,UAAU,GAAG,CAAC;EACzBC,UADyB;EAEzBC,SAFyB;EAGzBC,MAAM,EAANA,OAAM,GAAG,GAHgB;EAIzBC;AAJyB,CAAD,KAKb;EAAA;;EAAA;;EACX,MAAM;IAAEC,SAAS,EAAEC,cAAb;IAA6BC,IAAI,EAAEC;EAAnC,IACJX,kDAAkD,CAAC;IACjDI,UADiD;IAEjDG;EAFiD,CAAD,CADpD;EAMA,MAAMK,mBAA0D,GAAGX,OAAO,CACxE,MAAMC,iBAAiB,CAACG,SAAD,EAAYC,OAAZ,CADiD,EAExE,CAACD,SAAD,EAAYC,OAAZ,CAFwE,CAA1E;EAKA,MAAMO,IAAI,GAAGlB,QAAQ,CAACmB,MAAT,oBAAgBH,SAAhB,oBAAgBA,SAAS,CAAEI,IAA3B,8BAAmC,EAAnC,EAAuCH,mBAAvC,CAAb;EAEA,oBACE,QAAC,cAAD;IAAA,UACG,CAACH,cAAD,IAAmBE,SAAnB,gBACC,QAAC,YAAD;MAAA,uBACE,QAAC,mBAAD;QAAqB,uBAAuB,EAAE;UAAEK,MAAM,EAAEH;QAAV;MAA9C;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADD,gBAKC,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA;EANJ;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA9BM;;GAAMV,U;UAOTH,kD;;;KAPSG,U"},"metadata":{},"sourceType":"module"}