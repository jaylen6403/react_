{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { authApi } from '../authService/slice';\nimport { logout, refreshTokenSuccess } from './actions';\nexport const initialState = {\n  accessToken: null,\n  refreshToken: null,\n  firstName: null,\n  lastName: null,\n  permissions: null,\n  scope: null,\n  fullName: null,\n  company: null,\n  tokenType: null,\n  local: null,\n  expires_in: null,\n  uuid: null\n};\n\nconst mapAuthResponseToState = (state, action) => {\n  const {\n    payload\n  } = action;\n  state.accessToken = payload.access_token;\n  state.refreshToken = payload.refresh_token;\n  state.firstName = payload.firstName;\n  state.lastName = payload.lastName;\n  state.permissions = payload.permissions;\n  state.scope = payload.scope;\n  state.fullName = payload.name;\n  state.company = payload.company;\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(refreshTokenSuccess, mapAuthResponseToState);\n    builder.addCase(logout.fulfilled, state => {\n      return initialState;\n    });\n    builder.addMatcher(authApi.endpoints.login.matchFulfilled, mapAuthResponseToState);\n    builder.addMatcher(authApi.endpoints.validateToken.matchFulfilled, mapAuthResponseToState);\n  }\n});","map":{"version":3,"names":["createSlice","authApi","logout","refreshTokenSuccess","initialState","accessToken","refreshToken","firstName","lastName","permissions","scope","fullName","company","tokenType","local","expires_in","uuid","mapAuthResponseToState","state","action","payload","access_token","refresh_token","name","authSlice","reducers","extraReducers","builder","addCase","fulfilled","addMatcher","endpoints","login","matchFulfilled","validateToken"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/redux/auth/slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport type { WritableDraft } from 'immer/dist/internal';\nimport { authApi, AuthResponse } from '../authService/slice';\nimport { logout, refreshTokenSuccess } from './actions';\n\ninterface AuthState {\n  accessToken: string | null;\n  refreshToken: string | null;\n  firstName: string | null | undefined;\n  lastName: string | null | undefined;\n  permissions: string[] | null;\n  scope: string[] | null;\n  fullName: string | null;\n  company: string | null | undefined;\n  tokenType: string | null;\n  local: string | null;\n  expires_in: number | null;\n  uuid: string | null;\n}\n\nexport const initialState: AuthState = {\n  accessToken: null,\n  refreshToken: null,\n  firstName: null,\n  lastName: null,\n  permissions: null,\n  scope: null,\n  fullName: null,\n  company: null,\n  tokenType: null,\n  local: null,\n  expires_in: null,\n  uuid: null,\n};\n\nconst mapAuthResponseToState = (\n  state: WritableDraft<AuthState>,\n  action: PayloadAction<AuthResponse>\n) => {\n  const { payload } = action;\n  state.accessToken = payload.access_token;\n  state.refreshToken = payload.refresh_token;\n  state.firstName = payload.firstName;\n  state.lastName = payload.lastName;\n  state.permissions = payload.permissions;\n  state.scope = payload.scope;\n  state.fullName = payload.name;\n  state.company = payload.company;\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(refreshTokenSuccess, mapAuthResponseToState);\n    builder.addCase(logout.fulfilled, (state) => {\n      return initialState;\n    });\n    builder.addMatcher(\n      authApi.endpoints.login.matchFulfilled,\n      mapAuthResponseToState\n    );\n    builder.addMatcher(\n      authApi.endpoints.validateToken.matchFulfilled,\n      mapAuthResponseToState\n    );\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAEA,SAASC,OAAT,QAAsC,sBAAtC;AACA,SAASC,MAAT,EAAiBC,mBAAjB,QAA4C,WAA5C;AAiBA,OAAO,MAAMC,YAAuB,GAAG;EACrCC,WAAW,EAAE,IADwB;EAErCC,YAAY,EAAE,IAFuB;EAGrCC,SAAS,EAAE,IAH0B;EAIrCC,QAAQ,EAAE,IAJ2B;EAKrCC,WAAW,EAAE,IALwB;EAMrCC,KAAK,EAAE,IAN8B;EAOrCC,QAAQ,EAAE,IAP2B;EAQrCC,OAAO,EAAE,IAR4B;EASrCC,SAAS,EAAE,IAT0B;EAUrCC,KAAK,EAAE,IAV8B;EAWrCC,UAAU,EAAE,IAXyB;EAYrCC,IAAI,EAAE;AAZ+B,CAAhC;;AAeP,MAAMC,sBAAsB,GAAG,CAC7BC,KAD6B,EAE7BC,MAF6B,KAG1B;EACH,MAAM;IAAEC;EAAF,IAAcD,MAApB;EACAD,KAAK,CAACb,WAAN,GAAoBe,OAAO,CAACC,YAA5B;EACAH,KAAK,CAACZ,YAAN,GAAqBc,OAAO,CAACE,aAA7B;EACAJ,KAAK,CAACX,SAAN,GAAkBa,OAAO,CAACb,SAA1B;EACAW,KAAK,CAACV,QAAN,GAAiBY,OAAO,CAACZ,QAAzB;EACAU,KAAK,CAACT,WAAN,GAAoBW,OAAO,CAACX,WAA5B;EACAS,KAAK,CAACR,KAAN,GAAcU,OAAO,CAACV,KAAtB;EACAQ,KAAK,CAACP,QAAN,GAAiBS,OAAO,CAACG,IAAzB;EACAL,KAAK,CAACN,OAAN,GAAgBQ,OAAO,CAACR,OAAxB;AACD,CAbD;;AAeA,OAAO,MAAMY,SAAS,GAAGxB,WAAW,CAAC;EACnCuB,IAAI,EAAE,MAD6B;EAEnCnB,YAFmC;EAGnCqB,QAAQ,EAAE,EAHyB;EAInCC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgBzB,mBAAhB,EAAqCc,sBAArC;IACAU,OAAO,CAACC,OAAR,CAAgB1B,MAAM,CAAC2B,SAAvB,EAAmCX,KAAD,IAAW;MAC3C,OAAOd,YAAP;IACD,CAFD;IAGAuB,OAAO,CAACG,UAAR,CACE7B,OAAO,CAAC8B,SAAR,CAAkBC,KAAlB,CAAwBC,cAD1B,EAEEhB,sBAFF;IAIAU,OAAO,CAACG,UAAR,CACE7B,OAAO,CAAC8B,SAAR,CAAkBG,aAAlB,CAAgCD,cADlC,EAEEhB,sBAFF;EAID;AAjBkC,CAAD,CAA7B"},"metadata":{},"sourceType":"module"}