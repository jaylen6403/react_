{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/Modal/Modal.tsx\";\nimport { colors } from '@luma-fe-workspace/design-system';\nimport { StyledReactModal } from './Modal.styles';\nimport ReactModal from 'react-modal';\nimport { generateAriaDescriptors } from './ModalHelpers'; // defaulting to root specifically for storybook/testing\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet root = document.getElementById('portals') || document.getElementById('root');\n\nif (!root) {\n  const modalRoot = document.createElement('div');\n  modalRoot.setAttribute('id', 'portals');\n  document.body.appendChild(modalRoot);\n  root = document.getElementById('portals');\n}\n\nReactModal.setAppElement(root);\nconst overlayStyles = {\n  zIndex: 9999,\n  backgroundColor: `${colors.greyLight75}`,\n  width: '100%',\n  height: '100%',\n  left: '0rem',\n  top: '0rem',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  overflowY: 'auto'\n};\nexport const Modal = ({\n  id,\n  showModal,\n  handleOnClose,\n  children,\n  shouldCloseOnOverlayClick: _shouldCloseOnOverlayClick = true,\n  shouldCloseOnEsc: _shouldCloseOnEsc = true,\n  width\n}) => {\n  const {\n    titleId,\n    contentId\n  } = generateAriaDescriptors(id);\n  return /*#__PURE__*/_jsxDEV(StyledReactModal, {\n    shouldCloseOnOverlayClick: _shouldCloseOnOverlayClick,\n    shouldCloseOnEsc: _shouldCloseOnEsc,\n    id: id,\n    aria: {\n      modal: 'true',\n      labelledby: titleId,\n      describedby: contentId\n    },\n    onRequestClose: handleOnClose,\n    isOpen: showModal,\n    style: {\n      overlay: overlayStyles\n    },\n    width: width,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_c = Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["colors","StyledReactModal","ReactModal","generateAriaDescriptors","root","document","getElementById","modalRoot","createElement","setAttribute","body","appendChild","setAppElement","overlayStyles","zIndex","backgroundColor","greyLight75","width","height","left","top","display","alignItems","justifyContent","overflowY","Modal","id","showModal","handleOnClose","children","shouldCloseOnOverlayClick","shouldCloseOnEsc","titleId","contentId","modal","labelledby","describedby","overlay"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/Modal/Modal.tsx"],"sourcesContent":["import { CSSProperties, ReactNode } from 'react';\nimport { colors } from '@luma-fe-workspace/design-system';\nimport { StyledReactModal } from './Modal.styles';\nimport ReactModal from 'react-modal';\nimport { generateAriaDescriptors } from './ModalHelpers';\n\n// defaulting to root specifically for storybook/testing\nlet root =\n  document.getElementById('portals') || document.getElementById('root');\nif (!root) {\n  const modalRoot = document.createElement('div');\n  modalRoot.setAttribute('id', 'portals');\n  document.body.appendChild(modalRoot);\n  root = document.getElementById('portals') as HTMLElement;\n}\n\nReactModal.setAppElement(root);\nconst overlayStyles: CSSProperties = {\n  zIndex: 9999,\n  backgroundColor: `${colors.greyLight75}`,\n  width: '100%',\n  height: '100%',\n  left: '0rem',\n  top: '0rem',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  overflowY: 'auto',\n};\n\nexport interface ModalProps {\n  /**\n   * id of modal container. Used for accessibility naming scheme\n   */\n  id: string;\n  children: ReactNode;\n  /**\n   * boolean value on whether or not to show the modal\n   */\n  showModal: boolean;\n  /**\n   * function that allows us to pass a bool value to set showModal\n   */\n  handleOnClose: () => void;\n  /**\n   * Allows the modal to be closed by clicking out of the overlay. default = true.\n   */\n  shouldCloseOnOverlayClick?: boolean;\n  /**\n   * Allows the modal to be closed by clicking the ESC key. default = true.\n   */\n  shouldCloseOnEsc?: boolean;\n  width?: string;\n}\n\nexport const Modal = ({\n  id,\n  showModal,\n  handleOnClose,\n  children,\n  shouldCloseOnOverlayClick = true,\n  shouldCloseOnEsc = true,\n  width,\n}: ModalProps) => {\n  const { titleId, contentId } = generateAriaDescriptors(id);\n  return (\n    <StyledReactModal\n      shouldCloseOnOverlayClick={shouldCloseOnOverlayClick}\n      shouldCloseOnEsc={shouldCloseOnEsc}\n      id={id}\n      aria={{\n        modal: 'true',\n        labelledby: titleId,\n        describedby: contentId,\n      }}\n      onRequestClose={handleOnClose}\n      isOpen={showModal}\n      style={{\n        overlay: overlayStyles,\n      }}\n      width={width}\n    >\n      {children}\n    </StyledReactModal>\n  );\n};\n"],"mappings":";AACA,SAASA,MAAT,QAAuB,kCAAvB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,uBAAT,QAAwC,gBAAxC,C,CAEA;;;AACA,IAAIC,IAAI,GACNC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,KAAsCD,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADxC;;AAEA,IAAI,CAACF,IAAL,EAAW;EACT,MAAMG,SAAS,GAAGF,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAlB;EACAD,SAAS,CAACE,YAAV,CAAuB,IAAvB,EAA6B,SAA7B;EACAJ,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BJ,SAA1B;EACAH,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAP;AACD;;AAEDJ,UAAU,CAACU,aAAX,CAAyBR,IAAzB;AACA,MAAMS,aAA4B,GAAG;EACnCC,MAAM,EAAE,IAD2B;EAEnCC,eAAe,EAAG,GAAEf,MAAM,CAACgB,WAAY,EAFJ;EAGnCC,KAAK,EAAE,MAH4B;EAInCC,MAAM,EAAE,MAJ2B;EAKnCC,IAAI,EAAE,MAL6B;EAMnCC,GAAG,EAAE,MAN8B;EAOnCC,OAAO,EAAE,MAP0B;EAQnCC,UAAU,EAAE,QARuB;EASnCC,cAAc,EAAE,QATmB;EAUnCC,SAAS,EAAE;AAVwB,CAArC;AAsCA,OAAO,MAAMC,KAAK,GAAG,CAAC;EACpBC,EADoB;EAEpBC,SAFoB;EAGpBC,aAHoB;EAIpBC,QAJoB;EAKpBC,yBAAyB,EAAzBA,0BAAyB,GAAG,IALR;EAMpBC,gBAAgB,EAAhBA,iBAAgB,GAAG,IANC;EAOpBd;AAPoB,CAAD,KAQH;EAChB,MAAM;IAAEe,OAAF;IAAWC;EAAX,IAAyB9B,uBAAuB,CAACuB,EAAD,CAAtD;EACA,oBACE,QAAC,gBAAD;IACE,yBAAyB,EAAEI,0BAD7B;IAEE,gBAAgB,EAAEC,iBAFpB;IAGE,EAAE,EAAEL,EAHN;IAIE,IAAI,EAAE;MACJQ,KAAK,EAAE,MADH;MAEJC,UAAU,EAAEH,OAFR;MAGJI,WAAW,EAAEH;IAHT,CAJR;IASE,cAAc,EAAEL,aATlB;IAUE,MAAM,EAAED,SAVV;IAWE,KAAK,EAAE;MACLU,OAAO,EAAExB;IADJ,CAXT;IAcE,KAAK,EAAEI,KAdT;IAAA,UAgBGY;EAhBH;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CA9BM;KAAMJ,K"},"metadata":{},"sourceType":"module"}