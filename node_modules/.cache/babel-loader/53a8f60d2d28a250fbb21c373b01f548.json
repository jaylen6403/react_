{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaIcon/LumaIcon.tsx\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { findIconDefinition, icon } from '@fortawesome/fontawesome-svg-core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createConstrainedIdFn() {\n  return value => value;\n}\n\nconst iconTypesDictionary = createConstrainedIdFn()({\n  solid: 'fas',\n  regular: 'far',\n  light: 'fal',\n  duotone: 'fad'\n});\nexport const LumaIcon = ({\n  className,\n  iconCode,\n  type: _type = 'light',\n  style,\n  rotate,\n  onClick\n}) => {\n  const image = findIconDefinition({\n    prefix: iconTypesDictionary[_type],\n    iconName: iconCode\n  });\n  return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    className: className,\n    icon: icon(image),\n    style: style,\n    transform: rotate ? {\n      rotate\n    } : undefined,\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = LumaIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"LumaIcon\");","map":{"version":3,"names":["FontAwesomeIcon","findIconDefinition","icon","createConstrainedIdFn","value","iconTypesDictionary","solid","regular","light","duotone","LumaIcon","className","iconCode","type","style","rotate","onClick","image","prefix","iconName","undefined"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaIcon/LumaIcon.tsx"],"sourcesContent":["import type { CSSProperties, MouseEventHandler } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconName, IconPrefix } from '@fortawesome/fontawesome-svg-core';\nimport { findIconDefinition, icon } from '@fortawesome/fontawesome-svg-core';\nexport type IconCode = IconName;\n\nfunction createConstrainedIdFn<T>(): <Value extends T>(value: Value) => Value {\n  return (value) => value;\n}\n\nconst iconTypesDictionary = createConstrainedIdFn<Record<string, IconPrefix>>()(\n  {\n    solid: 'fas',\n    regular: 'far',\n    light: 'fal',\n    duotone: 'fad',\n  }\n);\n\nexport interface IconProps {\n  /**\n   * Class name for the top level svg element.\n   */\n  className?: string;\n  /**\n   * Icon code corresponding to an SVG.\n   */\n  iconCode: IconCode;\n  /**\n   * Rotate icon in degrees.\n   */\n  rotate?: number;\n  /**\n   * CSS properties.\n   */\n  style?: CSSProperties;\n  /**\n   * Icon visual type.\n   */\n  type?: keyof typeof iconTypesDictionary;\n  /**\n   * Specifies onClick action.\n   */\n  onClick?: MouseEventHandler<SVGSVGElement>;\n}\n\nexport const LumaIcon = ({\n  className,\n  iconCode,\n  type = 'light',\n  style,\n  rotate,\n  onClick,\n}: IconProps) => {\n  const image = findIconDefinition({\n    prefix: iconTypesDictionary[type],\n    iconName: iconCode,\n  });\n\n  return (\n    <FontAwesomeIcon\n      className={className}\n      icon={icon(image)}\n      style={style}\n      transform={rotate ? { rotate } : undefined}\n      onClick={onClick}\n    />\n  );\n};\n"],"mappings":";AACA,SAASA,eAAT,QAAgC,gCAAhC;AAEA,SAASC,kBAAT,EAA6BC,IAA7B,QAAyC,mCAAzC;;;AAGA,SAASC,qBAAT,GAA8E;EAC5E,OAAQC,KAAD,IAAWA,KAAlB;AACD;;AAED,MAAMC,mBAAmB,GAAGF,qBAAqB,GAC/C;EACEG,KAAK,EAAE,KADT;EAEEC,OAAO,EAAE,KAFX;EAGEC,KAAK,EAAE,KAHT;EAIEC,OAAO,EAAE;AAJX,CAD+C,CAAjD;AAoCA,OAAO,MAAMC,QAAQ,GAAG,CAAC;EACvBC,SADuB;EAEvBC,QAFuB;EAGvBC,IAAI,EAAJA,KAAI,GAAG,OAHgB;EAIvBC,KAJuB;EAKvBC,MALuB;EAMvBC;AANuB,CAAD,KAOP;EACf,MAAMC,KAAK,GAAGhB,kBAAkB,CAAC;IAC/BiB,MAAM,EAAEb,mBAAmB,CAACQ,KAAD,CADI;IAE/BM,QAAQ,EAAEP;EAFqB,CAAD,CAAhC;EAKA,oBACE,QAAC,eAAD;IACE,SAAS,EAAED,SADb;IAEE,IAAI,EAAET,IAAI,CAACe,KAAD,CAFZ;IAGE,KAAK,EAAEH,KAHT;IAIE,SAAS,EAAEC,MAAM,GAAG;MAAEA;IAAF,CAAH,GAAgBK,SAJnC;IAKE,OAAO,EAAEJ;EALX;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAtBM;KAAMN,Q"},"metadata":{},"sourceType":"module"}