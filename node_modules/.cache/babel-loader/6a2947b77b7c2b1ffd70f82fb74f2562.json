{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/ConfirmationPopUp/ConfirmationPopUp.tsx\",\n    _s = $RefreshSig$();\n\nimport { Portal } from '@luma-fe-workspace/design-system';\nimport { useCallback, useEffect } from 'react';\nimport { useEventConfirmationOptions, StatusOptions } from '../../utils/hooks/useEventConfirmationOptions';\nimport { ConfirmationWrapper, CloseIconWrapper, CloseIcon, ConfirmationText, StatusText, ProductType, StatusIconWrapper, StatusIcon } from './ConfirmationPopUp.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConfirmationPopUp = ({\n  id,\n  closePopUp: _closePopUp = () => {\n    /* do nothing */\n  },\n  productStructure,\n  successHeader,\n  failureHeader\n}) => {\n  _s();\n\n  const {\n    toastData\n  } = useEventConfirmationOptions();\n  const animateCloseToast = useCallback(() => {\n    /* this function allows for the animation to complete before the toast closes */\n    toastData.setOpen(false);\n    setTimeout(() => _closePopUp(), 300); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [_closePopUp]);\n  useEffect(() => {\n    const timer = setTimeout(() => animateCloseToast(), 3000);\n    return () => clearTimeout(timer); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toastData]);\n  return /*#__PURE__*/_jsxDEV(Portal, {\n    id: id,\n    children: /*#__PURE__*/_jsxDEV(ConfirmationWrapper, {\n      status: toastData.status,\n      onOpen: toastData.open,\n      children: [/*#__PURE__*/_jsxDEV(StatusIconWrapper, {\n        children: /*#__PURE__*/_jsxDEV(StatusIcon, {\n          prefix: \"fas\",\n          iconCode: toastData.status === StatusOptions.Success ? 'circle-check' : 'circle-exclamation'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationText, {\n        children: [/*#__PURE__*/_jsxDEV(StatusText, {\n          children: toastData.status === StatusOptions.Success ? successHeader : failureHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProductType, {\n          children: productStructure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloseIconWrapper, {\n        onClick: () => animateCloseToast(),\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          iconCode: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConfirmationPopUp, \"XSNSgFRco1KBGr8oL/YIIBIDt54=\", false, function () {\n  return [useEventConfirmationOptions];\n});\n\n_c = ConfirmationPopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmationPopUp\");","map":{"version":3,"names":["Portal","useCallback","useEffect","useEventConfirmationOptions","StatusOptions","ConfirmationWrapper","CloseIconWrapper","CloseIcon","ConfirmationText","StatusText","ProductType","StatusIconWrapper","StatusIcon","ConfirmationPopUp","id","closePopUp","productStructure","successHeader","failureHeader","toastData","animateCloseToast","setOpen","setTimeout","timer","clearTimeout","status","open","Success"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/ConfirmationPopUp/ConfirmationPopUp.tsx"],"sourcesContent":["import { Portal } from '@luma-fe-workspace/design-system';\nimport { useCallback, useEffect } from 'react';\nimport {\n  useEventConfirmationOptions,\n  StatusOptions,\n} from '../../utils/hooks/useEventConfirmationOptions';\nimport {\n  ConfirmationWrapper,\n  CloseIconWrapper,\n  CloseIcon,\n  ConfirmationText,\n  StatusText,\n  ProductType,\n  StatusIconWrapper,\n  StatusIcon,\n} from './ConfirmationPopUp.style';\n\ntype ConfirmationProps = {\n  id?: string;\n  closePopUp?: () => void;\n  productStructure: string | undefined;\n  successHeader: string;\n  failureHeader: string;\n};\n\nexport const ConfirmationPopUp = ({\n  id,\n  closePopUp = () => {\n    /* do nothing */\n  },\n  productStructure,\n  successHeader,\n  failureHeader,\n}: ConfirmationProps) => {\n  const { toastData } = useEventConfirmationOptions();\n\n  const animateCloseToast = useCallback(() => {\n    /* this function allows for the animation to complete before the toast closes */\n    toastData.setOpen(false);\n    setTimeout(() => closePopUp(), 300);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [closePopUp]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => animateCloseToast(), 3000);\n    return () => clearTimeout(timer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toastData]);\n\n  return (\n    <Portal id={id}>\n      <ConfirmationWrapper status={toastData.status} onOpen={toastData.open}>\n        <StatusIconWrapper>\n          <StatusIcon\n            prefix=\"fas\"\n            iconCode={\n              toastData.status === StatusOptions.Success\n                ? 'circle-check'\n                : 'circle-exclamation'\n            }\n          />\n        </StatusIconWrapper>\n        <ConfirmationText>\n          <StatusText>\n            {toastData.status === StatusOptions.Success\n              ? successHeader\n              : failureHeader}\n          </StatusText>\n          <ProductType>{productStructure}</ProductType>\n        </ConfirmationText>\n        <CloseIconWrapper onClick={() => animateCloseToast()}>\n          <CloseIcon iconCode=\"close\" />\n        </CloseIconWrapper>\n      </ConfirmationWrapper>\n    </Portal>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,kCAAvB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,SACEC,2BADF,EAEEC,aAFF,QAGO,+CAHP;AAIA,SACEC,mBADF,EAEEC,gBAFF,EAGEC,SAHF,EAIEC,gBAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,iBAPF,EAQEC,UARF,QASO,2BATP;;AAmBA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;EAChCC,EADgC;EAEhCC,UAAU,EAAVA,WAAU,GAAG,MAAM;IACjB;EACD,CAJ+B;EAKhCC,gBALgC;EAMhCC,aANgC;EAOhCC;AAPgC,CAAD,KAQR;EAAA;;EACvB,MAAM;IAAEC;EAAF,IAAgBhB,2BAA2B,EAAjD;EAEA,MAAMiB,iBAAiB,GAAGnB,WAAW,CAAC,MAAM;IAC1C;IACAkB,SAAS,CAACE,OAAV,CAAkB,KAAlB;IACAC,UAAU,CAAC,MAAMP,WAAU,EAAjB,EAAqB,GAArB,CAAV,CAH0C,CAI1C;EACD,CALoC,EAKlC,CAACA,WAAD,CALkC,CAArC;EAOAb,SAAS,CAAC,MAAM;IACd,MAAMqB,KAAK,GAAGD,UAAU,CAAC,MAAMF,iBAAiB,EAAxB,EAA4B,IAA5B,CAAxB;IACA,OAAO,MAAMI,YAAY,CAACD,KAAD,CAAzB,CAFc,CAGd;EACD,CAJQ,EAIN,CAACJ,SAAD,CAJM,CAAT;EAMA,oBACE,QAAC,MAAD;IAAQ,EAAE,EAAEL,EAAZ;IAAA,uBACE,QAAC,mBAAD;MAAqB,MAAM,EAAEK,SAAS,CAACM,MAAvC;MAA+C,MAAM,EAAEN,SAAS,CAACO,IAAjE;MAAA,wBACE,QAAC,iBAAD;QAAA,uBACE,QAAC,UAAD;UACE,MAAM,EAAC,KADT;UAEE,QAAQ,EACNP,SAAS,CAACM,MAAV,KAAqBrB,aAAa,CAACuB,OAAnC,GACI,cADJ,GAEI;QALR;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAWE,QAAC,gBAAD;QAAA,wBACE,QAAC,UAAD;UAAA,UACGR,SAAS,CAACM,MAAV,KAAqBrB,aAAa,CAACuB,OAAnC,GACGV,aADH,GAEGC;QAHN;UAAA;UAAA;UAAA;QAAA,QADF,eAME,QAAC,WAAD;UAAA,UAAcF;QAAd;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF,eAmBE,QAAC,gBAAD;QAAkB,OAAO,EAAE,MAAMI,iBAAiB,EAAlD;QAAA,uBACE,QAAC,SAAD;UAAW,QAAQ,EAAC;QAApB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAnBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD,CAnDM;;GAAMP,iB;UASWV,2B;;;KATXU,iB"},"metadata":{},"sourceType":"module"}