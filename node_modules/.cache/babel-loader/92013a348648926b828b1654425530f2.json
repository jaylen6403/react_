{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/* eslint-disable @typescript-eslint/no-var-requires */\nconst localeCode = getLocaleCode(navigator.language);\n\nconst numbersLocale = require(`cldr-data/main/${localeCode}/numbers.json`);\n\nexport function getLocaleCode(locale) {\n  // some of languages should have codes adjusted to availability of\n  // cldr-data/main resources\n  const fullNameLocales = ['fr-CH'];\n\n  if (fullNameLocales.includes(locale)) {\n    return locale;\n  }\n\n  return locale.slice(0, 2);\n}\nexport function getNumberLocaleData() {\n  return numbersLocale.main[localeCode].numbers['symbols-numberSystem-latn'];\n}","map":{"version":3,"names":["localeCode","getLocaleCode","navigator","language","numbersLocale","require","locale","fullNameLocales","includes","slice","getNumberLocaleData","main","numbers"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/creationhub/src/utils/LocaleUtils.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\nconst localeCode = getLocaleCode(navigator.language);\nconst numbersLocale = require(`cldr-data/main/${localeCode}/numbers.json`);\n\nexport function getLocaleCode(locale: string) {\n  // some of languages should have codes adjusted to availability of\n  // cldr-data/main resources\n  const fullNameLocales = ['fr-CH'];\n  if (fullNameLocales.includes(locale)) {\n    return locale;\n  }\n  return locale.slice(0, 2);\n}\n\nexport function getNumberLocaleData() {\n  return numbersLocale.main[localeCode].numbers['symbols-numberSystem-latn'];\n}\n"],"mappings":";;AAAA;AACA,MAAMA,UAAU,GAAGC,aAAa,CAACC,SAAS,CAACC,QAAX,CAAhC;;AACA,MAAMC,aAAa,GAAGC,OAAO,CAAE,kBAAiBL,UAAW,eAA9B,CAA7B;;AAEA,OAAO,SAASC,aAAT,CAAuBK,MAAvB,EAAuC;EAC5C;EACA;EACA,MAAMC,eAAe,GAAG,CAAC,OAAD,CAAxB;;EACA,IAAIA,eAAe,CAACC,QAAhB,CAAyBF,MAAzB,CAAJ,EAAsC;IACpC,OAAOA,MAAP;EACD;;EACD,OAAOA,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAP;AACD;AAED,OAAO,SAASC,mBAAT,GAA+B;EACpC,OAAON,aAAa,CAACO,IAAd,CAAmBX,UAAnB,EAA+BY,OAA/B,CAAuC,2BAAvC,CAAP;AACD"},"metadata":{},"sourceType":"module"}