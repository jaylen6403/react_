{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/RequiredModal/RequiredModal.tsx\";\nimport { Modal, ActionModalFooter } from '../Modal';\nimport { ModalBody } from '../Modal/Modal.styles';\nimport { RequiredModalHeader } from '../Modal/ModalHeader/RequiredModalHeader/RequiredModalHeader';\nimport { generateAriaDescriptors } from '../Modal/ModalHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RequiredModal = ({\n  id,\n  title,\n  secondaryTitle,\n  children,\n  showModal,\n  rejectAction,\n  acceptAction,\n  onClose,\n  seperator,\n  timer: _timer = -1,\n  shouldCloseOnEsc: _shouldCloseOnEsc = false,\n  shouldCloseOnOverlayClick: _shouldCloseOnOverlayClick = false\n}) => {\n  const {\n    titleId,\n    contentId\n  } = generateAriaDescriptors(id);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    id: id,\n    showModal: showModal,\n    shouldCloseOnEsc: _shouldCloseOnEsc,\n    shouldCloseOnOverlayClick: _shouldCloseOnOverlayClick,\n    handleOnClose: onClose ? onClose : () => null,\n    children: [/*#__PURE__*/_jsxDEV(RequiredModalHeader, {\n      id: titleId,\n      seperatorColor: seperator,\n      title: title,\n      secondaryTitle: secondaryTitle,\n      timer: _timer,\n      reject: rejectAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      id: contentId,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionModalFooter, {\n      canHaveError: false,\n      submit: acceptAction,\n      reject: rejectAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c = RequiredModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequiredModal\");","map":{"version":3,"names":["Modal","ActionModalFooter","ModalBody","RequiredModalHeader","generateAriaDescriptors","RequiredModal","id","title","secondaryTitle","children","showModal","rejectAction","acceptAction","onClose","seperator","timer","shouldCloseOnEsc","shouldCloseOnOverlayClick","titleId","contentId"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/RequiredModal/RequiredModal.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { Modal, ActionModalFooter } from '../Modal';\nimport { ModalBody } from '../Modal/Modal.styles';\nimport { ModalActionProp } from '../Modal/ModalFooter/ActionModalFooter/ActionModalFooter';\nimport { RequiredModalHeader } from '../Modal/ModalHeader/RequiredModalHeader/RequiredModalHeader';\nimport {\n  generateAriaDescriptors,\n  ModalSeperatorColor,\n} from '../Modal/ModalHelpers';\n\ninterface Props {\n  id: string;\n  children: ReactNode;\n  /**\n   * Specify the color of the Modal Header Divider\n   *  buy: buyGreen\n   *  red: sellRed\n   *  none (default): greyFade\n   */\n  seperator: ModalSeperatorColor;\n  showModal: boolean;\n  /**\n   * Reject ModalActionProp that describes the\n   *   Red Cancel Button on the left\n   */\n  rejectAction: ModalActionProp;\n  /**\n   * Accept ModalActionProp that describes the\n   *   Primary Button on the right\n   */\n  acceptAction: ModalActionProp;\n  /**\n   *onClose Function\n\n   */\n  onClose?: () => void;\n  title: string;\n  secondaryTitle?: string;\n  /**\n   * Timer in minutes that if provided gives the user a certain\n   *   amount of time to respond or the onReject function will be called\n   */\n  timer?: number;\n  shouldCloseOnEsc?: boolean;\n  shouldCloseOnOverlayClick?: boolean;\n}\n\nexport const RequiredModal = ({\n  id,\n  title,\n  secondaryTitle,\n  children,\n  showModal,\n  rejectAction,\n  acceptAction,\n  onClose,\n  seperator,\n  timer = -1,\n  shouldCloseOnEsc = false,\n  shouldCloseOnOverlayClick = false,\n}: Props) => {\n  const { titleId, contentId } = generateAriaDescriptors(id);\n  return (\n    <Modal\n      id={id}\n      showModal={showModal}\n      shouldCloseOnEsc={shouldCloseOnEsc}\n      shouldCloseOnOverlayClick={shouldCloseOnOverlayClick}\n      handleOnClose={onClose ? onClose : () => null}\n    >\n      <RequiredModalHeader\n        id={titleId}\n        seperatorColor={seperator}\n        title={title}\n        secondaryTitle={secondaryTitle}\n        timer={timer}\n        reject={rejectAction}\n      />\n      <ModalBody id={contentId}>{children}</ModalBody>\n      <ActionModalFooter\n        canHaveError={false}\n        submit={acceptAction}\n        reject={rejectAction}\n      />\n    </Modal>\n  );\n};\n"],"mappings":";AACA,SAASA,KAAT,EAAgBC,iBAAhB,QAAyC,UAAzC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,SAASC,mBAAT,QAAoC,8DAApC;AACA,SACEC,uBADF,QAGO,uBAHP;;AA0CA,OAAO,MAAMC,aAAa,GAAG,CAAC;EAC5BC,EAD4B;EAE5BC,KAF4B;EAG5BC,cAH4B;EAI5BC,QAJ4B;EAK5BC,SAL4B;EAM5BC,YAN4B;EAO5BC,YAP4B;EAQ5BC,OAR4B;EAS5BC,SAT4B;EAU5BC,KAAK,EAALA,MAAK,GAAG,CAAC,CAVmB;EAW5BC,gBAAgB,EAAhBA,iBAAgB,GAAG,KAXS;EAY5BC,yBAAyB,EAAzBA,0BAAyB,GAAG;AAZA,CAAD,KAahB;EACX,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAyBf,uBAAuB,CAACE,EAAD,CAAtD;EACA,oBACE,QAAC,KAAD;IACE,EAAE,EAAEA,EADN;IAEE,SAAS,EAAEI,SAFb;IAGE,gBAAgB,EAAEM,iBAHpB;IAIE,yBAAyB,EAAEC,0BAJ7B;IAKE,aAAa,EAAEJ,OAAO,GAAGA,OAAH,GAAa,MAAM,IAL3C;IAAA,wBAOE,QAAC,mBAAD;MACE,EAAE,EAAEK,OADN;MAEE,cAAc,EAAEJ,SAFlB;MAGE,KAAK,EAAEP,KAHT;MAIE,cAAc,EAAEC,cAJlB;MAKE,KAAK,EAAEO,MALT;MAME,MAAM,EAAEJ;IANV;MAAA;MAAA;MAAA;IAAA,QAPF,eAeE,QAAC,SAAD;MAAW,EAAE,EAAEQ,SAAf;MAAA,UAA2BV;IAA3B;MAAA;MAAA;MAAA;IAAA,QAfF,eAgBE,QAAC,iBAAD;MACE,YAAY,EAAE,KADhB;MAEE,MAAM,EAAEG,YAFV;MAGE,MAAM,EAAED;IAHV;MAAA;MAAA;MAAA;IAAA,QAhBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CAvCM;KAAMN,a"},"metadata":{},"sourceType":"module"}