{"ast":null,"code":"import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nexport const titleCase = word => {\n  if (word === 'BLOOMBERG') {\n    return 'Bloomberg';\n  }\n\n  return word;\n};\nexport const valueSelector = (physicalSettlementArray, valueType) => physicalSettlementArray == null ? void 0 : physicalSettlementArray.find(physicalSettlement => physicalSettlement.physicalSettlementType === valueType);\nexport const preselectedUnderlier = (securityId, underlierArray) => {\n  if (securityId) {\n    const selectedUnderlier = underlierArray == null ? void 0 : underlierArray.find(underlier => underlier.ticker === securityId);\n    return {\n      display: selectedUnderlier == null ? void 0 : selectedUnderlier.ticker,\n      value: {\n        name: selectedUnderlier == null ? void 0 : selectedUnderlier.ticker,\n        ticker: selectedUnderlier == null ? void 0 : selectedUnderlier.ticker,\n        type: selectedUnderlier == null ? void 0 : selectedUnderlier.type\n      }\n    };\n  } else {\n    return {\n      display: '',\n      value: {\n        name: '',\n        ticker: '',\n        type: undefined\n      }\n    };\n  }\n};\nexport const getCashSettlementValues = formValues => {\n  const settlements = {};\n  settlements.issuerRate = formValues.Issuer !== '' ? Number(formValues.Issuer) : undefined;\n  settlements.rate = formValues.Confirmed !== '' ? Number(formValues.Confirmed) : undefined;\n  settlements.lumaRate = formValues.Luma !== '' ? Number(formValues.Luma) : undefined;\n  return settlements;\n};\nexport const getPhysicalSettlementValues = (formValues, selectedUnderlier, shareValues, cashValues) => [{\n  recordId: (shareValues == null ? void 0 : shareValues.recordId) || undefined,\n  physicalSettlementType: 'Shares',\n  securityId: selectedUnderlier.value.ticker,\n  securityIdType: titleCase(selectedUnderlier.value.type),\n  value: formValues.confirmedShares !== '' ? Number(formValues.confirmedShares) : undefined,\n  issuerValue: formValues.issuerShares !== '' ? Number(formValues.issuerShares) : undefined,\n  lumaValue: formValues.lumaShares !== '' ? Number(formValues.lumaShares) : undefined\n}, {\n  recordId: (cashValues == null ? void 0 : cashValues.recordId) || undefined,\n  physicalSettlementType: 'Cash in Lieu',\n  securityId: (cashValues == null ? void 0 : cashValues.securityId) || undefined,\n  securityIdType: (cashValues == null ? void 0 : cashValues.securityIdType) || undefined,\n  value: formValues.confirmedCash !== '' ? Number(formValues.confirmedCash) : undefined,\n  issuerValue: formValues.issuerCash !== '' ? Number(formValues.issuerCash) : undefined,\n  lumaValue: formValues.lumaCash !== '' ? Number(formValues.lumaCash) : undefined\n}];\nexport const handlePhysicalConfirmationStatus = (modalDataSubmission, formValues, status) => {\n  modalDataSubmission.confirmationStatus = status;\n  const [shareValues, cashValues] = [valueSelector(modalDataSubmission == null ? void 0 : modalDataSubmission.physicalSettlements, 'Shares'), valueSelector(modalDataSubmission == null ? void 0 : modalDataSubmission.physicalSettlements, 'Cash in Lieu')];\n\n  if (formValues != null && formValues.confirmedShares || (formValues.lumaShares || formValues.lumaCash) && (formValues.issuerShares || formValues.issuerCash) && (formValues == null ? void 0 : formValues.lumaShares) === (formValues == null ? void 0 : formValues.issuerShares) && (formValues == null ? void 0 : formValues.lumaCash) === (formValues == null ? void 0 : formValues.issuerCash)) {\n    if (!(formValues != null && formValues.confirmedShares)) {\n      if (shareValues) {\n        shareValues.value = Number(formValues.lumaShares);\n      }\n    }\n\n    if (!(formValues != null && formValues.confirmedCash)) {\n      if (cashValues) {\n        cashValues.value = Number(formValues.lumaCash);\n      }\n    }\n  }\n\n  if (shareValues && cashValues) {\n    modalDataSubmission.physicalSettlements = [shareValues, cashValues];\n  }\n\n  return modalDataSubmission;\n};","map":{"version":3,"names":["titleCase","word","valueSelector","physicalSettlementArray","valueType","find","physicalSettlement","physicalSettlementType","preselectedUnderlier","securityId","underlierArray","selectedUnderlier","underlier","ticker","display","value","name","type","undefined","getCashSettlementValues","formValues","settlements","issuerRate","Issuer","Number","rate","Confirmed","lumaRate","Luma","getPhysicalSettlementValues","shareValues","cashValues","recordId","securityIdType","confirmedShares","issuerValue","issuerShares","lumaValue","lumaShares","confirmedCash","issuerCash","lumaCash","handlePhysicalConfirmationStatus","modalDataSubmission","status","confirmationStatus","physicalSettlements"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/utils/modalUtils.ts"],"sourcesContent":["import { MenuItemSingleType } from '@luma-fe-workspace/design-system';\nimport {\n  CashSettlementRates,\n  EventProductData,\n  PhysicalSettlement,\n  UnderlierRest,\n} from '@luma-fe-workspace/redux';\nimport { Statuses } from '../components/EventConfirmationModal/EventConfirmationModal';\n\ntype DropdownUnderlier = 'BLOOMBERG' | 'RIC';\n\ntype PhysicalSettlementType = 'Shares' | 'Cash in Lieu';\n\ntype SecurityIdType = 'Bloomberg';\n\nexport type Underlier = MenuItemSingleType<UnderlierRest>;\n\nexport interface initialCashValues {\n  Luma: string | number;\n  Issuer: string | number;\n  Confirmed: string | number;\n}\n\nexport interface initialPhysicalValues {\n  lumaShares: string | number;\n  issuerShares: string | number;\n  confirmedShares: string | number;\n  lumaCash: string | number;\n  issuerCash: string | number;\n  confirmedCash: string | number;\n}\n\nexport const titleCase = (word: DropdownUnderlier | undefined) => {\n  if (word === 'BLOOMBERG') {\n    return 'Bloomberg';\n  }\n  return word;\n};\n\nexport const valueSelector = (\n  physicalSettlementArray: PhysicalSettlement[] | undefined,\n  valueType: 'Shares' | 'Cash in Lieu'\n) =>\n  physicalSettlementArray?.find(\n    (physicalSettlement: PhysicalSettlement) =>\n      physicalSettlement.physicalSettlementType === valueType\n  );\n\nexport const preselectedUnderlier = (\n  securityId: string | undefined,\n  underlierArray: UnderlierRest[] | undefined\n) => {\n  if (securityId) {\n    const selectedUnderlier = underlierArray?.find(\n      (underlier: UnderlierRest) => underlier.ticker === securityId\n    );\n    return {\n      display: selectedUnderlier?.ticker,\n      value: {\n        name: selectedUnderlier?.ticker,\n        ticker: selectedUnderlier?.ticker,\n        type: selectedUnderlier?.type,\n      },\n    };\n  } else {\n    return {\n      display: '',\n      value: { name: '', ticker: '', type: undefined },\n    };\n  }\n};\n\nexport const getCashSettlementValues = (formValues: initialCashValues) => {\n  const settlements: CashSettlementRates = {};\n  settlements.issuerRate =\n    formValues.Issuer !== '' ? Number(formValues.Issuer) : undefined;\n  settlements.rate =\n    formValues.Confirmed !== '' ? Number(formValues.Confirmed) : undefined;\n\n  settlements.lumaRate =\n    formValues.Luma !== '' ? Number(formValues.Luma) : undefined;\n  return settlements;\n};\n\nexport const getPhysicalSettlementValues = (\n  formValues: initialPhysicalValues,\n  selectedUnderlier: Underlier,\n  shareValues: PhysicalSettlement | null | undefined,\n  cashValues: PhysicalSettlement | null | undefined\n) => [\n  {\n    recordId: shareValues?.recordId || undefined,\n    physicalSettlementType: 'Shares' as PhysicalSettlementType,\n    securityId: selectedUnderlier.value.ticker,\n    securityIdType: titleCase(selectedUnderlier.value.type) as SecurityIdType,\n    value:\n      formValues.confirmedShares !== ''\n        ? Number(formValues.confirmedShares)\n        : undefined,\n    issuerValue:\n      formValues.issuerShares !== ''\n        ? Number(formValues.issuerShares)\n        : undefined,\n    lumaValue:\n      formValues.lumaShares !== '' ? Number(formValues.lumaShares) : undefined,\n  },\n  {\n    recordId: cashValues?.recordId || undefined,\n    physicalSettlementType: 'Cash in Lieu' as PhysicalSettlementType,\n    securityId: cashValues?.securityId || undefined,\n    securityIdType: cashValues?.securityIdType || undefined,\n    value:\n      formValues.confirmedCash !== ''\n        ? Number(formValues.confirmedCash)\n        : undefined,\n    issuerValue:\n      formValues.issuerCash !== '' ? Number(formValues.issuerCash) : undefined,\n    lumaValue:\n      formValues.lumaCash !== '' ? Number(formValues.lumaCash) : undefined,\n  },\n];\n\nexport const handlePhysicalConfirmationStatus = (\n  modalDataSubmission: EventProductData,\n  formValues: initialPhysicalValues,\n  status: Statuses\n) => {\n  modalDataSubmission.confirmationStatus = status;\n\n  const [shareValues, cashValues] = [\n    valueSelector(modalDataSubmission?.physicalSettlements, 'Shares'),\n    valueSelector(modalDataSubmission?.physicalSettlements, 'Cash in Lieu'),\n  ];\n  if (\n    formValues?.confirmedShares ||\n    ((formValues.lumaShares || formValues.lumaCash) &&\n      (formValues.issuerShares || formValues.issuerCash) &&\n      formValues?.lumaShares === formValues?.issuerShares &&\n      formValues?.lumaCash === formValues?.issuerCash)\n  ) {\n    if (!formValues?.confirmedShares) {\n      if (shareValues) {\n        shareValues.value = Number(formValues.lumaShares);\n      }\n    }\n    if (!formValues?.confirmedCash) {\n      if (cashValues) {\n        cashValues.value = Number(formValues.lumaCash);\n      }\n    }\n  }\n  if (shareValues && cashValues) {\n    modalDataSubmission.physicalSettlements = [shareValues, cashValues];\n  }\n  return modalDataSubmission;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}