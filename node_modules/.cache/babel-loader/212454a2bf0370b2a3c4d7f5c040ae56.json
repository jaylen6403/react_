{"ast":null,"code":"import { baseApi as api } from './currencyServiceBaseApi';\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: build => ({\n    getAllCurrenciesUsingGet: build.query({\n      query: () => ({\n        url: `/currencies`\n      })\n    }),\n    upsertCurrencyUsingPut: build.mutation({\n      query: queryArg => ({\n        url: `/currencies`,\n        method: 'PUT',\n        body: queryArg.currency\n      })\n    }),\n    deleteCurrencyUsingDelete: build.mutation({\n      query: queryArg => ({\n        url: `/currencies/${queryArg.isoCode}`,\n        method: 'DELETE'\n      })\n    })\n  }),\n  overrideExisting: false\n});\nexport { injectedRtkApi as currencyServiceApi };\nexport const {\n  useGetAllCurrenciesUsingGetQuery,\n  useUpsertCurrencyUsingPutMutation,\n  useDeleteCurrencyUsingDeleteMutation\n} = injectedRtkApi;","map":{"version":3,"names":["baseApi","api","injectedRtkApi","injectEndpoints","endpoints","build","getAllCurrenciesUsingGet","query","url","upsertCurrencyUsingPut","mutation","queryArg","method","body","currency","deleteCurrencyUsingDelete","isoCode","overrideExisting","currencyServiceApi","useGetAllCurrenciesUsingGetQuery","useUpsertCurrencyUsingPutMutation","useDeleteCurrencyUsingDeleteMutation"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/redux/currencyService/currencyServiceEndpoints.ts"],"sourcesContent":["import { baseApi as api } from './currencyServiceBaseApi';\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: (build) => ({\n    getAllCurrenciesUsingGet: build.query<\n      GetAllCurrenciesUsingGetApiResponse,\n      GetAllCurrenciesUsingGetApiArg\n    >({\n      query: () => ({ url: `/currencies` }),\n    }),\n    upsertCurrencyUsingPut: build.mutation<\n      UpsertCurrencyUsingPutApiResponse,\n      UpsertCurrencyUsingPutApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/currencies`,\n        method: 'PUT',\n        body: queryArg.currency,\n      }),\n    }),\n    deleteCurrencyUsingDelete: build.mutation<\n      DeleteCurrencyUsingDeleteApiResponse,\n      DeleteCurrencyUsingDeleteApiArg\n    >({\n      query: (queryArg) => ({\n        url: `/currencies/${queryArg.isoCode}`,\n        method: 'DELETE',\n      }),\n    }),\n  }),\n  overrideExisting: false,\n});\nexport { injectedRtkApi as currencyServiceApi };\nexport type GetAllCurrenciesUsingGetApiResponse =\n  /** status 200 OK */ Currency[];\nexport type GetAllCurrenciesUsingGetApiArg = void;\nexport type UpsertCurrencyUsingPutApiResponse /** status 200 OK */ =\n  | Currency\n  | /** status 201 Created */ undefined;\nexport type UpsertCurrencyUsingPutApiArg = {\n  /** currency */\n  currency: Currency;\n};\nexport type DeleteCurrencyUsingDeleteApiResponse = unknown;\nexport type DeleteCurrencyUsingDeleteApiArg = {\n  /** isoCode */\n  isoCode: string;\n};\nexport type ConversionRate = {\n  asOfDatetime?: string;\n  rate: number;\n};\nexport type Currency = {\n  conversionRates?: {\n    [key: string]: ConversionRate;\n  };\n  isoCode: string;\n};\nexport const {\n  useGetAllCurrenciesUsingGetQuery,\n  useUpsertCurrencyUsingPutMutation,\n  useDeleteCurrencyUsingDeleteMutation,\n} = injectedRtkApi;\n"],"mappings":"AAAA,SAASA,OAAO,IAAIC,GAApB,QAA+B,0BAA/B;AACA,MAAMC,cAAc,GAAGD,GAAG,CAACE,eAAJ,CAAoB;EACzCC,SAAS,EAAGC,KAAD,KAAY;IACrBC,wBAAwB,EAAED,KAAK,CAACE,KAAN,CAGxB;MACAA,KAAK,EAAE,OAAO;QAAEC,GAAG,EAAG;MAAR,CAAP;IADP,CAHwB,CADL;IAOrBC,sBAAsB,EAAEJ,KAAK,CAACK,QAAN,CAGtB;MACAH,KAAK,EAAGI,QAAD,KAAe;QACpBH,GAAG,EAAG,aADc;QAEpBI,MAAM,EAAE,KAFY;QAGpBC,IAAI,EAAEF,QAAQ,CAACG;MAHK,CAAf;IADP,CAHsB,CAPH;IAiBrBC,yBAAyB,EAAEV,KAAK,CAACK,QAAN,CAGzB;MACAH,KAAK,EAAGI,QAAD,KAAe;QACpBH,GAAG,EAAG,eAAcG,QAAQ,CAACK,OAAQ,EADjB;QAEpBJ,MAAM,EAAE;MAFY,CAAf;IADP,CAHyB;EAjBN,CAAZ,CAD8B;EA4BzCK,gBAAgB,EAAE;AA5BuB,CAApB,CAAvB;AA8BA,SAASf,cAAc,IAAIgB,kBAA3B;AA0BA,OAAO,MAAM;EACXC,gCADW;EAEXC,iCAFW;EAGXC;AAHW,IAITnB,cAJG"},"metadata":{},"sourceType":"module"}