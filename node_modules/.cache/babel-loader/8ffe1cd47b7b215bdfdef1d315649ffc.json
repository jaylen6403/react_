{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/FilterCheckbox/FilterCheckbox.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { useState, useRef } from 'react';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { StyledFilterCheckbox, FilterCheckboxList, FilterCheckboxListItem, CheckBoxInput, CheckboxContainer, FilterListItem } from './FilterCheckbox.styles';\nimport { Icon } from '@luma-fe-workspace/design-system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilterCheckBox = ({\n  multi,\n  fieldText,\n  defaultOption: _defaultOption = '',\n  options,\n  checkedOptions,\n  setCheckedOptions\n}) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const checkboxRef = useRef(null);\n\n  const handleCheckedItem = event => {\n    const target = event.target;\n    const clickedItem = target.name;\n\n    if (multi) {\n      if (target.checked) {\n        setCheckedOptions([...checkedOptions, clickedItem]);\n      } else {\n        const notCheckedOptions = checkedOptions.filter(option => option !== clickedItem);\n        setCheckedOptions(notCheckedOptions);\n      }\n    } else {\n      if (checkedOptions.includes(clickedItem)) {\n        const notCheckedOptions = checkedOptions.filter(option => option !== clickedItem);\n        setCheckedOptions(notCheckedOptions);\n      } else {\n        setCheckedOptions([clickedItem]);\n      }\n    }\n  };\n\n  useOnClickOutside(checkboxRef, () => setIsOpen(false));\n  return /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n    ref: checkboxRef,\n    children: [/*#__PURE__*/_jsxDEV(StyledFilterCheckbox, {\n      onClick: () => setIsOpen(!isOpen),\n      isOpen: isOpen,\n      selected: !!checkedOptions.length,\n      children: [fieldText, /*#__PURE__*/_jsxDEV(Icon, {\n        iconCode: \"chevron-down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(FilterCheckboxList, {\n      children: [/*#__PURE__*/_jsxDEV(FilterListItem, {\n        onClick: () => setCheckedOptions([]),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [_defaultOption || options[0], checkedOptions.length === 0 && /*#__PURE__*/_jsxDEV(Icon, {\n            iconCode: \"check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), options.map((option, index) => {\n        const checked = checkedOptions.includes(option);\n        return /*#__PURE__*/_jsxDEV(FilterCheckboxListItem, {\n          children: [/*#__PURE__*/_jsxDEV(CheckBoxInput, {\n            id: option,\n            name: option,\n            onChange: handleCheckedItem,\n            checked: checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: option,\n            children: [option, /*#__PURE__*/_jsxDEV(Icon, {\n              iconCode: \"check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, `${option}${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilterCheckBox, \"TFdU71WteT6yyy1qA1xA6c44T+s=\", false, function () {\n  return [useOnClickOutside];\n});\n\n_c = FilterCheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterCheckBox\");","map":{"version":3,"names":["useState","useRef","useOnClickOutside","StyledFilterCheckbox","FilterCheckboxList","FilterCheckboxListItem","CheckBoxInput","CheckboxContainer","FilterListItem","Icon","FilterCheckBox","multi","fieldText","defaultOption","options","checkedOptions","setCheckedOptions","isOpen","setIsOpen","checkboxRef","handleCheckedItem","event","target","clickedItem","name","checked","notCheckedOptions","filter","option","includes","length","map","index"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/FilterCheckbox/FilterCheckbox.tsx"],"sourcesContent":["import { useState, useRef, SyntheticEvent } from 'react';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport {\n  StyledFilterCheckbox,\n  FilterCheckboxList,\n  FilterCheckboxListItem,\n  CheckBoxInput,\n  CheckboxContainer,\n  FilterListItem,\n} from './FilterCheckbox.styles';\nimport { Icon } from '@luma-fe-workspace/design-system';\n\ninterface CheckBoxProps {\n  multi?: boolean;\n  fieldText: string;\n  defaultOption?: string;\n  options: string[];\n  checkedOptions: string[];\n  setCheckedOptions: (options: string[]) => void;\n}\n\nexport const FilterCheckBox = ({\n  multi,\n  fieldText,\n  defaultOption = '',\n  options,\n  checkedOptions,\n  setCheckedOptions,\n}: CheckBoxProps) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const checkboxRef = useRef(null);\n\n  const handleCheckedItem = (event: SyntheticEvent) => {\n    const target = event.target as HTMLInputElement;\n    const clickedItem = target.name;\n\n    if (multi) {\n      if (target.checked) {\n        setCheckedOptions([...checkedOptions, clickedItem]);\n      } else {\n        const notCheckedOptions = checkedOptions.filter(\n          (option: string) => option !== clickedItem\n        );\n        setCheckedOptions(notCheckedOptions);\n      }\n    } else {\n      if (checkedOptions.includes(clickedItem)) {\n        const notCheckedOptions = checkedOptions.filter(\n          (option: string) => option !== clickedItem\n        );\n        setCheckedOptions(notCheckedOptions);\n      } else {\n        setCheckedOptions([clickedItem]);\n      }\n    }\n  };\n\n  useOnClickOutside(checkboxRef, () => setIsOpen(false));\n\n  return (\n    <CheckboxContainer ref={checkboxRef}>\n      <StyledFilterCheckbox\n        onClick={() => setIsOpen(!isOpen)}\n        isOpen={isOpen}\n        selected={!!checkedOptions.length}\n      >\n        {fieldText}\n        <Icon iconCode=\"chevron-down\" />\n      </StyledFilterCheckbox>\n      {isOpen && (\n        <FilterCheckboxList>\n          <FilterListItem onClick={() => setCheckedOptions([])}>\n            <div>\n              {defaultOption || options[0]}\n              {checkedOptions.length === 0 && <Icon iconCode=\"check\" />}\n            </div>\n          </FilterListItem>\n          {options.map((option, index) => {\n            const checked = checkedOptions.includes(option);\n            return (\n              <FilterCheckboxListItem key={`${option}${index}`}>\n                <CheckBoxInput\n                  id={option}\n                  name={option}\n                  onChange={handleCheckedItem}\n                  checked={checked}\n                />\n                <label htmlFor={option}>\n                  {option}\n                  <Icon iconCode=\"check\" />\n                </label>\n              </FilterCheckboxListItem>\n            );\n          })}\n        </FilterCheckboxList>\n      )}\n    </CheckboxContainer>\n  );\n};\n"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiD,OAAjD;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SACEC,oBADF,EAEEC,kBAFF,EAGEC,sBAHF,EAIEC,aAJF,EAKEC,iBALF,EAMEC,cANF,QAOO,yBAPP;AAQA,SAASC,IAAT,QAAqB,kCAArB;;AAWA,OAAO,MAAMC,cAAc,GAAG,CAAC;EAC7BC,KAD6B;EAE7BC,SAF6B;EAG7BC,aAAa,EAAbA,cAAa,GAAG,EAHa;EAI7BC,OAJ6B;EAK7BC,cAL6B;EAM7BC;AAN6B,CAAD,KAOT;EAAA;;EACnB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAU,KAAV,CAApC;EACA,MAAMmB,WAAW,GAAGlB,MAAM,CAAC,IAAD,CAA1B;;EAEA,MAAMmB,iBAAiB,GAAIC,KAAD,IAA2B;IACnD,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;IACA,MAAMC,WAAW,GAAGD,MAAM,CAACE,IAA3B;;IAEA,IAAIb,KAAJ,EAAW;MACT,IAAIW,MAAM,CAACG,OAAX,EAAoB;QAClBT,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoBQ,WAApB,CAAD,CAAjB;MACD,CAFD,MAEO;QACL,MAAMG,iBAAiB,GAAGX,cAAc,CAACY,MAAf,CACvBC,MAAD,IAAoBA,MAAM,KAAKL,WADP,CAA1B;QAGAP,iBAAiB,CAACU,iBAAD,CAAjB;MACD;IACF,CATD,MASO;MACL,IAAIX,cAAc,CAACc,QAAf,CAAwBN,WAAxB,CAAJ,EAA0C;QACxC,MAAMG,iBAAiB,GAAGX,cAAc,CAACY,MAAf,CACvBC,MAAD,IAAoBA,MAAM,KAAKL,WADP,CAA1B;QAGAP,iBAAiB,CAACU,iBAAD,CAAjB;MACD,CALD,MAKO;QACLV,iBAAiB,CAAC,CAACO,WAAD,CAAD,CAAjB;MACD;IACF;EACF,CAvBD;;EAyBArB,iBAAiB,CAACiB,WAAD,EAAc,MAAMD,SAAS,CAAC,KAAD,CAA7B,CAAjB;EAEA,oBACE,QAAC,iBAAD;IAAmB,GAAG,EAAEC,WAAxB;IAAA,wBACE,QAAC,oBAAD;MACE,OAAO,EAAE,MAAMD,SAAS,CAAC,CAACD,MAAF,CAD1B;MAEE,MAAM,EAAEA,MAFV;MAGE,QAAQ,EAAE,CAAC,CAACF,cAAc,CAACe,MAH7B;MAAA,WAKGlB,SALH,eAME,QAAC,IAAD;QAAM,QAAQ,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EASGK,MAAM,iBACL,QAAC,kBAAD;MAAA,wBACE,QAAC,cAAD;QAAgB,OAAO,EAAE,MAAMD,iBAAiB,CAAC,EAAD,CAAhD;QAAA,uBACE;UAAA,WACGH,cAAa,IAAIC,OAAO,CAAC,CAAD,CAD3B,EAEGC,cAAc,CAACe,MAAf,KAA0B,CAA1B,iBAA+B,QAAC,IAAD;YAAM,QAAQ,EAAC;UAAf;YAAA;YAAA;YAAA;UAAA,QAFlC;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,EAOGhB,OAAO,CAACiB,GAAR,CAAY,CAACH,MAAD,EAASI,KAAT,KAAmB;QAC9B,MAAMP,OAAO,GAAGV,cAAc,CAACc,QAAf,CAAwBD,MAAxB,CAAhB;QACA,oBACE,QAAC,sBAAD;UAAA,wBACE,QAAC,aAAD;YACE,EAAE,EAAEA,MADN;YAEE,IAAI,EAAEA,MAFR;YAGE,QAAQ,EAAER,iBAHZ;YAIE,OAAO,EAAEK;UAJX;YAAA;YAAA;YAAA;UAAA,QADF,eAOE;YAAO,OAAO,EAAEG,MAAhB;YAAA,WACGA,MADH,eAEE,QAAC,IAAD;cAAM,QAAQ,EAAC;YAAf;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QAPF;QAAA,GAA8B,GAAEA,MAAO,GAAEI,KAAM,EAA/C;UAAA;UAAA;UAAA;QAAA,QADF;MAcD,CAhBA,CAPH;IAAA;MAAA;MAAA;MAAA;IAAA,QAVJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuCD,CA7EM;;GAAMtB,c;UAoCXR,iB;;;KApCWQ,c"},"metadata":{},"sourceType":"module"}