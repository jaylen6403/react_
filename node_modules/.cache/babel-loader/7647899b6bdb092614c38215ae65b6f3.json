{"ast":null,"code":"import { createApi } from '@reduxjs/toolkit/query/react';\nimport { fetchBaseQueryWithRefresh } from '../../utils/fetchBaseQueryWithRefresh';\nimport { prepareHeadersWithAuth } from '../../utils/prepareHeadersWithAuth';\nimport { apiUrl } from '@luma-fe-workspace/utility';\nexport const permissionsApi = createApi({\n  reducerPath: 'permissionsService',\n  baseQuery: fetchBaseQueryWithRefresh({\n    baseUrl: `${apiUrl}/permission-service/`,\n    prepareHeaders: prepareHeadersWithAuth()\n  }),\n  endpoints: builder => ({\n    uiPermissions: builder.query({\n      query: ({\n        permissions\n      }) => ({\n        url: 'permission',\n        method: 'POST',\n        body: permissions\n      })\n    }),\n    checkPermission: builder.query({\n      query: ({\n        permission\n      }) => ({\n        url: `permission/${permission}`,\n        method: 'GET'\n      })\n    })\n  })\n});\nexport const {\n  useUiPermissionsQuery,\n  useCheckPermissionQuery\n} = permissionsApi;","map":{"version":3,"names":["createApi","fetchBaseQueryWithRefresh","prepareHeadersWithAuth","apiUrl","permissionsApi","reducerPath","baseQuery","baseUrl","prepareHeaders","endpoints","builder","uiPermissions","query","permissions","url","method","body","checkPermission","permission","useUiPermissionsQuery","useCheckPermissionQuery"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/redux/permissionsService/slice.ts"],"sourcesContent":["import { createApi } from '@reduxjs/toolkit/query/react';\nimport { fetchBaseQueryWithRefresh } from '../../utils/fetchBaseQueryWithRefresh';\nimport { prepareHeadersWithAuth } from '../../utils/prepareHeadersWithAuth';\nimport { apiUrl } from '@luma-fe-workspace/utility';\nimport { WidgetPermissions } from './types';\n\nexport const permissionsApi = createApi({\n  reducerPath: 'permissionsService',\n  baseQuery: fetchBaseQueryWithRefresh({\n    baseUrl: `${apiUrl}/permission-service/`,\n    prepareHeaders: prepareHeadersWithAuth(),\n  }),\n  endpoints: (builder) => ({\n    uiPermissions: builder.query<\n      WidgetPermissions[],\n      { permissions: WidgetPermissions[] }\n    >({\n      query: ({ permissions }) => ({\n        url: 'permission',\n        method: 'POST',\n        body: permissions,\n      }),\n    }),\n    checkPermission: builder.query<boolean, { permission: WidgetPermissions }>({\n      query: ({ permission }) => ({\n        url: `permission/${permission}`,\n        method: 'GET',\n      }),\n    }),\n  }),\n});\n\nexport const { useUiPermissionsQuery, useCheckPermissionQuery } =\n  permissionsApi;\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,8BAA1B;AACA,SAASC,yBAAT,QAA0C,uCAA1C;AACA,SAASC,sBAAT,QAAuC,oCAAvC;AACA,SAASC,MAAT,QAAuB,4BAAvB;AAGA,OAAO,MAAMC,cAAc,GAAGJ,SAAS,CAAC;EACtCK,WAAW,EAAE,oBADyB;EAEtCC,SAAS,EAAEL,yBAAyB,CAAC;IACnCM,OAAO,EAAG,GAAEJ,MAAO,sBADgB;IAEnCK,cAAc,EAAEN,sBAAsB;EAFH,CAAD,CAFE;EAMtCO,SAAS,EAAGC,OAAD,KAAc;IACvBC,aAAa,EAAED,OAAO,CAACE,KAAR,CAGb;MACAA,KAAK,EAAE,CAAC;QAAEC;MAAF,CAAD,MAAsB;QAC3BC,GAAG,EAAE,YADsB;QAE3BC,MAAM,EAAE,MAFmB;QAG3BC,IAAI,EAAEH;MAHqB,CAAtB;IADP,CAHa,CADQ;IAWvBI,eAAe,EAAEP,OAAO,CAACE,KAAR,CAA0D;MACzEA,KAAK,EAAE,CAAC;QAAEM;MAAF,CAAD,MAAqB;QAC1BJ,GAAG,EAAG,cAAaI,UAAW,EADJ;QAE1BH,MAAM,EAAE;MAFkB,CAArB;IADkE,CAA1D;EAXM,CAAd;AAN2B,CAAD,CAAhC;AA0BP,OAAO,MAAM;EAAEI,qBAAF;EAAyBC;AAAzB,IACXhB,cADK"},"metadata":{},"sourceType":"module"}