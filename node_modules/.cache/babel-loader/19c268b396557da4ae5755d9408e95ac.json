{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\";\nconst _excluded = [\"id\", \"dropdownItems\", \"onChangeDropdown\", \"dropdownPosition\"],\n      _excluded2 = [\"split\", \"fullWidth\"];\n\nvar _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaButton/ButtonDropdown/LumaButtonDropdown.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { useSelect } from 'downshift';\nimport { LumaDropDownBox } from '../../LumaDropdownBox';\nimport { LumaSingleDropDownOption } from '../../LumaDropdown/LumaSingleDropDown/LumaSingleDropDownOption';\nimport { LumaButton } from '../LumaButton';\nimport { Root } from './LumaButtonDropdown.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LumaButtonDropdown = _ref => {\n  _s();\n\n  let {\n    id,\n    dropdownItems,\n    onChangeDropdown,\n    dropdownPosition = 'bottom'\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const {\n    isOpen,\n    getMenuProps,\n    getItemProps,\n    highlightedIndex,\n    getToggleButtonProps\n  } = useSelect({\n    items: dropdownItems || [],\n    itemToString: item => {\n      var _item$label;\n\n      return (_item$label = item == null ? void 0 : item.label) != null ? _item$label : '';\n    },\n\n    onSelectedItemChange({\n      selectedItem\n    }) {\n      onChangeDropdown == null ? void 0 : onChangeDropdown(selectedItem != null ? selectedItem : null);\n    }\n\n  });\n\n  const {\n    split\n  } = rest,\n        restProps = _objectWithoutPropertiesLoose(rest, _excluded2);\n\n  return /*#__PURE__*/_jsxDEV(Root, {\n    children: [/*#__PURE__*/_jsxDEV(LumaButton, Object.assign({\n      dropdown: {\n        isDropdown: !split,\n        isOpen,\n        getToggleButtonProps\n      },\n      split: split,\n      fullWidth: true\n    }, restProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LumaDropDownBox, {\n      size: split ? `${dropdownPosition}` : 'medium',\n      variant: split ? `no-border-${dropdownPosition}` : 'standard',\n      isOpen: isOpen,\n      items: dropdownItems || [],\n      getMenuProps: getMenuProps,\n      highlightedIndex: highlightedIndex,\n      getItemProps: getItemProps,\n      renderComponent: /*#__PURE__*/_jsxDEV(LumaSingleDropDownOption, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 26\n      }, this),\n      itemToString: item => {\n        var _item$label2;\n\n        return (_item$label2 = item == null ? void 0 : item.label) != null ? _item$label2 : '';\n      },\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LumaButtonDropdown, \"wZCjVu/aHXPgyKrdaFPBGzAtzXg=\", false, function () {\n  return [useSelect];\n});\n\n_c = LumaButtonDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"LumaButtonDropdown\");","map":{"version":3,"names":["useSelect","LumaDropDownBox","LumaSingleDropDownOption","LumaButton","Root","LumaButtonDropdown","id","dropdownItems","onChangeDropdown","dropdownPosition","rest","isOpen","getMenuProps","getItemProps","highlightedIndex","getToggleButtonProps","items","itemToString","item","label","onSelectedItemChange","selectedItem","split","restProps","isDropdown"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaButton/ButtonDropdown/LumaButtonDropdown.tsx"],"sourcesContent":["import { useSelect } from 'downshift';\nimport { DataItemProps } from '../../LumaDropdown/LumaDropDownBasicType';\nimport { LumaDropDownBox } from '../../LumaDropdownBox';\nimport { LumaSingleDropDownOption } from '../../LumaDropdown/LumaSingleDropDown/LumaSingleDropDownOption';\nimport { LumaButton, LumaButtonProps } from '../LumaButton';\nimport { Root } from './LumaButtonDropdown.style';\n\nexport interface DropdownButtonProps extends LumaButtonProps {\n  /**\n   * unique key for the dropdown\n   */\n  id: string;\n  /**\n   * Array items that will be in the dropdown list\n   */\n  dropdownItems?: DataItemProps[];\n  /**\n   * onChange action on dropdown.\n   */\n  onChangeDropdown?: (newItem: DataItemProps | null) => void;\n  /**\n   * Specifies if dropdown list open to the top or to the bottom in the split button.\n   */\n  dropdownPosition?: 'top' | 'bottom';\n}\n\nexport const LumaButtonDropdown = ({\n  id,\n  dropdownItems,\n  onChangeDropdown,\n  dropdownPosition = 'bottom',\n  ...rest\n}: DropdownButtonProps) => {\n  const {\n    isOpen,\n    getMenuProps,\n    getItemProps,\n    highlightedIndex,\n    getToggleButtonProps,\n  } = useSelect({\n    items: dropdownItems || [],\n    itemToString: (item) => item?.label ?? '',\n    onSelectedItemChange({ selectedItem }) {\n      onChangeDropdown?.(selectedItem ?? null);\n    },\n  });\n  const { split, fullWidth, ...restProps } = rest;\n\n  return (\n    <Root>\n      <LumaButton\n        dropdown={{ isDropdown: !split, isOpen, getToggleButtonProps }}\n        split={split}\n        fullWidth\n        {...restProps}\n      />\n      <LumaDropDownBox\n        size={split ? `${dropdownPosition}` : 'medium'}\n        variant={split ? `no-border-${dropdownPosition}` : 'standard'}\n        isOpen={isOpen}\n        items={dropdownItems || []}\n        getMenuProps={getMenuProps}\n        highlightedIndex={highlightedIndex}\n        getItemProps={getItemProps}\n        renderComponent={<LumaSingleDropDownOption />}\n        itemToString={(item) => item?.label ?? ''}\n        id={id}\n      />\n    </Root>\n  );\n};\n"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,WAA1B;AAEA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,wBAAT,QAAyC,gEAAzC;AACA,SAASC,UAAT,QAA4C,eAA5C;AACA,SAASC,IAAT,QAAqB,4BAArB;;AAqBA,OAAO,MAAMC,kBAAkB,GAAG,QAMP;EAAA;;EAAA,IANQ;IACjCC,EADiC;IAEjCC,aAFiC;IAGjCC,gBAHiC;IAIjCC,gBAAgB,GAAG;EAJc,CAMR;EAAA,IADtBC,IACsB;;EACzB,MAAM;IACJC,MADI;IAEJC,YAFI;IAGJC,YAHI;IAIJC,gBAJI;IAKJC;EALI,IAMFf,SAAS,CAAC;IACZgB,KAAK,EAAET,aAAa,IAAI,EADZ;IAEZU,YAAY,EAAGC,IAAD;MAAA;;MAAA,sBAAUA,IAAV,oBAAUA,IAAI,CAAEC,KAAhB,0BAAyB,EAAzB;IAAA,CAFF;;IAGZC,oBAAoB,CAAC;MAAEC;IAAF,CAAD,EAAmB;MACrCb,gBAAgB,QAAhB,YAAAA,gBAAgB,CAAGa,YAAH,WAAGA,YAAH,GAAmB,IAAnB,CAAhB;IACD;;EALW,CAAD,CANb;;EAaA,MAAM;IAAEC;EAAF,IAAqCZ,IAA3C;EAAA,MAA6Ba,SAA7B,iCAA2Cb,IAA3C;;EAEA,oBACE,QAAC,IAAD;IAAA,wBACE,QAAC,UAAD;MACE,QAAQ,EAAE;QAAEc,UAAU,EAAE,CAACF,KAAf;QAAsBX,MAAtB;QAA8BI;MAA9B,CADZ;MAEE,KAAK,EAAEO,KAFT;MAGE,SAAS;IAHX,GAIMC,SAJN;MAAA;MAAA;MAAA;IAAA,QADF,eAOE,QAAC,eAAD;MACE,IAAI,EAAED,KAAK,GAAI,GAAEb,gBAAiB,EAAvB,GAA2B,QADxC;MAEE,OAAO,EAAEa,KAAK,GAAI,aAAYb,gBAAiB,EAAjC,GAAqC,UAFrD;MAGE,MAAM,EAAEE,MAHV;MAIE,KAAK,EAAEJ,aAAa,IAAI,EAJ1B;MAKE,YAAY,EAAEK,YALhB;MAME,gBAAgB,EAAEE,gBANpB;MAOE,YAAY,EAAED,YAPhB;MAQE,eAAe,eAAE,QAAC,wBAAD;QAAA;QAAA;QAAA;MAAA,QARnB;MASE,YAAY,EAAGK,IAAD;QAAA;;QAAA,uBAAUA,IAAV,oBAAUA,IAAI,CAAEC,KAAhB,2BAAyB,EAAzB;MAAA,CAThB;MAUE,EAAE,EAAEb;IAVN;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CA5CM;;GAAMD,kB;UAaPL,S;;;KAbOK,kB"},"metadata":{},"sourceType":"module"}