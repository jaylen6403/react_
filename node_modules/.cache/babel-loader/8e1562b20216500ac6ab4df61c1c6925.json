{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventConfirmations/OpsEventConfirmations/OpsEventConfirmations.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { useState, useEffect } from 'react';\nimport { EventConfirmationModal } from '../../EventConfirmationModal/EventConfirmationModal';\nimport { generateUnderliers, formatIssuerColumn, StatusComponent, StructuredComponent, IssuerNameTooltip } from '../../AGGridTable/AGGridTableComponents';\nimport { AGGridConfirmationsTable } from '../../AGGridTable/AGGridTable';\nimport { formatEventStatus, formatEventType, ISODateToFormat, observationDateFilterComparator } from '../../../utils/gridUtils';\nimport { useEventConfirmationOptions, StatusOptions } from '../../../utils/hooks/useEventConfirmationOptions';\nimport { ConfirmationPopUp } from '../../ConfirmationPopUp/ConfirmationPopUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const OpsEventConfirmations = ({\n  eventsData\n}) => {\n  _s();\n\n  const {\n    events,\n    opsModal,\n    toastData\n  } = useEventConfirmationOptions();\n  const [rowData, setRowData] = useState([]);\n  const [productStructure, setProductStructure] = useState(undefined);\n  const [columnDefs] = useState([{\n    field: 'Product',\n    cellRenderer: formatIssuerColumn,\n    tooltipComponent: IssuerNameTooltip,\n    tooltipField: 'Product',\n    suppressMenu: true\n  }, {\n    field: 'Obv Date',\n    comparator: observationDateFilterComparator\n  }, {\n    field: 'Event Type',\n    suppressMenu: true\n  }, {\n    field: 'Structure',\n    cellRenderer: StructuredComponent\n  }, {\n    field: 'Underliers',\n    cellRenderer: generateUnderliers,\n    sortable: false,\n    filter: false,\n    suppressMenu: true\n  }, {\n    field: 'Event Calculation',\n    cellRenderer: StatusComponent,\n    suppressMenu: true\n  }]);\n  useEffect(() => {\n    const compileRowData = () => {\n      const updatedEvents = eventsData.map(event => {\n        var _event$confirmationTy, _event$observationDat;\n\n        const eventType = formatEventType((_event$confirmationTy = event.confirmationType) != null ? _event$confirmationTy : event.eventType);\n        const eventStatus = formatEventStatus(event);\n        return {\n          Product: event.productIdentifier,\n          'Obv Date': ISODateToFormat((_event$observationDat = event.observationDate) != null ? _event$observationDat : event.eventDate),\n          'Event Type': eventType,\n          Structure: event.structureNameInternal,\n          Underliers: event.underlierList,\n          cusip: event.productIdentifier,\n          'Event Calculation': eventStatus == null ? void 0 : eventStatus.status,\n          basketType: event.basketType,\n          cashSettlementRates: event.cashSettlementRates,\n          eventStatus: eventStatus,\n          eventProductData: event,\n          productSymbol: event.productSymbol\n        };\n      });\n      setRowData(updatedEvents);\n      events.setEvents(eventsData);\n    };\n\n    compileRowData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [eventsData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AGGridConfirmationsTable, {\n      rowData: rowData,\n      columnData: columnDefs,\n      setModalOpen: opsModal.setOpen,\n      modalOpen: opsModal.isOpen,\n      modalData: opsModal.data,\n      setModalData: opsModal.setData,\n      setProductStructure: setProductStructure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventConfirmationModal, {\n      modalOpen: opsModal.isOpen,\n      setModalOpen: opsModal.setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopUp, {\n      closePopUp: () => toastData.setStatus(StatusOptions.None),\n      productStructure: productStructure,\n      successHeader: \"Values Submitted\",\n      failureHeader: \"Failed to Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OpsEventConfirmations, \"wOAz10jmieaCWzZTf460ua9x30A=\", false, function () {\n  return [useEventConfirmationOptions];\n});\n\n_c = OpsEventConfirmations;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpsEventConfirmations\");","map":{"version":3,"names":["useState","useEffect","EventConfirmationModal","generateUnderliers","formatIssuerColumn","StatusComponent","StructuredComponent","IssuerNameTooltip","AGGridConfirmationsTable","formatEventStatus","formatEventType","ISODateToFormat","observationDateFilterComparator","useEventConfirmationOptions","StatusOptions","ConfirmationPopUp","OpsEventConfirmations","eventsData","events","opsModal","toastData","rowData","setRowData","productStructure","setProductStructure","undefined","columnDefs","field","cellRenderer","tooltipComponent","tooltipField","suppressMenu","comparator","sortable","filter","compileRowData","updatedEvents","map","event","eventType","confirmationType","eventStatus","Product","productIdentifier","observationDate","eventDate","Structure","structureNameInternal","Underliers","underlierList","cusip","status","basketType","cashSettlementRates","eventProductData","productSymbol","setEvents","setOpen","isOpen","data","setData","setStatus","None"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventConfirmations/OpsEventConfirmations/OpsEventConfirmations.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { EventProductData } from '@luma-fe-workspace/redux';\n\nimport { EventConfirmationModal } from '../../EventConfirmationModal/EventConfirmationModal';\nimport {\n  generateUnderliers,\n  formatIssuerColumn,\n  StatusComponent,\n  StructuredComponent,\n  IssuerNameTooltip,\n} from '../../AGGridTable/AGGridTableComponents';\nimport {\n  AGGridConfirmationsTable,\n  RowData,\n} from '../../AGGridTable/AGGridTable';\nimport {\n  formatEventStatus,\n  formatEventType,\n  ISODateToFormat,\n  observationDateFilterComparator,\n} from '../../../utils/gridUtils';\nimport {\n  useEventConfirmationOptions,\n  StatusOptions,\n} from '../../../utils/hooks/useEventConfirmationOptions';\n\nimport { ConfirmationPopUp } from '../../ConfirmationPopUp/ConfirmationPopUp';\n\ninterface Props {\n  eventsData: EventProductData[];\n}\n\nexport const OpsEventConfirmations = ({ eventsData }: Props) => {\n  const { events, opsModal, toastData } = useEventConfirmationOptions();\n  const [rowData, setRowData] = useState<RowData[] | []>([]);\n  const [productStructure, setProductStructure] = useState<string | undefined>(\n    undefined\n  );\n\n  const [columnDefs] = useState([\n    {\n      field: 'Product',\n      cellRenderer: formatIssuerColumn,\n      tooltipComponent: IssuerNameTooltip,\n      tooltipField: 'Product',\n      suppressMenu: true,\n    },\n    {\n      field: 'Obv Date',\n      comparator: observationDateFilterComparator,\n    },\n    { field: 'Event Type', suppressMenu: true },\n    {\n      field: 'Structure',\n      cellRenderer: StructuredComponent,\n    },\n    {\n      field: 'Underliers',\n      cellRenderer: generateUnderliers,\n      sortable: false,\n      filter: false,\n      suppressMenu: true,\n    },\n    {\n      field: 'Event Calculation',\n      cellRenderer: StatusComponent,\n      suppressMenu: true,\n    },\n  ]);\n\n  useEffect(() => {\n    const compileRowData = () => {\n      const updatedEvents = eventsData.map((event) => {\n        const eventType = formatEventType(\n          event.confirmationType ?? event.eventType\n        );\n        const eventStatus = formatEventStatus(event);\n\n        return {\n          Product: event.productIdentifier,\n          'Obv Date': ISODateToFormat(event.observationDate ?? event.eventDate),\n          'Event Type': eventType,\n          Structure: event.structureNameInternal,\n          Underliers: event.underlierList,\n          cusip: event.productIdentifier,\n          'Event Calculation': eventStatus?.status,\n          basketType: event.basketType,\n          cashSettlementRates: event.cashSettlementRates,\n          eventStatus: eventStatus,\n          eventProductData: event,\n          productSymbol: event.productSymbol,\n        };\n      });\n\n      setRowData(updatedEvents);\n      events.setEvents(eventsData);\n    };\n    compileRowData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [eventsData]);\n\n  return (\n    <>\n      <AGGridConfirmationsTable\n        rowData={rowData}\n        columnData={columnDefs}\n        setModalOpen={opsModal.setOpen}\n        modalOpen={opsModal.isOpen}\n        modalData={opsModal.data}\n        setModalData={opsModal.setData}\n        setProductStructure={setProductStructure}\n      />\n      <EventConfirmationModal\n        modalOpen={opsModal.isOpen}\n        setModalOpen={opsModal.setOpen}\n      />\n      <ConfirmationPopUp\n        closePopUp={() => toastData.setStatus(StatusOptions.None)}\n        productStructure={productStructure}\n        successHeader=\"Values Submitted\"\n        failureHeader=\"Failed to Submit\"\n      />\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}