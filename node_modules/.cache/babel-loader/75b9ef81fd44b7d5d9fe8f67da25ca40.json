{"ast":null,"code":"import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nexport const titleCase = word => {\n  if (word === 'BLOOMBERG') {\n    return 'Bloomberg';\n  }\n\n  return word;\n};\nexport const valueSelector = (physicalSettlementArray, valueType) => physicalSettlementArray == null ? void 0 : physicalSettlementArray.find(physicalSettlement => physicalSettlement.physicalSettlementType === valueType);\nexport const preselectedUnderlier = (securityId, underlierArray) => {\n  if (securityId) {\n    const selectedUnderlier = underlierArray == null ? void 0 : underlierArray.find(underlier => underlier.ticker === securityId);\n    return {\n      display: selectedUnderlier == null ? void 0 : selectedUnderlier.ticker,\n      value: {\n        name: selectedUnderlier == null ? void 0 : selectedUnderlier.ticker,\n        ticker: selectedUnderlier == null ? void 0 : selectedUnderlier.ticker,\n        type: selectedUnderlier == null ? void 0 : selectedUnderlier.type\n      }\n    };\n  } else {\n    return {\n      display: '',\n      value: {\n        name: '',\n        ticker: '',\n        type: undefined\n      }\n    };\n  }\n};\nexport const setValues = (cashSettlementRates, formValues) => {\n  if (formValues.Luma) {\n    cashSettlementRates.lumaRate = Number(formValues.Luma);\n  }\n\n  if (formValues.Issuer) {\n    cashSettlementRates.issuerRate = Number(formValues.Issuer);\n  }\n\n  if (formValues.Confirmed) {\n    cashSettlementRates.rate = Number(formValues.Confirmed);\n  }\n\n  return cashSettlementRates;\n};\nexport const setValuesIfPreexist = (shareValues, cashValues, formValues) => {\n  shareValues.lumaValue = Number(formValues.lumaShares);\n  shareValues.issuerValue = Number(formValues.issuerShares);\n  shareValues.value = Number(formValues.confirmedShares);\n  cashValues.lumaValue = Number(formValues.lumaCash);\n  cashValues.issuerValue = Number(formValues.issuerCash);\n  cashValues.value = Number(formValues.confirmedCash);\n  return [shareValues, cashValues];\n};\nexport const setValuesIfNull = (formValues, selectedUnderlier) => [{\n  recordId: undefined,\n  physicalSettlementType: 'Shares',\n  securityId: selectedUnderlier.value.ticker,\n  securityIdType: titleCase(selectedUnderlier.value.type),\n  value: Number(formValues.confirmedShares),\n  issuerValue: Number(formValues.issuerShares),\n  lumaValue: Number(formValues.lumaShares)\n}, {\n  recordId: undefined,\n  physicalSettlementType: 'Cash in Lieu',\n  securityId: undefined,\n  securityIdType: undefined,\n  value: Number(formValues.confirmedCash),\n  issuerValue: Number(formValues.issuerCash),\n  lumaValue: Number(formValues.lumaCash)\n}];\nexport const handleCashEventStatus = (modalDataSubmission, formValues, status) => {\n  modalDataSubmission.eventStatus = status;\n  modalDataSubmission.settlementType = 'CASH';\n\n  if (formValues.Confirmed || formValues.Luma && formValues.Issuer && formValues.Luma === formValues.Issuer) {\n    if (!formValues.Confirmed) {\n      if (modalDataSubmission != null && modalDataSubmission.cashSettlementRates) {\n        modalDataSubmission.cashSettlementRates.rate = Number(formValues.Luma);\n      }\n    }\n  }\n\n  return modalDataSubmission;\n};\nexport const handlePhysicalEventStatus = (modalDataSubmission, formValues, status) => {\n  modalDataSubmission.eventStatus = status;\n  const [shareValues, cashValues] = [valueSelector(modalDataSubmission == null ? void 0 : modalDataSubmission.physicalSettlements, 'Shares'), valueSelector(modalDataSubmission == null ? void 0 : modalDataSubmission.physicalSettlements, 'Cash in Lieu')];\n\n  if (formValues != null && formValues.confirmedShares || (formValues.lumaShares || formValues.lumaCash) && (formValues.issuerShares || formValues.issuerCash) && (formValues == null ? void 0 : formValues.lumaShares) === (formValues == null ? void 0 : formValues.issuerShares) && (formValues == null ? void 0 : formValues.lumaCash) === (formValues == null ? void 0 : formValues.issuerCash)) {\n    if (!(formValues != null && formValues.confirmedShares)) {\n      if (shareValues) {\n        shareValues.value = Number(formValues.lumaShares);\n      }\n    }\n\n    if (!(formValues != null && formValues.confirmedCash)) {\n      if (cashValues) {\n        cashValues.value = Number(formValues.lumaCash);\n      }\n    }\n  }\n\n  if (shareValues && cashValues) {\n    modalDataSubmission.physicalSettlements = [shareValues, cashValues];\n  }\n\n  return modalDataSubmission;\n};","map":{"version":3,"names":["titleCase","word","valueSelector","physicalSettlementArray","valueType","find","physicalSettlement","physicalSettlementType","preselectedUnderlier","securityId","underlierArray","selectedUnderlier","underlier","ticker","display","value","name","type","undefined","setValues","cashSettlementRates","formValues","Luma","lumaRate","Number","Issuer","issuerRate","Confirmed","rate","setValuesIfPreexist","shareValues","cashValues","lumaValue","lumaShares","issuerValue","issuerShares","confirmedShares","lumaCash","issuerCash","confirmedCash","setValuesIfNull","recordId","securityIdType","handleCashEventStatus","modalDataSubmission","status","eventStatus","settlementType","handlePhysicalEventStatus","physicalSettlements"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/utils/modalUtils.ts"],"sourcesContent":["import { MenuItemSingleType } from '@luma-fe-workspace/design-system';\nimport {\n  CashSettlementRates,\n  EventProductData,\n  PhysicalSettlement,\n  UnderlierRest,\n} from '@luma-fe-workspace/redux';\nimport { Statuses } from '../components/EventConfirmationModal/EventConfirmationModal';\n\ntype DropdownUnderlier = 'BLOOMBERG' | 'RIC';\n\ntype PhysicalSettlementType = 'Shares' | 'Cash in Lieu';\n\ntype SecurityIdType = 'Bloomberg';\n\nexport type Underlier = MenuItemSingleType<UnderlierRest>;\n\ninterface initialCashValues {\n  Luma: string | number;\n  Issuer: string | number;\n  Confirmed: string | number;\n}\n\ninterface initialPhysicalValues {\n  lumaShares: string | number;\n  issuerShares: string | number;\n  confirmedShares: string | number;\n  lumaCash: string | number;\n  issuerCash: string | number;\n  confirmedCash: string | number;\n}\n\nexport const titleCase = (word: DropdownUnderlier | undefined) => {\n  if (word === 'BLOOMBERG') {\n    return 'Bloomberg';\n  }\n  return word;\n};\n\nexport const valueSelector = (\n  physicalSettlementArray: PhysicalSettlement[] | undefined,\n  valueType: 'Shares' | 'Cash in Lieu'\n) =>\n  physicalSettlementArray?.find(\n    (physicalSettlement: PhysicalSettlement) =>\n      physicalSettlement.physicalSettlementType === valueType\n  );\n\nexport const preselectedUnderlier = (\n  securityId: string | undefined,\n  underlierArray: UnderlierRest[] | undefined\n) => {\n  if (securityId) {\n    const selectedUnderlier = underlierArray?.find(\n      (underlier: UnderlierRest) => underlier.ticker === securityId\n    );\n    return {\n      display: selectedUnderlier?.ticker,\n      value: {\n        name: selectedUnderlier?.ticker,\n        ticker: selectedUnderlier?.ticker,\n        type: selectedUnderlier?.type,\n      },\n    };\n  } else {\n    return {\n      display: '',\n      value: { name: '', ticker: '', type: undefined },\n    };\n  }\n};\n\nexport const setValues = (\n  cashSettlementRates: CashSettlementRates,\n  formValues: initialCashValues\n) => {\n  if (formValues.Luma) {\n    cashSettlementRates.lumaRate = Number(formValues.Luma);\n  }\n  if (formValues.Issuer) {\n    cashSettlementRates.issuerRate = Number(formValues.Issuer);\n  }\n  if (formValues.Confirmed) {\n    cashSettlementRates.rate = Number(formValues.Confirmed);\n  }\n  return cashSettlementRates;\n};\n\nexport const setValuesIfPreexist = (\n  shareValues: PhysicalSettlement,\n  cashValues: PhysicalSettlement,\n  formValues: initialPhysicalValues\n) => {\n  shareValues.lumaValue = Number(formValues.lumaShares);\n  shareValues.issuerValue = Number(formValues.issuerShares);\n  shareValues.value = Number(formValues.confirmedShares);\n  cashValues.lumaValue = Number(formValues.lumaCash);\n  cashValues.issuerValue = Number(formValues.issuerCash);\n  cashValues.value = Number(formValues.confirmedCash);\n  return [shareValues, cashValues];\n};\n\nexport const setValuesIfNull = (\n  formValues: initialPhysicalValues,\n  selectedUnderlier: Underlier\n) => [\n  {\n    recordId: undefined,\n    physicalSettlementType: 'Shares' as PhysicalSettlementType,\n    securityId: selectedUnderlier.value.ticker,\n    securityIdType: titleCase(selectedUnderlier.value.type) as SecurityIdType,\n    value: Number(formValues.confirmedShares),\n    issuerValue: Number(formValues.issuerShares),\n    lumaValue: Number(formValues.lumaShares),\n  },\n  {\n    recordId: undefined,\n    physicalSettlementType: 'Cash in Lieu' as PhysicalSettlementType,\n    securityId: undefined,\n    securityIdType: undefined,\n    value: Number(formValues.confirmedCash),\n    issuerValue: Number(formValues.issuerCash),\n    lumaValue: Number(formValues.lumaCash),\n  },\n];\n\nexport const handleCashEventStatus = (\n  modalDataSubmission: EventProductData,\n  formValues: initialCashValues,\n  status: Statuses\n) => {\n  modalDataSubmission.eventStatus = status;\n  modalDataSubmission.settlementType = 'CASH';\n  if (\n    formValues.Confirmed ||\n    (formValues.Luma &&\n      formValues.Issuer &&\n      formValues.Luma === formValues.Issuer)\n  ) {\n    if (!formValues.Confirmed) {\n      if (modalDataSubmission?.cashSettlementRates) {\n        modalDataSubmission.cashSettlementRates.rate = Number(formValues.Luma);\n      }\n    }\n  }\n  return modalDataSubmission;\n};\n\nexport const handlePhysicalEventStatus = (\n  modalDataSubmission: EventProductData,\n  formValues: initialPhysicalValues,\n  status: Statuses\n) => {\n  modalDataSubmission.eventStatus = status;\n\n  const [shareValues, cashValues] = [\n    valueSelector(modalDataSubmission?.physicalSettlements, 'Shares'),\n    valueSelector(modalDataSubmission?.physicalSettlements, 'Cash in Lieu'),\n  ];\n  if (\n    formValues?.confirmedShares ||\n    ((formValues.lumaShares || formValues.lumaCash) &&\n      (formValues.issuerShares || formValues.issuerCash) &&\n      formValues?.lumaShares === formValues?.issuerShares &&\n      formValues?.lumaCash === formValues?.issuerCash)\n  ) {\n    if (!formValues?.confirmedShares) {\n      if (shareValues) {\n        shareValues.value = Number(formValues.lumaShares);\n      }\n    }\n    if (!formValues?.confirmedCash) {\n      if (cashValues) {\n        cashValues.value = Number(formValues.lumaCash);\n      }\n    }\n  }\n  if (shareValues && cashValues) {\n    modalDataSubmission.physicalSettlements = [shareValues, cashValues];\n  }\n  return modalDataSubmission;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}