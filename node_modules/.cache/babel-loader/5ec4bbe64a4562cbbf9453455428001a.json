{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/Modal/ModalHeader/ModalHeader.tsx\";\nimport { ModalCloseButton, ModalCloseIcon, ModalHeaderActions, ModalSearchNameInput, ModalTitle, StyledModalHeader } from './ModalHeader.styles';\nimport { generateAriaDescriptors } from '../ModalHelpers';\nimport { ModalSubTitle } from '../Modal.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalHeader = ({\n  id,\n  title,\n  secondaryTitle,\n  searchActionObj,\n  handleOnClose,\n  seperator: _seperator = 'NONE'\n}) => {\n  const titleId = generateAriaDescriptors(id).titleId;\n  return /*#__PURE__*/_jsxDEV(StyledModalHeader, {\n    seperatorColor: _seperator,\n    children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n      id: titleId,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalHeaderActions, {\n      children: [searchActionObj ? /*#__PURE__*/_jsxDEV(ModalSearchNameInput, {\n        onChange: e => searchActionObj.setName(e.target.value) // @todo: error handling? This is optional are there any validations required here?\n        ,\n        hasError: false,\n        disabled: false,\n        placeholder: `${searchActionObj.placeholder} name (optional)`,\n        defaultValue: searchActionObj.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : null, secondaryTitle ? /*#__PURE__*/_jsxDEV(ModalSubTitle, {\n        children: secondaryTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n        \"aria-label\": \"close dialog\",\n        id: `${id}_close`,\n        \"aria-describedby\": titleId,\n        type: \"button\",\n        onClick: handleOnClose,\n        children: /*#__PURE__*/_jsxDEV(ModalCloseIcon, {\n          iconCode: \"times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = ModalHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalHeader\");","map":{"version":3,"names":["ModalCloseButton","ModalCloseIcon","ModalHeaderActions","ModalSearchNameInput","ModalTitle","StyledModalHeader","generateAriaDescriptors","ModalSubTitle","ModalHeader","id","title","secondaryTitle","searchActionObj","handleOnClose","seperator","titleId","e","setName","target","value","placeholder","name"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/Modal/ModalHeader/ModalHeader.tsx"],"sourcesContent":["import {\n  ModalCloseButton,\n  ModalCloseIcon,\n  ModalHeaderActions,\n  ModalSearchNameInput,\n  ModalTitle,\n  StyledModalHeader,\n} from './ModalHeader.styles';\nimport {\n  generateAriaDescriptors,\n  ModalSeperatorColor,\n  SearchNameDescriptor,\n} from '../ModalHelpers';\nimport { ModalSubTitle } from '../Modal.styles';\n\ninterface Props {\n  id: string;\n  title: string;\n  /**\n   * rightSideTitle of Modal Header\n   */\n  secondaryTitle?: string;\n  /**\n   * function that closes modal\n   */\n  handleOnClose: () => void;\n  /**\n   * SearchNameDescriptor that if provided describes how to show Search Name Input\n   */\n  searchActionObj?: SearchNameDescriptor;\n  /**\n   * Specify the color of the Modal Header Divider\n   *  buy: buyGreen\n   *  red: sellRed\n   *  none (default): greyFade\n   */\n  seperator?: ModalSeperatorColor;\n}\n\nexport const ModalHeader = ({\n  id,\n  title,\n  secondaryTitle,\n  searchActionObj,\n  handleOnClose,\n  seperator = 'NONE',\n}: Props) => {\n  const titleId = generateAriaDescriptors(id).titleId;\n  return (\n    <StyledModalHeader seperatorColor={seperator}>\n      <ModalTitle id={titleId}>{title}</ModalTitle>\n      <ModalHeaderActions>\n        {searchActionObj ? (\n          <ModalSearchNameInput\n            onChange={(e) => searchActionObj.setName(e.target.value)}\n            // @todo: error handling? This is optional are there any validations required here?\n            hasError={false}\n            disabled={false}\n            placeholder={`${searchActionObj.placeholder} name (optional)`}\n            defaultValue={searchActionObj.name}\n          />\n        ) : null}\n        {secondaryTitle ? (\n          <ModalSubTitle>{secondaryTitle}</ModalSubTitle>\n        ) : (\n          <ModalCloseButton\n            aria-label=\"close dialog\"\n            id={`${id}_close`}\n            aria-describedby={titleId}\n            type=\"button\"\n            onClick={handleOnClose}\n          >\n            <ModalCloseIcon iconCode=\"times\" />\n          </ModalCloseButton>\n        )}\n      </ModalHeaderActions>\n    </StyledModalHeader>\n  );\n};\n"],"mappings":";AAAA,SACEA,gBADF,EAEEC,cAFF,EAGEC,kBAHF,EAIEC,oBAJF,EAKEC,UALF,EAMEC,iBANF,QAOO,sBAPP;AAQA,SACEC,uBADF,QAIO,iBAJP;AAKA,SAASC,aAAT,QAA8B,iBAA9B;;AA0BA,OAAO,MAAMC,WAAW,GAAG,CAAC;EAC1BC,EAD0B;EAE1BC,KAF0B;EAG1BC,cAH0B;EAI1BC,eAJ0B;EAK1BC,aAL0B;EAM1BC,SAAS,EAATA,UAAS,GAAG;AANc,CAAD,KAOd;EACX,MAAMC,OAAO,GAAGT,uBAAuB,CAACG,EAAD,CAAvB,CAA4BM,OAA5C;EACA,oBACE,QAAC,iBAAD;IAAmB,cAAc,EAAED,UAAnC;IAAA,wBACE,QAAC,UAAD;MAAY,EAAE,EAAEC,OAAhB;MAAA,UAA0BL;IAA1B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,kBAAD;MAAA,WACGE,eAAe,gBACd,QAAC,oBAAD;QACE,QAAQ,EAAGI,CAAD,IAAOJ,eAAe,CAACK,OAAhB,CAAwBD,CAAC,CAACE,MAAF,CAASC,KAAjC,CADnB,CAEE;QAFF;QAGE,QAAQ,EAAE,KAHZ;QAIE,QAAQ,EAAE,KAJZ;QAKE,WAAW,EAAG,GAAEP,eAAe,CAACQ,WAAY,kBAL9C;QAME,YAAY,EAAER,eAAe,CAACS;MANhC;QAAA;QAAA;QAAA;MAAA,QADc,GASZ,IAVN,EAWGV,cAAc,gBACb,QAAC,aAAD;QAAA,UAAgBA;MAAhB;QAAA;QAAA;QAAA;MAAA,QADa,gBAGb,QAAC,gBAAD;QACE,cAAW,cADb;QAEE,EAAE,EAAG,GAAEF,EAAG,QAFZ;QAGE,oBAAkBM,OAHpB;QAIE,IAAI,EAAC,QAJP;QAKE,OAAO,EAAEF,aALX;QAAA,uBAOE,QAAC,cAAD;UAAgB,QAAQ,EAAC;QAAzB;UAAA;UAAA;UAAA;QAAA;MAPF;QAAA;QAAA;QAAA;MAAA,QAdJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CAvCM;KAAML,W"},"metadata":{},"sourceType":"module"}