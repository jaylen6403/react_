{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\";\nconst _excluded = [\"id\", \"onChange\", \"onBlur\", \"defaultValue\", \"label\", \"error\", \"helperText\", \"fullWidth\", \"disabled\", \"size\", \"variant\", \"inputFormat\", \"isOpen\"];\n\nvar _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDatePicker/LumaDatePicker.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { format } from 'date-fns';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport { Root } from './LumaDatePicker.styles';\nimport { LumaTextEntry } from '../LumaTextEntry';\nimport { LumaIcon } from '../LumaIcon';\nimport { DatePickerDropDown } from './Components/LumaDatePickerDropDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LumaDatePicker = _ref => {\n  _s();\n\n  let {\n    onChange,\n    onBlur,\n    defaultValue,\n    label,\n    error,\n    helperText,\n    fullWidth,\n    disabled,\n    size = 'medium',\n    variant = 'date',\n    inputFormat = undefined,\n    isOpen = false\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [dateValue, setDateValue] = React.useState(defaultValue);\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(isOpen);\n  useEffect(() => {\n    setDateValue(defaultValue);\n  }, [defaultValue]);\n  const formattedDateValue = dateValue !== undefined ? inputFormat !== undefined ? format(dateValue, inputFormat) : dateValue.toLocaleDateString() : undefined;\n\n  const onChangeHandler = newValue => {\n    setDateValue(newValue);\n    setIsDropdownOpen(false);\n    onChange == null ? void 0 : onChange(newValue);\n  };\n\n  const styleCalendarIcon = {\n    fontSize: '0.5rem'\n  };\n  return /*#__PURE__*/_jsxDEV(Root, {\n    size: size,\n    value: formattedDateValue,\n    fullWidth: fullWidth,\n    disabled: disabled,\n    children: /*#__PURE__*/_jsxDEV(OutsideClickHandler, {\n      onOutsideClick: () => setIsDropdownOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(LumaTextEntry, Object.assign({\n        type: \"text\",\n        sizeVariant: size,\n        value: formattedDateValue,\n        label: label,\n        helperText: helperText,\n        readOnly: true,\n        disabled: disabled,\n        error: error,\n        fullWidth: fullWidth,\n        onBlur: onBlur,\n        onFocus: () => setIsDropdownOpen(true),\n        icon: /*#__PURE__*/_jsxDEV(LumaIcon, {\n          type: \"regular\",\n          iconCode: \"calendar\",\n          style: styleCalendarIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this),\n        useByDropdown: true\n      }, rest), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), isDropdownOpen ? /*#__PURE__*/_jsxDEV(DatePickerDropDown, {\n        onChangeHandler: onChangeHandler,\n        variant: variant,\n        isOpen: isDropdownOpen,\n        size: size,\n        selected: dateValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LumaDatePicker, \"E4mIrXdRuxRakkowQI9pGzAil+w=\");\n\n_c = LumaDatePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"LumaDatePicker\");","map":{"version":3,"names":["React","useEffect","format","OutsideClickHandler","Root","LumaTextEntry","LumaIcon","DatePickerDropDown","LumaDatePicker","onChange","onBlur","defaultValue","label","error","helperText","fullWidth","disabled","size","variant","inputFormat","undefined","isOpen","rest","dateValue","setDateValue","useState","isDropdownOpen","setIsDropdownOpen","formattedDateValue","toLocaleDateString","onChangeHandler","newValue","styleCalendarIcon","fontSize"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDatePicker/LumaDatePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport { format } from 'date-fns';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport { Root } from './LumaDatePicker.styles';\nimport { LumaTextEntry } from '../LumaTextEntry';\nimport { LumaIcon } from '../LumaIcon';\nimport { DatePickerDropDown } from './Components/LumaDatePickerDropDown';\nimport { IconCode } from '../LumaIcon';\n\nexport type InputFormatType =\n  | 'MM/dd/yyyy'\n  | 'dd/MM/yyyy'\n  | 'MM-dd-yyyy'\n  | 'dd-MM-yyyy'\n  | 'yyyy-dd-MM'\n  | 'yyyy-MM-dd'\n  | 'yyyy/dd/MM'\n  | 'yyyy/MM/dd';\n\nexport interface DatePickerProps {\n  /**Unique identifier of the field */\n  id: string;\n  /**onchange event*/\n  onChange?: (newDate: Date) => void;\n  /**onBlur event*/\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  /**onfocus event*/\n  onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  /**Mode/Type of field*/\n  variant?: 'date' | 'time' | 'datetime';\n  /**value of the field */\n  defaultValue?: Date;\n  /*label : which act as placeholder initially when type anything it will act as label of the textbox  */\n  label?: string;\n  /*Error will act when user need to show validation error */\n  error?: boolean;\n  /*helper text shown below the input field */\n  helperText?: string;\n  /*fullwidth will make the field 100% width */\n  fullWidth?: boolean;\n  /**disabled will disable the field*/\n  disabled?: boolean;\n  /**size will make the field small, medium or large size*/\n  size?: 'small' | 'medium' | 'large';\n  /**Format of date */\n  inputFormat?: InputFormatType;\n  /**value to toggle calendar dropdown */\n  isOpen?: boolean;\n  /**icons for calendar */\n  icon?: IconCode;\n}\nexport const LumaDatePicker = ({\n  id,\n  onChange,\n  onBlur,\n  defaultValue,\n  label,\n  error,\n  helperText,\n  fullWidth,\n  disabled,\n  size = 'medium',\n  variant = 'date',\n  inputFormat = undefined,\n  isOpen = false,\n  ...rest\n}: DatePickerProps) => {\n  const [dateValue, setDateValue] = React.useState(defaultValue);\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(isOpen);\n\n  useEffect(() => {\n    setDateValue(defaultValue);\n  }, [defaultValue]);\n\n  const formattedDateValue =\n    dateValue !== undefined\n      ? inputFormat !== undefined\n        ? format(dateValue, inputFormat)\n        : dateValue.toLocaleDateString()\n      : undefined;\n\n  const onChangeHandler = (newValue: Date) => {\n    setDateValue(newValue);\n    setIsDropdownOpen(false);\n    onChange?.(newValue);\n  };\n\n  const styleCalendarIcon = {\n    fontSize: '0.5rem',\n  };\n\n  return (\n    <Root\n      size={size}\n      value={formattedDateValue}\n      fullWidth={fullWidth}\n      disabled={disabled}\n    >\n      <OutsideClickHandler onOutsideClick={() => setIsDropdownOpen(false)}>\n        <LumaTextEntry\n          type=\"text\"\n          sizeVariant={size}\n          value={formattedDateValue}\n          label={label}\n          helperText={helperText}\n          readOnly={true}\n          disabled={disabled}\n          error={error}\n          fullWidth={fullWidth}\n          onBlur={onBlur}\n          onFocus={() => setIsDropdownOpen(true)}\n          icon={\n            <LumaIcon\n              type=\"regular\"\n              iconCode=\"calendar\"\n              style={styleCalendarIcon}\n            />\n          }\n          useByDropdown={true}\n          {...rest}\n        />\n        {isDropdownOpen ? (\n          <DatePickerDropDown\n            onChangeHandler={onChangeHandler}\n            variant={variant}\n            isOpen={isDropdownOpen}\n            size={size}\n            selected={dateValue}\n          />\n        ) : null}\n      </OutsideClickHandler>\n    </Root>\n  );\n};\n"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,kBAAT,QAAmC,qCAAnC;;AA6CA,OAAO,MAAMC,cAAc,GAAG,QAeP;EAAA;;EAAA,IAfQ;IAE7BC,QAF6B;IAG7BC,MAH6B;IAI7BC,YAJ6B;IAK7BC,KAL6B;IAM7BC,KAN6B;IAO7BC,UAP6B;IAQ7BC,SAR6B;IAS7BC,QAT6B;IAU7BC,IAAI,GAAG,QAVsB;IAW7BC,OAAO,GAAG,MAXmB;IAY7BC,WAAW,GAAGC,SAZe;IAa7BC,MAAM,GAAG;EAboB,CAeR;EAAA,IADlBC,IACkB;;EACrB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BxB,KAAK,CAACyB,QAAN,CAAed,YAAf,CAAlC;EACA,MAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsC3B,KAAK,CAACyB,QAAN,CAAeJ,MAAf,CAA5C;EAEApB,SAAS,CAAC,MAAM;IACduB,YAAY,CAACb,YAAD,CAAZ;EACD,CAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;EAIA,MAAMiB,kBAAkB,GACtBL,SAAS,KAAKH,SAAd,GACID,WAAW,KAAKC,SAAhB,GACElB,MAAM,CAACqB,SAAD,EAAYJ,WAAZ,CADR,GAEEI,SAAS,CAACM,kBAAV,EAHN,GAIIT,SALN;;EAOA,MAAMU,eAAe,GAAIC,QAAD,IAAoB;IAC1CP,YAAY,CAACO,QAAD,CAAZ;IACAJ,iBAAiB,CAAC,KAAD,CAAjB;IACAlB,QAAQ,QAAR,YAAAA,QAAQ,CAAGsB,QAAH,CAAR;EACD,CAJD;;EAMA,MAAMC,iBAAiB,GAAG;IACxBC,QAAQ,EAAE;EADc,CAA1B;EAIA,oBACE,QAAC,IAAD;IACE,IAAI,EAAEhB,IADR;IAEE,KAAK,EAAEW,kBAFT;IAGE,SAAS,EAAEb,SAHb;IAIE,QAAQ,EAAEC,QAJZ;IAAA,uBAME,QAAC,mBAAD;MAAqB,cAAc,EAAE,MAAMW,iBAAiB,CAAC,KAAD,CAA5D;MAAA,wBACE,QAAC,aAAD;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAEV,IAFf;QAGE,KAAK,EAAEW,kBAHT;QAIE,KAAK,EAAEhB,KAJT;QAKE,UAAU,EAAEE,UALd;QAME,QAAQ,EAAE,IANZ;QAOE,QAAQ,EAAEE,QAPZ;QAQE,KAAK,EAAEH,KART;QASE,SAAS,EAAEE,SATb;QAUE,MAAM,EAAEL,MAVV;QAWE,OAAO,EAAE,MAAMiB,iBAAiB,CAAC,IAAD,CAXlC;QAYE,IAAI,eACF,QAAC,QAAD;UACE,IAAI,EAAC,SADP;UAEE,QAAQ,EAAC,UAFX;UAGE,KAAK,EAAEK;QAHT;UAAA;UAAA;UAAA;QAAA,QAbJ;QAmBE,aAAa,EAAE;MAnBjB,GAoBMV,IApBN;QAAA;QAAA;QAAA;MAAA,QADF,EAuBGI,cAAc,gBACb,QAAC,kBAAD;QACE,eAAe,EAAEI,eADnB;QAEE,OAAO,EAAEZ,OAFX;QAGE,MAAM,EAAEQ,cAHV;QAIE,IAAI,EAAET,IAJR;QAKE,QAAQ,EAAEM;MALZ;QAAA;QAAA;QAAA;MAAA,QADa,GAQX,IA/BN;IAAA;MAAA;MAAA;MAAA;IAAA;EANF;IAAA;IAAA;IAAA;EAAA,QADF;AA0CD,CAlFM;;GAAMf,c;;KAAAA,c"},"metadata":{},"sourceType":"module"}