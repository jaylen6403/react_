{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/lifecyclemanager/src/components/PayoutSummary/PayoutSummary.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { InfoWidget } from '../InfoWidget/InfoWidget';\nimport { PercentageBarCard } from '../PercentageBar/PercentageBarCard';\nimport { useAppSelector, useGetPayoutSummaryUsingPostQuery, selectLifecycleEventRequestObject, selectLifecycleEventDisplayCurrency } from '@luma-fe-workspace/redux';\nimport { Spinner } from '@luma-fe-workspace/design-system';\nimport { CustomLumaStatus } from '../CustomLumaStatus/CustomLumaStatus.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PayoutSummary = ({\n  styles,\n  title,\n  mockPayoutSummaryData,\n  isCollapsed,\n  setIsCollapsed\n}) => {\n  _s();\n\n  const eventRequestObject = useAppSelector(selectLifecycleEventRequestObject);\n  const displayCurrency = useAppSelector(selectLifecycleEventDisplayCurrency);\n  const response = useGetPayoutSummaryUsingPostQuery(eventRequestObject);\n  let {\n    data: payoutSummaryData = []\n  } = response;\n  payoutSummaryData = mockPayoutSummaryData != null ? mockPayoutSummaryData : payoutSummaryData;\n  const content = Object.entries(payoutSummaryData).map(([key, summaryData]) => {\n    return /*#__PURE__*/_jsxDEV(PercentageBarCard, {\n      percentage: summaryData.percentage * 100,\n      title: key.replace(/([A-Z])/g, ' $1').replace(/^./, str => {\n        return str.toUpperCase();\n      }),\n      content: summaryData.amount // TODO: Respect currency from dropdown\n      ,\n      currency: key === 'notional' || key === 'totalPayoutAmount' ? displayCurrency : ''\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  });\n  const widgetView = response.isFetching ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this) : response.isError ? /*#__PURE__*/_jsxDEV(CustomLumaStatus, {\n    variant: 'failed',\n    ariaLabel: 'Failed Message',\n    titleMessage: 'Request Failed',\n    helperMessage: 'Something went wrong!'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this) : content;\n  return /*#__PURE__*/_jsxDEV(InfoWidget, {\n    styles: styles,\n    title: title,\n    content: widgetView,\n    isCollapsed: isCollapsed,\n    setIsCollapsed: setIsCollapsed\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PayoutSummary, \"Xo+Rbn50rqwzq9tRmNb72IaXWkY=\", false, function () {\n  return [useAppSelector, useAppSelector, useGetPayoutSummaryUsingPostQuery];\n});\n\n_c = PayoutSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayoutSummary\");","map":{"version":3,"names":["InfoWidget","PercentageBarCard","useAppSelector","useGetPayoutSummaryUsingPostQuery","selectLifecycleEventRequestObject","selectLifecycleEventDisplayCurrency","Spinner","CustomLumaStatus","PayoutSummary","styles","title","mockPayoutSummaryData","isCollapsed","setIsCollapsed","eventRequestObject","displayCurrency","response","data","payoutSummaryData","content","Object","entries","map","key","summaryData","percentage","replace","str","toUpperCase","amount","widgetView","isFetching","isError"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/lifecyclemanager/src/components/PayoutSummary/PayoutSummary.tsx"],"sourcesContent":["import { InfoWidget } from '../InfoWidget/InfoWidget';\nimport { PercentageBarCard } from '../PercentageBar/PercentageBarCard';\nimport {\n  useAppSelector,\n  PayoutSummaryData,\n  useGetPayoutSummaryUsingPostQuery,\n  selectLifecycleEventRequestObject,\n  selectLifecycleEventDisplayCurrency,\n} from '@luma-fe-workspace/redux';\n\nimport { Spinner } from '@luma-fe-workspace/design-system';\nimport { CustomLumaStatus } from '../CustomLumaStatus/CustomLumaStatus.styles';\n\nexport interface PayoutSummaryProps {\n  styles?: string;\n  title: string;\n  /**\n   * Optionally allow mock data to be passed in for storybook\n   */\n  mockPayoutSummaryData?: PayoutSummaryData;\n  isCollapsed: boolean;\n  setIsCollapsed: (isCollapsed: boolean) => void;\n}\n\nexport const PayoutSummary = ({\n  styles,\n  title,\n  mockPayoutSummaryData,\n  isCollapsed,\n  setIsCollapsed,\n}: PayoutSummaryProps) => {\n  const eventRequestObject = useAppSelector(selectLifecycleEventRequestObject);\n  const displayCurrency = useAppSelector(selectLifecycleEventDisplayCurrency);\n\n  const response = useGetPayoutSummaryUsingPostQuery(eventRequestObject);\n  let { data: payoutSummaryData = [] } = response;\n  payoutSummaryData = mockPayoutSummaryData ?? payoutSummaryData;\n\n  const content = Object.entries(payoutSummaryData).map(\n    ([key, summaryData]) => {\n      return (\n        <PercentageBarCard\n          percentage={summaryData.percentage * 100}\n          key={key}\n          title={key.replace(/([A-Z])/g, ' $1').replace(/^./, (str) => {\n            return str.toUpperCase();\n          })}\n          content={summaryData.amount}\n          // TODO: Respect currency from dropdown\n          currency={\n            key === 'notional' || key === 'totalPayoutAmount'\n              ? displayCurrency\n              : ''\n          }\n        />\n      );\n    }\n  );\n\n  const widgetView = response.isFetching ? (\n    <Spinner />\n  ) : response.isError ? (\n    <CustomLumaStatus\n      variant={'failed'}\n      ariaLabel={'Failed Message'}\n      titleMessage={'Request Failed'}\n      helperMessage={'Something went wrong!'}\n    />\n  ) : (\n    content\n  );\n  return (\n    <InfoWidget\n      styles={styles}\n      title={title}\n      content={widgetView}\n      isCollapsed={isCollapsed}\n      setIsCollapsed={setIsCollapsed}\n    />\n  );\n};\n"],"mappings":";;;;;;;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SACEC,cADF,EAGEC,iCAHF,EAIEC,iCAJF,EAKEC,mCALF,QAMO,0BANP;AAQA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAASC,gBAAT,QAAiC,6CAAjC;;AAaA,OAAO,MAAMC,aAAa,GAAG,CAAC;EAC5BC,MAD4B;EAE5BC,KAF4B;EAG5BC,qBAH4B;EAI5BC,WAJ4B;EAK5BC;AAL4B,CAAD,KAMH;EAAA;;EACxB,MAAMC,kBAAkB,GAAGZ,cAAc,CAACE,iCAAD,CAAzC;EACA,MAAMW,eAAe,GAAGb,cAAc,CAACG,mCAAD,CAAtC;EAEA,MAAMW,QAAQ,GAAGb,iCAAiC,CAACW,kBAAD,CAAlD;EACA,IAAI;IAAEG,IAAI,EAAEC,iBAAiB,GAAG;EAA5B,IAAmCF,QAAvC;EACAE,iBAAiB,GAAGP,qBAAH,WAAGA,qBAAH,GAA4BO,iBAA7C;EAEA,MAAMC,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAeH,iBAAf,EAAkCI,GAAlC,CACd,CAAC,CAACC,GAAD,EAAMC,WAAN,CAAD,KAAwB;IACtB,oBACE,QAAC,iBAAD;MACE,UAAU,EAAEA,WAAW,CAACC,UAAZ,GAAyB,GADvC;MAGE,KAAK,EAAEF,GAAG,CAACG,OAAJ,CAAY,UAAZ,EAAwB,KAAxB,EAA+BA,OAA/B,CAAuC,IAAvC,EAA8CC,GAAD,IAAS;QAC3D,OAAOA,GAAG,CAACC,WAAJ,EAAP;MACD,CAFM,CAHT;MAME,OAAO,EAAEJ,WAAW,CAACK,MANvB,CAOE;MAPF;MAQE,QAAQ,EACNN,GAAG,KAAK,UAAR,IAAsBA,GAAG,KAAK,mBAA9B,GACIR,eADJ,GAEI;IAXR,GAEOQ,GAFP;MAAA;MAAA;MAAA;IAAA,QADF;EAgBD,CAlBa,CAAhB;EAqBA,MAAMO,UAAU,GAAGd,QAAQ,CAACe,UAAT,gBACjB,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QADiB,GAEff,QAAQ,CAACgB,OAAT,gBACF,QAAC,gBAAD;IACE,OAAO,EAAE,QADX;IAEE,SAAS,EAAE,gBAFb;IAGE,YAAY,EAAE,gBAHhB;IAIE,aAAa,EAAE;EAJjB;IAAA;IAAA;IAAA;EAAA,QADE,GAQFb,OAVF;EAYA,oBACE,QAAC,UAAD;IACE,MAAM,EAAEV,MADV;IAEE,KAAK,EAAEC,KAFT;IAGE,OAAO,EAAEoB,UAHX;IAIE,WAAW,EAAElB,WAJf;IAKE,cAAc,EAAEC;EALlB;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAxDM;;GAAML,a;UAOgBN,c,EACHA,c,EAEPC,iC;;;KAVNK,a"},"metadata":{},"sourceType":"module"}