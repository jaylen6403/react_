{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/RFQBlotter/columnHelpers.tsx\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { convertToUTC } from '@luma-fe-workspace/common';\nimport { TableCellQuoteSelector } from '../TableCellQuoteSelector/TableCellQuoteSelector';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getOTWSortedQuotes = quotes => {\n  const sortedQuotes = quotes.sort((a, b) => b.quoteAmount - a.quoteAmount);\n  const OTWQuotes = sortedQuotes.filter(quote => quote.status === 'OTW');\n  return OTWQuotes;\n};\n\nexport const RFQBlotterColumnDefs = [{\n  headerName: 'RFQ ID',\n  colId: 'requestId',\n  field: 'requestId',\n  sortable: true,\n  resizable: false,\n  cellRenderer: e => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: e.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this);\n  }\n}, {\n  field: 'status',\n  colId: 'status',\n  sortable: true\n}, {\n  headerName: 'Order ID',\n  colId: 'acceptedQuote.orderId',\n  field: 'acceptedQuote.orderId',\n  sortable: true,\n  resizable: false\n}, {\n  headerName: 'CUSIP/ISIN',\n  field: 'productIdentifier.securityIdentifierValue',\n  colId: 'productIdentifier.securityIdentifierValue',\n  sortable: true\n}, {\n  headerName: 'Side',\n  colId: 'side',\n  field: 'requestType',\n  sortable: true,\n  cellRenderer: e => {\n    const requestType = e.value === 'BWIC' ? 'Bid Wanted' : 'Offer Wanted';\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: requestType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 14\n    }, this);\n  }\n}, {\n  headerName: 'Due For',\n  field: 'endTime',\n  colId: 'endTime',\n  sortable: true,\n  cellRenderer: e => {\n    const endTime = convertToUTC(e.value);\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: endTime.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n}, {\n  field: 'quantity',\n  colId: 'quantity',\n  sortable: true\n}, {\n  field: 'price',\n  colId: 'price',\n  resizable: false,\n  maxWidth: 92,\n  cellClass: 'action-button-cell',\n  cellStyle: {\n    padding: '0rem'\n  },\n  cellRenderer: TableCellQuoteSelector,\n  cellRendererParams: e => {\n    const rowData = e.data;\n    const props = {\n      id: 'quote-selector',\n      quotes: [],\n      status: e.data.status,\n      disabled: true,\n      RFQRequestId: rowData.requestId\n    };\n\n    if (rowData.acceptedQuote) {\n      props.quotes = [rowData.acceptedQuote];\n    } else if (rowData.quotes && rowData.status === 'OPEN') {\n      const unexpiredQuotes = getOTWSortedQuotes([...rowData.quotes]);\n      props.disabled = unexpiredQuotes.length < 1;\n      props.quotes = unexpiredQuotes;\n    }\n\n    return props;\n  }\n}, {\n  field: 'Good Until',\n  colId: 'quoteDeadline',\n  cellRenderer: e => {\n    const rowData = e.data;\n\n    if (rowData.acceptedQuote) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: convertToUTC(rowData.acceptedQuote.goodUntilTime).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this);\n    } else if (rowData.quotes && rowData.status === 'OPEN') {\n      const unexpiredQuotes = getOTWSortedQuotes([...rowData.quotes]);\n      if (!unexpiredQuotes[0]) return null;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: convertToUTC(unexpiredQuotes[0].goodUntilTime).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this);\n    }\n\n    return null;\n  }\n}, {\n  field: 'yield',\n  colId: 'yield'\n}, {\n  field: 'YTW',\n  colId: 'YTW'\n}, {\n  field: 'description',\n  colId: 'description',\n  headerClass: 'row-header-left-align'\n}, {\n  field: 'Maturity',\n  colId: 'maturity'\n}, {\n  field: 'Type',\n  colId: 'type'\n}, {\n  field: 'Par Value',\n  colId: 'parValue'\n}, {\n  field: 'Principal',\n  colId: 'principal'\n}, {\n  field: 'Interest',\n  colId: 'interest'\n}, {\n  field: 'Net Money',\n  colId: 'netMoney'\n}, {\n  headerName: 'Settlement',\n  field: 'settlementTimestamp',\n  colId: 'settlementTimestamp',\n  sortable: true,\n  cellRenderer: e => {\n    const settlement = convertToUTC(e.value);\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: format(settlement, 'M/dd')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 14\n    }, this);\n  }\n}];","map":{"version":3,"names":["convertToUTC","TableCellQuoteSelector","format","getOTWSortedQuotes","quotes","sortedQuotes","sort","a","b","quoteAmount","OTWQuotes","filter","quote","status","RFQBlotterColumnDefs","headerName","colId","field","sortable","resizable","cellRenderer","e","value","requestType","endTime","toLocaleTimeString","hour","minute","maxWidth","cellClass","cellStyle","padding","cellRendererParams","rowData","data","props","id","disabled","RFQRequestId","requestId","acceptedQuote","unexpiredQuotes","length","goodUntilTime","headerClass","settlement"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/RFQBlotter/columnHelpers.tsx"],"sourcesContent":["import { ColDef, ICellRendererParams } from 'ag-grid-community';\nimport {\n  SecondaryQuote,\n  SecondaryRequestForQuote,\n} from '@luma-fe-workspace/redux';\nimport { convertToUTC } from '@luma-fe-workspace/common';\nimport {\n  TableCellQuoteSelector,\n  TableCellQuoteSelectorProps,\n} from '../TableCellQuoteSelector/TableCellQuoteSelector';\nimport { format } from 'date-fns';\n\nconst getOTWSortedQuotes = (quotes: SecondaryQuote[]) => {\n  const sortedQuotes = quotes.sort(\n    (a: SecondaryQuote, b: SecondaryQuote) => b.quoteAmount - a.quoteAmount\n  );\n  const OTWQuotes = sortedQuotes.filter(\n    (quote: SecondaryQuote) => quote.status === 'OTW'\n  );\n  return OTWQuotes;\n};\n\nexport const RFQBlotterColumnDefs: ColDef[] = [\n  {\n    headerName: 'RFQ ID',\n    colId: 'requestId',\n    field: 'requestId',\n    sortable: true,\n    resizable: false,\n    cellRenderer: (e: ICellRendererParams) => {\n      return <span>{e.value}</span>;\n    },\n  },\n  { field: 'status', colId: 'status', sortable: true },\n  {\n    headerName: 'Order ID',\n    colId: 'acceptedQuote.orderId',\n    field: 'acceptedQuote.orderId',\n    sortable: true,\n    resizable: false,\n  },\n  {\n    headerName: 'CUSIP/ISIN',\n    field: 'productIdentifier.securityIdentifierValue',\n    colId: 'productIdentifier.securityIdentifierValue',\n    sortable: true,\n  },\n  {\n    headerName: 'Side',\n    colId: 'side',\n    field: 'requestType',\n    sortable: true,\n    cellRenderer: (e: ICellRendererParams) => {\n      const requestType = e.value === 'BWIC' ? 'Bid Wanted' : 'Offer Wanted';\n      return <span>{requestType}</span>;\n    },\n  },\n  {\n    headerName: 'Due For',\n    field: 'endTime',\n    colId: 'endTime',\n    sortable: true,\n    cellRenderer: (e: ICellRendererParams) => {\n      const endTime = convertToUTC(e.value);\n      return (\n        <span>\n          {endTime.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit',\n          })}\n        </span>\n      );\n    },\n  },\n  { field: 'quantity', colId: 'quantity', sortable: true },\n  {\n    field: 'price',\n    colId: 'price',\n    resizable: false,\n    maxWidth: 92,\n    cellClass: 'action-button-cell',\n    cellStyle: { padding: '0rem' },\n    cellRenderer: TableCellQuoteSelector,\n    cellRendererParams: (e: ICellRendererParams) => {\n      const rowData: SecondaryRequestForQuote = e.data;\n      const props: TableCellQuoteSelectorProps = {\n        id: 'quote-selector',\n        quotes: [],\n        status: e.data.status,\n        disabled: true,\n        RFQRequestId: rowData.requestId,\n      };\n      if (rowData.acceptedQuote) {\n        props.quotes = [rowData.acceptedQuote];\n      } else if (rowData.quotes && rowData.status === 'OPEN') {\n        const unexpiredQuotes = getOTWSortedQuotes([...rowData.quotes]);\n        props.disabled = unexpiredQuotes.length < 1;\n        props.quotes = unexpiredQuotes;\n      }\n      return props;\n    },\n  },\n  {\n    field: 'Good Until',\n    colId: 'quoteDeadline',\n    cellRenderer: (e: ICellRendererParams) => {\n      const rowData: SecondaryRequestForQuote = e.data;\n      if (rowData.acceptedQuote) {\n        return (\n          <span>\n            {convertToUTC(\n              rowData.acceptedQuote.goodUntilTime\n            ).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit',\n            })}\n          </span>\n        );\n      } else if (rowData.quotes && rowData.status === 'OPEN') {\n        const unexpiredQuotes = getOTWSortedQuotes([...rowData.quotes]);\n        if (!unexpiredQuotes[0]) return null;\n\n        return (\n          <span>\n            {convertToUTC(unexpiredQuotes[0].goodUntilTime).toLocaleTimeString(\n              [],\n              {\n                hour: '2-digit',\n                minute: '2-digit',\n              }\n            )}\n          </span>\n        );\n      }\n      return null;\n    },\n  },\n  { field: 'yield', colId: 'yield' },\n  { field: 'YTW', colId: 'YTW' },\n  {\n    field: 'description',\n    colId: 'description',\n    headerClass: 'row-header-left-align',\n  },\n\n  {\n    field: 'Maturity',\n    colId: 'maturity',\n  },\n  {\n    field: 'Type',\n    colId: 'type',\n  },\n  {\n    field: 'Par Value',\n    colId: 'parValue',\n  },\n  { field: 'Principal', colId: 'principal' },\n  {\n    field: 'Interest',\n    colId: 'interest',\n  },\n  { field: 'Net Money', colId: 'netMoney' },\n  {\n    headerName: 'Settlement',\n    field: 'settlementTimestamp',\n    colId: 'settlementTimestamp',\n    sortable: true,\n    cellRenderer: (e: ICellRendererParams) => {\n      const settlement = convertToUTC(e.value);\n      return <span>{format(settlement, 'M/dd')}</span>;\n    },\n  },\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}