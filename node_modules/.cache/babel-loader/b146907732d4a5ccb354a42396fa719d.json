{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaTabs/LumaTabs.tsx\";\nimport { LumaButton } from '../LumaButton';\nimport { LumaIcon } from '../LumaIcon';\nimport { TabsContainer, Link, Indicator } from './LumaTabs.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar VariantEnum;\n\n(function (VariantEnum) {\n  VariantEnum[\"buttons\"] = \"buttons\";\n  VariantEnum[\"links\"] = \"links\";\n})(VariantEnum || (VariantEnum = {}));\n\nexport const LumaTabs = ({\n  variant: _variant = 'buttons',\n  activeValue: _activeValue = '',\n  fieldValues,\n  onClick,\n  buttonIconCode\n}) => {\n  return /*#__PURE__*/_jsxDEV(TabsContainer, {\n    variant: _variant,\n    children: fieldValues.map(({\n      label,\n      paramName,\n      isDisabled\n    }) => {\n      const onButtonClick = () => {\n        onClick(paramName);\n      };\n\n      const isActive = paramName === _activeValue;\n\n      if (_variant === VariantEnum.links) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          active: isActive,\n          disabled: isDisabled != null ? isDisabled : false,\n          onClick: onButtonClick,\n          children: [label, isActive && /*#__PURE__*/_jsxDEV(Indicator, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 28\n          }, this)]\n        }, paramName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(LumaButton, {\n          variant: isActive ? 'tabs_active' : 'tabs_inactive',\n          size: \"tab\",\n          icon: {\n            iconComponent: /*#__PURE__*/_jsxDEV(LumaIcon, {\n              type: \"solid\",\n              iconCode: buttonIconCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this),\n            isOnRight: true\n          },\n          disabled: isDisabled != null ? isDisabled : false,\n          onClick: onButtonClick,\n          children: label\n        }, paramName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = LumaTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"LumaTabs\");","map":{"version":3,"names":["LumaButton","LumaIcon","TabsContainer","Link","Indicator","VariantEnum","LumaTabs","variant","activeValue","fieldValues","onClick","buttonIconCode","map","label","paramName","isDisabled","onButtonClick","isActive","links","iconComponent","isOnRight"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaTabs/LumaTabs.tsx"],"sourcesContent":["import { LumaButton } from '../LumaButton';\nimport { LumaIcon, IconCode } from '../LumaIcon';\nimport { TabsContainer, Link, Indicator } from './LumaTabs.styles';\n\ninterface FieldValues {\n  paramName: string;\n  label: string;\n  isDisabled?: boolean;\n}\n\nconst enum VariantEnum {\n  buttons = 'buttons',\n  links = 'links',\n}\n\nexport interface TabsProps {\n  /**\n   * Determines whether the Tabs component is to be composed of buttons or links\n   */\n  variant: keyof typeof VariantEnum;\n  /**\n   * Currently selected value.\n   */\n  activeValue?: string;\n  /**\n   * List of tabs.\n   */\n  fieldValues: FieldValues[];\n  /**\n   * Handler of click which receives paramName of clicked tab.\n   */\n  onClick: (paramName: string) => void;\n  /**\n   * Code of the icon to be displayed in buttons.\n   */\n  buttonIconCode: IconCode;\n}\n\nexport const LumaTabs = ({\n  variant = 'buttons',\n  activeValue = '',\n  fieldValues,\n  onClick,\n  buttonIconCode,\n}: TabsProps) => {\n  return (\n    <TabsContainer variant={variant}>\n      {fieldValues.map(({ label, paramName, isDisabled }) => {\n        const onButtonClick = () => {\n          onClick(paramName);\n        };\n        const isActive = paramName === activeValue;\n        if (variant === VariantEnum.links) {\n          return (\n            <Link\n              key={paramName}\n              active={isActive}\n              disabled={isDisabled ?? false}\n              onClick={onButtonClick}\n            >\n              {label}\n              {isActive && <Indicator />}\n            </Link>\n          );\n        } else {\n          return (\n            <LumaButton\n              key={paramName}\n              variant={isActive ? 'tabs_active' : 'tabs_inactive'}\n              size=\"tab\"\n              icon={{\n                iconComponent: (\n                  <LumaIcon type=\"solid\" iconCode={buttonIconCode} />\n                ),\n                isOnRight: true,\n              }}\n              disabled={isDisabled ?? false}\n              onClick={onButtonClick}\n            >\n              {label}\n            </LumaButton>\n          );\n        }\n      })}\n    </TabsContainer>\n  );\n};\n"],"mappings":";AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,QAAT,QAAmC,aAAnC;AACA,SAASC,aAAT,EAAwBC,IAAxB,EAA8BC,SAA9B,QAA+C,mBAA/C;;IAQWC,W;;WAAAA,W;EAAAA,W;EAAAA,W;GAAAA,W,KAAAA,W;;AA4BX,OAAO,MAAMC,QAAQ,GAAG,CAAC;EACvBC,OAAO,EAAPA,QAAO,GAAG,SADa;EAEvBC,WAAW,EAAXA,YAAW,GAAG,EAFS;EAGvBC,WAHuB;EAIvBC,OAJuB;EAKvBC;AALuB,CAAD,KAMP;EACf,oBACE,QAAC,aAAD;IAAe,OAAO,EAAEJ,QAAxB;IAAA,UACGE,WAAW,CAACG,GAAZ,CAAgB,CAAC;MAAEC,KAAF;MAASC,SAAT;MAAoBC;IAApB,CAAD,KAAsC;MACrD,MAAMC,aAAa,GAAG,MAAM;QAC1BN,OAAO,CAACI,SAAD,CAAP;MACD,CAFD;;MAGA,MAAMG,QAAQ,GAAGH,SAAS,KAAKN,YAA/B;;MACA,IAAID,QAAO,KAAKF,WAAW,CAACa,KAA5B,EAAmC;QACjC,oBACE,QAAC,IAAD;UAEE,MAAM,EAAED,QAFV;UAGE,QAAQ,EAAEF,UAAF,WAAEA,UAAF,GAAgB,KAH1B;UAIE,OAAO,EAAEC,aAJX;UAAA,WAMGH,KANH,EAOGI,QAAQ,iBAAI,QAAC,SAAD;YAAA;YAAA;YAAA;UAAA,QAPf;QAAA,GACOH,SADP;UAAA;UAAA;UAAA;QAAA,QADF;MAWD,CAZD,MAYO;QACL,oBACE,QAAC,UAAD;UAEE,OAAO,EAAEG,QAAQ,GAAG,aAAH,GAAmB,eAFtC;UAGE,IAAI,EAAC,KAHP;UAIE,IAAI,EAAE;YACJE,aAAa,eACX,QAAC,QAAD;cAAU,IAAI,EAAC,OAAf;cAAuB,QAAQ,EAAER;YAAjC;cAAA;cAAA;cAAA;YAAA,QAFE;YAIJS,SAAS,EAAE;UAJP,CAJR;UAUE,QAAQ,EAAEL,UAAF,WAAEA,UAAF,GAAgB,KAV1B;UAWE,OAAO,EAAEC,aAXX;UAAA,UAaGH;QAbH,GACOC,SADP;UAAA;UAAA;UAAA;QAAA,QADF;MAiBD;IACF,CApCA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAyCD,CAhDM;KAAMR,Q"},"metadata":{},"sourceType":"module"}