{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/creationhub/src/components/PricingForm/groups/DocumentRequests/DocumentRequests.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { LumaAgGrid, LumaIcon } from '@luma-fe-workspace/design-system';\nimport { usePricingAPI } from '../../usePricingAPI';\nimport { Title } from '../Quoting/Quoting.styles';\nimport { AddDocumentForm } from './AddDocumentForm';\nimport { RequestedDocuments } from './RequestedDocuments';\nimport { DocumentRequestsWrapper, DocumentValidationRulesWrapper, OpenDocumentButton } from './DocumentRequests.style';\nimport { getDocuments } from './DocumentRequestsUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DocumentRequests({\n  rfq,\n  updateRfq\n}) {\n  _s();\n\n  const api = usePricingAPI();\n  const [gridApi, setGridApi] = useState();\n  const [rowData, setRowData] = useState(getDocuments(rfq, api));\n  const columnDefs = [{\n    field: 'documentType',\n    headerName: 'Document Type',\n    filter: 'agTextColumnFilter'\n  }, {\n    field: 'language',\n    headerName: 'Language',\n    filter: 'agTextColumnFilter'\n  }, {\n    field: 'uploadTimestamp',\n    headerName: 'Uploaded'\n  }, {\n    field: 'filename',\n    headerName: 'File Name',\n    filter: 'agTextColumnFilter'\n  }, {\n    field: 'downloadAction',\n    headerName: '',\n    sortable: false,\n    cellRenderer: params => {\n      return /*#__PURE__*/_jsxDEV(OpenDocumentButton, {\n        variant: \"secondary\",\n        onClick: params.value.action,\n        size: \"icon_only\",\n        \"data-testid\": `file-${params.value.filename}`,\n        children: /*#__PURE__*/_jsxDEV(LumaIcon, {\n          iconCode: \"file-arrow-down\",\n          type: \"solid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const defaultColDef = useMemo(() => {\n    return {\n      sortable: true,\n      menuTabs: []\n    };\n  }, []);\n  const onGridReady = useCallback(params => {\n    setGridApi(params.api);\n    params.api.sizeColumnsToFit();\n  }, []);\n  useEffect(() => {\n    const updatedRowData = getDocuments(rfq, api);\n\n    if (updatedRowData) {\n      setRowData(updatedRowData);\n\n      if (gridApi) {\n        gridApi.setRowData(updatedRowData);\n        gridApi.refreshCells();\n        gridApi.sizeColumnsToFit();\n      }\n    }\n  }, [rfq.documents]);\n  const gridOptions = {\n    columnDefs: columnDefs,\n    defaultColDef: defaultColDef,\n    onGridReady: onGridReady,\n    paginationPageSize: 5,\n    getRowId: row => row.data.documentId,\n    rowData: rowData\n  };\n  return /*#__PURE__*/_jsxDEV(DocumentRequestsWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Document Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RequestedDocuments, {\n      documents: rfq.requestedDocuments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddDocumentForm, {\n      rfq: rfq,\n      updateRfq: updateRfq\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LumaAgGrid, {\n      gridOptions: gridOptions,\n      gridStyles: {\n        height: 500,\n        width: '100%'\n      },\n      additionalStyles: `\n          & .ag-header-cell {\n            padding: 0.5rem inherit;\n            font-size: 0.75rem;\n          }\n          & .ag-cell-value {\n            font-size: 0.6875rem;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DocumentValidationRulesWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"We support the following file formats:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), \" PDF, DOC, DOCX, XLS, and XLSX.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DocumentValidationRulesWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Max file size:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), \" 10MB\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DocumentRequests, \"EjHeHkBDqEIimyYyEs4Hk08nrc8=\", false, function () {\n  return [usePricingAPI];\n});\n\n_c = DocumentRequests;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentRequests\");","map":{"version":3,"names":["useCallback","useEffect","useMemo","useState","LumaAgGrid","LumaIcon","usePricingAPI","Title","AddDocumentForm","RequestedDocuments","DocumentRequestsWrapper","DocumentValidationRulesWrapper","OpenDocumentButton","getDocuments","DocumentRequests","rfq","updateRfq","api","gridApi","setGridApi","rowData","setRowData","columnDefs","field","headerName","filter","sortable","cellRenderer","params","value","action","filename","defaultColDef","menuTabs","onGridReady","sizeColumnsToFit","updatedRowData","refreshCells","documents","gridOptions","paginationPageSize","getRowId","row","data","documentId","requestedDocuments","height","width"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/creationhub/src/components/PricingForm/groups/DocumentRequests/DocumentRequests.tsx"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\nimport {\n  ColDef,\n  GetRowIdParams,\n  GridApi,\n  GridOptions,\n  GroupCellRendererParams,\n} from 'ag-grid-community';\nimport { Rfq } from '@luma-fe-workspace/redux';\nimport { LumaAgGrid, LumaIcon } from '@luma-fe-workspace/design-system';\nimport { usePricingAPI } from '../../usePricingAPI';\nimport { Title } from '../Quoting/Quoting.styles';\nimport { AddDocumentForm } from './AddDocumentForm';\nimport { RequestedDocuments } from './RequestedDocuments';\nimport {\n  DocumentRequestsWrapper,\n  DocumentValidationRulesWrapper,\n  OpenDocumentButton,\n} from './DocumentRequests.style';\nimport { getDocuments, IssuerDocumentToRender } from './DocumentRequestsUtils';\n\ntype DocumentRequestsProps = {\n  rfq: Rfq;\n  updateRfq: (rfq: Rfq) => void;\n};\n\nexport function DocumentRequests({ rfq, updateRfq }: DocumentRequestsProps) {\n  const api = usePricingAPI();\n  const [gridApi, setGridApi] = useState<GridApi>();\n  const [rowData, setRowData] = useState(getDocuments(rfq, api));\n  const columnDefs: ColDef[] = [\n    {\n      field: 'documentType',\n      headerName: 'Document Type',\n      filter: 'agTextColumnFilter',\n    },\n    { field: 'language', headerName: 'Language', filter: 'agTextColumnFilter' },\n    { field: 'uploadTimestamp', headerName: 'Uploaded' },\n    {\n      field: 'filename',\n      headerName: 'File Name',\n      filter: 'agTextColumnFilter',\n    },\n    {\n      field: 'downloadAction',\n      headerName: '',\n      sortable: false,\n      cellRenderer: (\n        params: GroupCellRendererParams<\n          IssuerDocumentToRender['downloadAction']\n        >\n      ) => {\n        return (\n          <OpenDocumentButton\n            variant=\"secondary\"\n            onClick={params.value.action}\n            size=\"icon_only\"\n            data-testid={`file-${params.value.filename}`}\n          >\n            <LumaIcon iconCode=\"file-arrow-down\" type=\"solid\" />\n          </OpenDocumentButton>\n        );\n      },\n    },\n  ];\n  const defaultColDef = useMemo(() => {\n    return {\n      sortable: true,\n      menuTabs: [],\n    };\n  }, []);\n  const onGridReady = useCallback((params) => {\n    setGridApi(params.api);\n    params.api.sizeColumnsToFit();\n  }, []);\n\n  useEffect(() => {\n    const updatedRowData = getDocuments(rfq, api);\n    if (updatedRowData) {\n      setRowData(updatedRowData);\n      if (gridApi) {\n        gridApi.setRowData(updatedRowData);\n        gridApi.refreshCells();\n        gridApi.sizeColumnsToFit();\n      }\n    }\n  }, [rfq.documents]);\n\n  const gridOptions: GridOptions = {\n    columnDefs: columnDefs,\n    defaultColDef: defaultColDef,\n    onGridReady: onGridReady,\n    paginationPageSize: 5,\n    getRowId: (row: GetRowIdParams<IssuerDocumentToRender>) =>\n      row.data.documentId,\n    rowData: rowData,\n  };\n\n  return (\n    <DocumentRequestsWrapper>\n      <Title>Document Requests</Title>\n      <RequestedDocuments\n        documents={rfq.requestedDocuments}\n      ></RequestedDocuments>\n      <AddDocumentForm rfq={rfq} updateRfq={updateRfq} />\n      <LumaAgGrid\n        gridOptions={gridOptions}\n        gridStyles={{ height: 500, width: '100%' }}\n        additionalStyles={`\n          & .ag-header-cell {\n            padding: 0.5rem inherit;\n            font-size: 0.75rem;\n          }\n          & .ag-cell-value {\n            font-size: 0.6875rem;\n          }\n        `}\n      />\n      <DocumentValidationRulesWrapper>\n        <b>We support the following file formats:</b> PDF, DOC, DOCX, XLS, and\n        XLSX.\n      </DocumentValidationRulesWrapper>\n      <DocumentValidationRulesWrapper>\n        <b>Max file size:</b> 10MB\n      </DocumentValidationRulesWrapper>\n    </DocumentRequestsWrapper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}