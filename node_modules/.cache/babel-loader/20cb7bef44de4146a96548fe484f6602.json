{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\";\nconst _excluded = [\"name\", \"id\", \"placeholder\", \"error\", \"readOnly\", \"disabled\", \"fullWidth\", \"helperText\", \"size\", \"items\", \"defaultSelectedItems\", \"onChange\", \"handleBlur\"];\n\nvar _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDropdown/LumaMultiDropDown/LumaMultiDropDown.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { useEffect, useState } from 'react';\nimport { useCombobox } from 'downshift';\nimport { Root } from '../LumaDropDown.style';\nimport { MaxLengthValue } from '../LumaDropDownBasicType';\nimport { LumaIcon } from '../../LumaIcon';\nimport { LumaTextEntry } from '../../LumaTextEntry';\nimport { LumaDropDownBox } from '../../LumaDropdownBox';\nimport { LumaMultiDropDownOption } from './LumaMultiDropDownOption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputDisplayValue = selectedDropdownItems => {\n  const valueSelected = selectedDropdownItems.map(item => {\n    return item == null ? void 0 : item.label;\n  });\n  let firstSelected = valueSelected[0] || '';\n\n  if (firstSelected.length > MaxLengthValue) {\n    firstSelected = firstSelected.substring(0, MaxLengthValue) + '...';\n  }\n\n  return selectedDropdownItems.length > 1 ? `${firstSelected}, +${selectedDropdownItems.length - 1}` : `${firstSelected}`;\n};\n\nexport const LumaMultiDropDown = _ref => {\n  _s();\n\n  let {\n    id,\n    placeholder,\n    error,\n    readOnly = true,\n    disabled,\n    fullWidth,\n    helperText,\n    size = 'medium',\n    items = [],\n    defaultSelectedItems,\n    onChange\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [allItems, setAllItems] = useState(defaultSelectedItems || []);\n  const {\n    isOpen,\n    getMenuProps,\n    highlightedIndex,\n    getItemProps,\n    getInputProps,\n    getComboboxProps,\n    openMenu,\n    closeMenu\n  } = useCombobox({\n    items,\n    itemToString: item => {\n      var _item$label;\n\n      return (_item$label = item == null ? void 0 : item.label) != null ? _item$label : '';\n    },\n    selectedItem: null,\n\n    stateReducer(state, actionAndChanges) {\n      const {\n        changes,\n        type\n      } = actionAndChanges;\n\n      switch (type) {\n        case useCombobox.stateChangeTypes.InputKeyDownEnter:\n        case useCombobox.stateChangeTypes.ItemClick:\n        case useCombobox.stateChangeTypes.InputBlur:\n          return Object.assign({}, changes, {\n            isOpen: !!changes.selectedItem\n          });\n      }\n\n      return changes;\n    },\n\n    onStateChange({\n      type,\n      selectedItem\n    }) {\n      let newItems = [];\n\n      switch (type) {\n        case useCombobox.stateChangeTypes.InputKeyDownEnter:\n        case useCombobox.stateChangeTypes.ItemClick:\n          if (selectedItem) {\n            const index = allItems.findIndex(({\n              value\n            }) => value === selectedItem.value);\n\n            if (index > 0) {\n              newItems = [...allItems.slice(0, index), ...allItems.slice(index + 1)];\n            } else if (index === 0) {\n              newItems = [...allItems.slice(1)];\n            } else {\n              newItems = [...allItems, selectedItem];\n            }\n\n            setAllItems(newItems);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n\n  });\n  useEffect(() => {\n    onChange == null ? void 0 : onChange(allItems);\n  }, [allItems, onChange]);\n  return /*#__PURE__*/_jsxDEV(Root, Object.assign({\n    size: size,\n    error: error,\n    fullWidth: fullWidth\n  }, getComboboxProps(), {\n    children: [/*#__PURE__*/_jsxDEV(LumaTextEntry, Object.assign({}, getInputProps(), {\n      label: placeholder,\n      disabled: disabled,\n      readOnly: readOnly,\n      value: inputDisplayValue(allItems),\n      icon: /*#__PURE__*/_jsxDEV(LumaIcon, {\n        onClick: isOpen ? closeMenu : openMenu,\n        iconCode: isOpen ? 'angle-up' : 'angle-down'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this),\n      fullWidth: fullWidth,\n      helperText: helperText,\n      sizeVariant: size,\n      error: error,\n      useByDropdown: true,\n      onClick: () => {\n        if (!isOpen) openMenu();else closeMenu();\n      }\n    }, rest), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), !readOnly ? /*#__PURE__*/_jsxDEV(LumaDropDownBox, {\n      size: size,\n      isOpen: isOpen,\n      items: items,\n      selectedItems: allItems,\n      getMenuProps: getMenuProps,\n      highlightedIndex: highlightedIndex,\n      getItemProps: getItemProps,\n      renderComponent: /*#__PURE__*/_jsxDEV(LumaMultiDropDownOption, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 28\n      }, this),\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this) : null]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LumaMultiDropDown, \"86ysOuyKa93Ysw2IuUdINmom38g=\", false, function () {\n  return [useCombobox];\n});\n\n_c = LumaMultiDropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"LumaMultiDropDown\");","map":{"version":3,"names":["useEffect","useState","useCombobox","Root","MaxLengthValue","LumaIcon","LumaTextEntry","LumaDropDownBox","LumaMultiDropDownOption","inputDisplayValue","selectedDropdownItems","valueSelected","map","item","label","firstSelected","length","substring","LumaMultiDropDown","id","placeholder","error","readOnly","disabled","fullWidth","helperText","size","items","defaultSelectedItems","onChange","rest","allItems","setAllItems","isOpen","getMenuProps","highlightedIndex","getItemProps","getInputProps","getComboboxProps","openMenu","closeMenu","itemToString","selectedItem","stateReducer","state","actionAndChanges","changes","type","stateChangeTypes","InputKeyDownEnter","ItemClick","InputBlur","onStateChange","newItems","index","findIndex","value","slice"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaDropdown/LumaMultiDropDown/LumaMultiDropDown.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useCombobox } from 'downshift';\nimport { Root } from '../LumaDropDown.style';\nimport {\n  DataItemProps,\n  LumaMultiDropDownProps,\n  MaxLengthValue,\n} from '../LumaDropDownBasicType';\nimport { LumaIcon } from '../../LumaIcon';\nimport { LumaTextEntry } from '../../LumaTextEntry';\nimport { LumaDropDownBox } from '../../LumaDropdownBox';\nimport { LumaMultiDropDownOption } from './LumaMultiDropDownOption';\n\nconst inputDisplayValue = (selectedDropdownItems: DataItemProps[]) => {\n  const valueSelected = selectedDropdownItems.map((item: DataItemProps) => {\n    return item?.label;\n  });\n\n  let firstSelected = valueSelected[0] || '';\n  if (firstSelected.length > MaxLengthValue) {\n    firstSelected = firstSelected.substring(0, MaxLengthValue) + '...';\n  }\n\n  return selectedDropdownItems.length > 1\n    ? `${firstSelected}, +${selectedDropdownItems.length - 1}`\n    : `${firstSelected}`;\n};\n\nexport const LumaMultiDropDown = ({\n  name,\n  id,\n  placeholder,\n  error,\n  readOnly = true,\n  disabled,\n  fullWidth,\n  helperText,\n  size = 'medium',\n  items = [],\n  defaultSelectedItems,\n  onChange,\n  handleBlur,\n  ...rest\n}: LumaMultiDropDownProps) => {\n  const [allItems, setAllItems] = useState<DataItemProps[]>(\n    defaultSelectedItems || []\n  );\n  const {\n    isOpen,\n    getMenuProps,\n    highlightedIndex,\n    getItemProps,\n    getInputProps,\n    getComboboxProps,\n    openMenu,\n    closeMenu,\n  } = useCombobox({\n    items,\n    itemToString: (item: DataItemProps | null) => item?.label ?? '',\n    selectedItem: null,\n    stateReducer(state, actionAndChanges) {\n      const { changes, type } = actionAndChanges;\n\n      switch (type) {\n        case useCombobox.stateChangeTypes.InputKeyDownEnter:\n        case useCombobox.stateChangeTypes.ItemClick:\n        case useCombobox.stateChangeTypes.InputBlur:\n          return {\n            ...changes,\n            isOpen: !!changes.selectedItem,\n          };\n      }\n      return changes;\n    },\n    onStateChange({ type, selectedItem }) {\n      let newItems = [];\n      switch (type) {\n        case useCombobox.stateChangeTypes.InputKeyDownEnter:\n        case useCombobox.stateChangeTypes.ItemClick:\n          if (selectedItem) {\n            const index = allItems.findIndex(\n              ({ value }) => value === selectedItem.value\n            );\n            if (index > 0) {\n              newItems = [\n                ...allItems.slice(0, index),\n                ...allItems.slice(index + 1),\n              ];\n            } else if (index === 0) {\n              newItems = [...allItems.slice(1)];\n            } else {\n              newItems = [...allItems, selectedItem];\n            }\n            setAllItems(newItems);\n          }\n          break;\n        default:\n          break;\n      }\n    },\n  });\n\n  useEffect(() => {\n    onChange?.(allItems);\n  }, [allItems, onChange]);\n  return (\n    <Root\n      size={size}\n      error={error}\n      fullWidth={fullWidth}\n      {...getComboboxProps()}\n    >\n      <LumaTextEntry\n        {...getInputProps()}\n        label={placeholder}\n        disabled={disabled}\n        readOnly={readOnly}\n        value={inputDisplayValue(allItems)}\n        icon={\n          <LumaIcon\n            onClick={isOpen ? closeMenu : openMenu}\n            iconCode={isOpen ? 'angle-up' : 'angle-down'}\n          />\n        }\n        fullWidth={fullWidth}\n        helperText={helperText}\n        sizeVariant={size}\n        error={error}\n        useByDropdown={true}\n        onClick={() => {\n          if (!isOpen) openMenu();\n          else closeMenu();\n        }}\n        {...rest}\n      />\n      {!readOnly ? (\n        <LumaDropDownBox\n          size={size}\n          isOpen={isOpen}\n          items={items}\n          selectedItems={allItems}\n          getMenuProps={getMenuProps}\n          highlightedIndex={highlightedIndex}\n          getItemProps={getItemProps}\n          renderComponent={<LumaMultiDropDownOption />}\n          id={id}\n        />\n      ) : null}\n    </Root>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}