{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventConfirmations/OpsEventConfirmations/OpsEventConfirmations.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { useState, useEffect } from 'react';\nimport { EventConfirmationModal } from '../../EventConfirmationModal/EventConfirmationModal';\nimport { UnderlierColumn, formatIssuerColumn, StatusComponent, StructuredComponent, IssuerNameTooltip, ThresholdProximityColumn } from '../../AGGridTable/AGGridTableComponents';\nimport { AGGridConfirmationsTable } from '../../AGGridTable';\nimport { formatConfirmationStatus, formatEventType, getPrincipalProximityData, ISODateToFormat, eventDateFilterComparator } from '../../../utils/gridUtils';\nimport { useEventConfirmationOptions, StatusOptions } from '../../../utils/hooks/useEventConfirmationOptions';\nimport { ConfirmationPopUp } from '../../ConfirmationPopUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const OpsEventConfirmations = ({\n  eventsData\n}) => {\n  _s();\n\n  const {\n    events,\n    opsModal,\n    toastData\n  } = useEventConfirmationOptions();\n  const [rowData, setRowData] = useState([]);\n  const [productStructure, setProductStructure] = useState(undefined);\n  const [columnDefs] = useState([{\n    field: 'Product',\n    cellRenderer: formatIssuerColumn,\n    tooltipComponent: IssuerNameTooltip,\n    tooltipField: 'Product',\n    suppressMenu: true\n  }, {\n    field: 'Event Date',\n    comparator: eventDateFilterComparator\n  }, {\n    field: 'Registration Type',\n    filter: false,\n    suppressMenu: true\n  }, {\n    field: 'Event Type',\n    suppressMenu: true\n  }, {\n    field: 'Proximity',\n    suppressMenu: true,\n    sortable: false,\n    filter: false,\n    cellRenderer: ThresholdProximityColumn\n  }, {\n    field: 'Structure',\n    cellRenderer: StructuredComponent\n  }, {\n    field: 'Basket Type',\n    suppressMenu: true\n  }, {\n    field: 'Underliers',\n    cellRenderer: UnderlierColumn,\n    sortable: false,\n    filter: false,\n    suppressMenu: true\n  }, {\n    field: 'Event Calculation',\n    cellRenderer: StatusComponent,\n    suppressMenu: true\n  }]);\n  useEffect(() => {\n    const compileRowData = () => {\n      const updatedEvents = eventsData.map(event => {\n        const eventType = formatEventType(event.eventType);\n        const confirmationStatus = formatConfirmationStatus(event);\n        const {\n          principalProximityAboveOrBelow,\n          principalProximityValue\n        } = getPrincipalProximityData(event.principalProximity);\n        return {\n          activeUnderlier: event.activeUnderlier,\n          Product: event.productIdentifier,\n          'Event Date': ISODateToFormat(event.eventDate),\n          'Registration Type': event.registrationType,\n          'Event Type': eventType,\n          Threshold: event.principalProximityThreshold,\n          Structure: event.structureNameInternal,\n          Underliers: event.underlierList,\n          cusip: event.productIdentifier,\n          'Event Calculation': confirmationStatus == null ? void 0 : confirmationStatus.status,\n          'Basket Type': event.basketType,\n          cashSettlementRates: event.cashSettlementRates,\n          confirmationStatus: confirmationStatus,\n          eventProductData: event,\n          productSymbol: event.productSymbol,\n          principalProximityAboveOrBelow: principalProximityAboveOrBelow,\n          principalProximityValue: principalProximityValue,\n          underlierPerformance: event.underlierPerformance,\n          downsideType: event.downsideType\n        };\n      });\n      setRowData(updatedEvents);\n      events.setEvents(eventsData);\n    };\n\n    compileRowData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [eventsData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AGGridConfirmationsTable, {\n      rowData: rowData,\n      columnData: columnDefs,\n      setModalOpen: opsModal.setOpen,\n      modalOpen: opsModal.isOpen,\n      modalData: opsModal.data,\n      setModalData: opsModal.setData,\n      setProductStructure: setProductStructure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventConfirmationModal, {\n      modalOpen: opsModal.isOpen,\n      setModalOpen: opsModal.setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopUp, {\n      closePopUp: () => toastData.setStatus(StatusOptions.None),\n      productStructure: productStructure,\n      successHeader: \"Values Submitted\",\n      failureHeader: \"Failed to Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OpsEventConfirmations, \"f66NatEmdghYvJnBCdPZnm2Hbe0=\", false, function () {\n  return [useEventConfirmationOptions];\n});\n\n_c = OpsEventConfirmations;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpsEventConfirmations\");","map":{"version":3,"names":["useState","useEffect","EventConfirmationModal","UnderlierColumn","formatIssuerColumn","StatusComponent","StructuredComponent","IssuerNameTooltip","ThresholdProximityColumn","AGGridConfirmationsTable","formatConfirmationStatus","formatEventType","getPrincipalProximityData","ISODateToFormat","eventDateFilterComparator","useEventConfirmationOptions","StatusOptions","ConfirmationPopUp","OpsEventConfirmations","eventsData","events","opsModal","toastData","rowData","setRowData","productStructure","setProductStructure","undefined","columnDefs","field","cellRenderer","tooltipComponent","tooltipField","suppressMenu","comparator","filter","sortable","compileRowData","updatedEvents","map","event","eventType","confirmationStatus","principalProximityAboveOrBelow","principalProximityValue","principalProximity","activeUnderlier","Product","productIdentifier","eventDate","registrationType","Threshold","principalProximityThreshold","Structure","structureNameInternal","Underliers","underlierList","cusip","status","basketType","cashSettlementRates","eventProductData","productSymbol","underlierPerformance","downsideType","setEvents","setOpen","isOpen","data","setData","setStatus","None"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventConfirmations/OpsEventConfirmations/OpsEventConfirmations.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { EventProductData } from '@luma-fe-workspace/redux';\n\nimport { EventConfirmationModal } from '../../EventConfirmationModal/EventConfirmationModal';\nimport {\n  UnderlierColumn,\n  formatIssuerColumn,\n  StatusComponent,\n  StructuredComponent,\n  IssuerNameTooltip,\n  ThresholdProximityColumn,\n} from '../../AGGridTable/AGGridTableComponents';\nimport { AGGridConfirmationsTable, RowData } from '../../AGGridTable';\nimport {\n  formatConfirmationStatus,\n  formatEventType,\n  getPrincipalProximityData,\n  ISODateToFormat,\n  eventDateFilterComparator,\n} from '../../../utils/gridUtils';\nimport {\n  useEventConfirmationOptions,\n  StatusOptions,\n} from '../../../utils/hooks/useEventConfirmationOptions';\n\nimport { ConfirmationPopUp } from '../../ConfirmationPopUp';\n\ninterface Props {\n  eventsData: EventProductData[];\n}\n\nexport const OpsEventConfirmations = ({ eventsData }: Props) => {\n  const { events, opsModal, toastData } = useEventConfirmationOptions();\n  const [rowData, setRowData] = useState<RowData[] | []>([]);\n  const [productStructure, setProductStructure] = useState<string | undefined>(\n    undefined\n  );\n\n  const [columnDefs] = useState([\n    {\n      field: 'Product',\n      cellRenderer: formatIssuerColumn,\n      tooltipComponent: IssuerNameTooltip,\n      tooltipField: 'Product',\n      suppressMenu: true,\n    },\n    {\n      field: 'Event Date',\n      comparator: eventDateFilterComparator,\n    },\n    {\n      field: 'Registration Type',\n      filter: false,\n      suppressMenu: true,\n    },\n    { field: 'Event Type', suppressMenu: true },\n    {\n      field: 'Proximity',\n      suppressMenu: true,\n      sortable: false,\n      filter: false,\n      cellRenderer: ThresholdProximityColumn,\n    },\n    {\n      field: 'Structure',\n      cellRenderer: StructuredComponent,\n    },\n    { field: 'Basket Type', suppressMenu: true },\n    {\n      field: 'Underliers',\n      cellRenderer: UnderlierColumn,\n      sortable: false,\n      filter: false,\n      suppressMenu: true,\n    },\n    {\n      field: 'Event Calculation',\n      cellRenderer: StatusComponent,\n      suppressMenu: true,\n    },\n  ]);\n\n  useEffect(() => {\n    const compileRowData = () => {\n      const updatedEvents = eventsData.map((event) => {\n        const eventType = formatEventType(event.eventType);\n        const confirmationStatus = formatConfirmationStatus(event);\n        const { principalProximityAboveOrBelow, principalProximityValue } =\n          getPrincipalProximityData(event.principalProximity);\n\n        return {\n          activeUnderlier: event.activeUnderlier,\n          Product: event.productIdentifier,\n          'Event Date': ISODateToFormat(event.eventDate),\n          'Registration Type': event.registrationType,\n          'Event Type': eventType,\n          Threshold: event.principalProximityThreshold,\n          Structure: event.structureNameInternal,\n          Underliers: event.underlierList,\n          cusip: event.productIdentifier,\n          'Event Calculation': confirmationStatus?.status,\n          'Basket Type': event.basketType,\n          cashSettlementRates: event.cashSettlementRates,\n          confirmationStatus: confirmationStatus,\n          eventProductData: event,\n          productSymbol: event.productSymbol,\n          principalProximityAboveOrBelow: principalProximityAboveOrBelow,\n          principalProximityValue: principalProximityValue,\n          underlierPerformance: event.underlierPerformance,\n          downsideType: event.downsideType,\n        };\n      });\n\n      setRowData(updatedEvents);\n      events.setEvents(eventsData);\n    };\n    compileRowData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [eventsData]);\n\n  return (\n    <>\n      <AGGridConfirmationsTable\n        rowData={rowData}\n        columnData={columnDefs}\n        setModalOpen={opsModal.setOpen}\n        modalOpen={opsModal.isOpen}\n        modalData={opsModal.data}\n        setModalData={opsModal.setData}\n        setProductStructure={setProductStructure}\n      />\n      <EventConfirmationModal\n        modalOpen={opsModal.isOpen}\n        setModalOpen={opsModal.setOpen}\n      />\n      <ConfirmationPopUp\n        closePopUp={() => toastData.setStatus(StatusOptions.None)}\n        productStructure={productStructure}\n        successHeader=\"Values Submitted\"\n        failureHeader=\"Failed to Submit\"\n      />\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}