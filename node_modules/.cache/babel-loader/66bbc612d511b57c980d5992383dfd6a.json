{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/globalnav/src/lib/luma-globalnav.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { useNavigate } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector, logout, logoutOnAllTabs, selectAuth, lumaPermissionsArray, useUiPermissionsQuery, useGetUserTrainingStatusUsingGetQuery, useGetWhitelabelInfoUsingGetQuery, fetchCstAndNavigate } from '@luma-fe-workspace/redux';\nimport { getLumaAppLogin, isLocal, isProd } from '@luma-fe-workspace/utility';\nimport { buildNavTabs, FrontEndLibraries, GlobalNav } from '@luma-fe-workspace/design-system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LumaGlobalNav = ({\n  setShowTrainingModal\n}) => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const {\n    data: userPermissionsData,\n    isLoading: isLoadingUserPermissions\n  } = useUiPermissionsQuery({\n    permissions: lumaPermissionsArray\n  });\n  const userPermissions = userPermissionsData || [];\n  const {\n    data: userTrainingData,\n    isLoading: isLoadingTrainingStatus\n  } = useGetUserTrainingStatusUsingGetQuery();\n  const userTrainingDataProductTypes = (userTrainingData == null ? void 0 : userTrainingData.productTypes) || [];\n  const userInfo = useAppSelector(selectAuth);\n  const tabs = buildNavTabs(userPermissions, userTrainingDataProductTypes, FrontEndLibraries.REACT, isProd, userInfo.company, userInfo.permissions);\n  const {\n    data: whiteLabelInfo\n  } = useGetWhitelabelInfoUsingGetQuery();\n  const accountAriaLabel = 'profile button';\n  const menuAriaLabel = 'mobile menu';\n\n  const handleNavigate = tab => {\n    const {\n      route,\n      url\n    } = tab;\n\n    if (tab.title === 'Structured Products') {\n      if ((userTrainingData == null ? void 0 : userTrainingData.cdTraining) !== 'Completed') {\n        setShowTrainingModal(true);\n        return true;\n      }\n    }\n\n    if (url) {\n      if (url.includes('portal.lumafintech.com') || url.includes('portal.naviancapital.com')) {\n        fetchCstAndNavigate(cstToken => `${url}cst=${cstToken}`);\n      } else {\n        window.location.href = url;\n      }\n    } else if (route) {\n      navigate(route);\n      return;\n    }\n  };\n\n  const userName = userInfo.fullName ? userInfo.fullName : '';\n\n  const handleLogout = () => {\n    dispatch(logout()).then(() => {\n      logoutOnAllTabs();\n\n      if (isLocal) {\n        navigate('/');\n      } else {\n        window.location.href = getLumaAppLogin();\n      }\n    });\n  };\n\n  if (isLoadingUserPermissions || isLoadingTrainingStatus) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"...isLoading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalNav, {\n    tabs: tabs,\n    accountAriaLabel: accountAriaLabel,\n    menuAriaLabel: menuAriaLabel,\n    handleNavigate: handleNavigate,\n    userName: userName,\n    logout: handleLogout,\n    issuerLogo: whiteLabelInfo ? whiteLabelInfo.companyUri : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LumaGlobalNav, \"i7rmk4QxmxuDk2rC0wT18dEBBH0=\", false, function () {\n  return [useAppDispatch, useNavigate, useUiPermissionsQuery, useGetUserTrainingStatusUsingGetQuery, useAppSelector, useGetWhitelabelInfoUsingGetQuery];\n});\n\n_c = LumaGlobalNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"LumaGlobalNav\");","map":{"version":3,"names":["useNavigate","useAppDispatch","useAppSelector","logout","logoutOnAllTabs","selectAuth","lumaPermissionsArray","useUiPermissionsQuery","useGetUserTrainingStatusUsingGetQuery","useGetWhitelabelInfoUsingGetQuery","fetchCstAndNavigate","getLumaAppLogin","isLocal","isProd","buildNavTabs","FrontEndLibraries","GlobalNav","LumaGlobalNav","setShowTrainingModal","dispatch","navigate","data","userPermissionsData","isLoading","isLoadingUserPermissions","permissions","userPermissions","userTrainingData","isLoadingTrainingStatus","userTrainingDataProductTypes","productTypes","userInfo","tabs","REACT","company","whiteLabelInfo","accountAriaLabel","menuAriaLabel","handleNavigate","tab","route","url","title","cdTraining","includes","cstToken","window","location","href","userName","fullName","handleLogout","then","companyUri"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/globalnav/src/lib/luma-globalnav.tsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\n\nimport {\n  useAppDispatch,\n  useAppSelector,\n  logout,\n  logoutOnAllTabs,\n  selectAuth,\n  lumaPermissionsArray,\n  useUiPermissionsQuery,\n  useGetUserTrainingStatusUsingGetQuery,\n  useGetWhitelabelInfoUsingGetQuery,\n  WidgetPermissions,\n  fetchCstAndNavigate,\n} from '@luma-fe-workspace/redux';\nimport { getLumaAppLogin, isLocal, isProd } from '@luma-fe-workspace/utility';\nimport {\n  buildNavTabs,\n  FrontEndLibraries,\n  GlobalNav,\n  NavTabType,\n  ProductTypesType,\n} from '@luma-fe-workspace/design-system';\nimport { Dispatch, SetStateAction } from 'react';\n\ntype LumaGlobalNavProps = {\n  setShowTrainingModal: Dispatch<SetStateAction<boolean>>;\n};\n\nexport const LumaGlobalNav = ({ setShowTrainingModal }: LumaGlobalNavProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const { data: userPermissionsData, isLoading: isLoadingUserPermissions } =\n    useUiPermissionsQuery({\n      permissions: lumaPermissionsArray,\n    });\n\n  const userPermissions: WidgetPermissions[] = userPermissionsData || [];\n\n  const { data: userTrainingData, isLoading: isLoadingTrainingStatus } =\n    useGetUserTrainingStatusUsingGetQuery();\n\n  const userTrainingDataProductTypes: ProductTypesType =\n    userTrainingData?.productTypes || [];\n\n  const userInfo = useAppSelector(selectAuth);\n  const tabs = buildNavTabs(\n    userPermissions,\n    userTrainingDataProductTypes,\n    FrontEndLibraries.REACT,\n    isProd,\n    userInfo.company,\n    userInfo.permissions\n  );\n  const { data: whiteLabelInfo } = useGetWhitelabelInfoUsingGetQuery();\n\n  const accountAriaLabel = 'profile button';\n  const menuAriaLabel = 'mobile menu';\n\n  const handleNavigate = (tab: NavTabType): boolean | void => {\n    const { route, url } = tab;\n    if (tab.title === 'Structured Products') {\n      if (userTrainingData?.cdTraining !== 'Completed') {\n        setShowTrainingModal(true);\n        return true;\n      }\n    }\n    if (url) {\n      if (\n        url.includes('portal.lumafintech.com') ||\n        url.includes('portal.naviancapital.com')\n      ) {\n        fetchCstAndNavigate((cstToken: string) => `${url}cst=${cstToken}`);\n      } else {\n        window.location.href = url;\n      }\n    } else if (route) {\n      navigate(route);\n      return;\n    }\n  };\n\n  const userName = userInfo.fullName ? userInfo.fullName : '';\n\n  const handleLogout = () => {\n    dispatch(logout()).then(() => {\n      logoutOnAllTabs();\n      if (isLocal) {\n        navigate('/');\n      } else {\n        window.location.href = getLumaAppLogin();\n      }\n    });\n  };\n  if (isLoadingUserPermissions || isLoadingTrainingStatus) {\n    return <p>...isLoading</p>;\n  }\n\n  return (\n    <GlobalNav\n      tabs={tabs}\n      accountAriaLabel={accountAriaLabel}\n      menuAriaLabel={menuAriaLabel}\n      handleNavigate={handleNavigate}\n      userName={userName}\n      logout={handleLogout}\n      issuerLogo={whiteLabelInfo ? whiteLabelInfo.companyUri : ''}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}