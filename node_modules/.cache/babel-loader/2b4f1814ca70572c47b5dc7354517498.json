{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/Dialog/Dialog.tsx\";\nimport { StyledReactDialog } from './Dialog.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function generateAriaDialogRequirements(id) {\n  return {\n    titleId: `${id}_dialog_title`,\n    contentId: `${id}_dialog_content`\n  };\n}\nexport const Dialog = ({\n  id,\n  handleOnClose,\n  showDialog,\n  children,\n  parentId: _parentId = 'portals',\n  shouldCloseOnEsc: _shouldCloseOnEsc = true\n}) => {\n  const {\n    titleId,\n    contentId\n  } = generateAriaDialogRequirements(id);\n  return /*#__PURE__*/_jsxDEV(StyledReactDialog, {\n    id: id,\n    onRequestClose: handleOnClose,\n    shouldCloseOnEsc: _shouldCloseOnEsc,\n    shouldCloseOnOverlayClick: false,\n    ariaHideApp: false,\n    parentSelector: () => document.getElementById(_parentId) || document.body,\n    style: {\n      overlay: {\n        background: 'transparent',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%'\n      }\n    },\n    isOpen: showDialog,\n    aria: {\n      modal: 'false',\n      labelledby: titleId,\n      describedby: contentId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = Dialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"names":["StyledReactDialog","generateAriaDialogRequirements","id","titleId","contentId","Dialog","handleOnClose","showDialog","children","parentId","shouldCloseOnEsc","document","getElementById","body","overlay","background","position","top","left","display","justifyContent","alignItems","width","height","modal","labelledby","describedby"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/secondaries/src/components/Dialog/Dialog.tsx"],"sourcesContent":["import { StyledReactDialog } from './Dialog.styles';\nimport { ReactNode } from 'react';\n\nexport interface DialogProps {\n  /**\n   * ID used for accessibility. This id is used to generate title and content id's\n   */\n  id: string;\n  /**\n   * function that handles onClose event\n   */\n  handleOnClose: () => void;\n  /**\n   * Boolean value on whether to show Dialog\n   */\n  showDialog: boolean;\n  /**\n   * selector that returns the Parent of this. If not provided will be appended to #portals and then body.\n   *   If parent is provided and position: 'relative' the dialog will render in the center of parent and\n   *   forbids user to focus on any form elements within the parent\n   */\n  parentId?: string;\n  /**\n   * children will be embedded within Dialog\n   */\n  children?: ReactNode;\n  /**\n   * Should the dialog close by pressing Escape\n   *   default = true, for accessibility compliance\n   */\n  shouldCloseOnEsc?: boolean;\n}\n\nexport function generateAriaDialogRequirements(id: string) {\n  return {\n    titleId: `${id}_dialog_title`,\n    contentId: `${id}_dialog_content`,\n  };\n}\n\nexport const Dialog = ({\n  id,\n  handleOnClose,\n  showDialog,\n  children,\n  parentId = 'portals',\n  shouldCloseOnEsc = true,\n}: DialogProps) => {\n  const { titleId, contentId } = generateAriaDialogRequirements(id);\n  return (\n    <StyledReactDialog\n      id={id}\n      onRequestClose={handleOnClose}\n      shouldCloseOnEsc={shouldCloseOnEsc}\n      shouldCloseOnOverlayClick={false}\n      ariaHideApp={false}\n      parentSelector={() => document.getElementById(parentId) || document.body}\n      style={{\n        overlay: {\n          background: 'transparent',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          height: '100%',\n        },\n      }}\n      isOpen={showDialog}\n      aria={{\n        modal: 'false',\n        labelledby: titleId,\n        describedby: contentId,\n      }}\n    >\n      {children}\n    </StyledReactDialog>\n  );\n};\n"],"mappings":";AAAA,SAASA,iBAAT,QAAkC,iBAAlC;;AAiCA,OAAO,SAASC,8BAAT,CAAwCC,EAAxC,EAAoD;EACzD,OAAO;IACLC,OAAO,EAAG,GAAED,EAAG,eADV;IAELE,SAAS,EAAG,GAAEF,EAAG;EAFZ,CAAP;AAID;AAED,OAAO,MAAMG,MAAM,GAAG,CAAC;EACrBH,EADqB;EAErBI,aAFqB;EAGrBC,UAHqB;EAIrBC,QAJqB;EAKrBC,QAAQ,EAARA,SAAQ,GAAG,SALU;EAMrBC,gBAAgB,EAAhBA,iBAAgB,GAAG;AANE,CAAD,KAOH;EACjB,MAAM;IAAEP,OAAF;IAAWC;EAAX,IAAyBH,8BAA8B,CAACC,EAAD,CAA7D;EACA,oBACE,QAAC,iBAAD;IACE,EAAE,EAAEA,EADN;IAEE,cAAc,EAAEI,aAFlB;IAGE,gBAAgB,EAAEI,iBAHpB;IAIE,yBAAyB,EAAE,KAJ7B;IAKE,WAAW,EAAE,KALf;IAME,cAAc,EAAE,MAAMC,QAAQ,CAACC,cAAT,CAAwBH,SAAxB,KAAqCE,QAAQ,CAACE,IANtE;IAOE,KAAK,EAAE;MACLC,OAAO,EAAE;QACPC,UAAU,EAAE,aADL;QAEPC,QAAQ,EAAE,UAFH;QAGPC,GAAG,EAAE,CAHE;QAIPC,IAAI,EAAE,CAJC;QAKPC,OAAO,EAAE,MALF;QAMPC,cAAc,EAAE,QANT;QAOPC,UAAU,EAAE,QAPL;QAQPC,KAAK,EAAE,MARA;QASPC,MAAM,EAAE;MATD;IADJ,CAPT;IAoBE,MAAM,EAAEhB,UApBV;IAqBE,IAAI,EAAE;MACJiB,KAAK,EAAE,OADH;MAEJC,UAAU,EAAEtB,OAFR;MAGJuB,WAAW,EAAEtB;IAHT,CArBR;IAAA,UA2BGI;EA3BH;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CAxCM;KAAMH,M"},"metadata":{},"sourceType":"module"}