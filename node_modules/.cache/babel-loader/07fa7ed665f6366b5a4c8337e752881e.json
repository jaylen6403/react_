{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/redux/lifecycleManagerService/types.ts"],"sourcesContent":["import {\n  LifecycleEventLM,\n  PayoutHorizonData,\n  PayoutSummaryData,\n  PayoutBreakdownData,\n} from '../lifecycle';\n\n// Filters\nexport type FiltersApiArg = {\n  dateRange: { startDate: string; endDate: string };\n  portfolioAttributes: {\n    [key: string]: string[] | null;\n  };\n  productAttributes: {\n    [key: string]: string[] | null;\n  };\n};\n\nexport type GetFiltersUsingGetApiResponse = {\n  portfolioAttributes: {\n    country: string[];\n    region: string[];\n    office: string[];\n    financialAdvisor: string[];\n    representative: string[];\n    beneficiary: string[];\n    accounts: string[];\n  };\n  productAttributes: {\n    currency: string[];\n    structureType: string[];\n    eventType: string[];\n    productStatus: string[];\n    eventProximity: string[];\n    issuers: string[];\n  };\n};\n\nexport type GetFiltersUsingGetApiArg = DisplayCurrencyApiArg;\n\n// Events\nexport type GetEventsByUsingPostApiArg = FiltersApiArg &\n  DisplayCurrencyApiArg & {\n    pageNumber: number;\n    pageSize: number;\n  };\n\nexport type GetEventsByUsingPostApiResponse = {\n  content: LifecycleEventLM[];\n  pageable: {\n    sort: {\n      unsorted: false;\n      sorted: true;\n      empty: false;\n    };\n    pageSize: number;\n    pageNumber: number;\n    offset: number;\n    paged: true;\n    unpaged: false;\n  };\n  totalPages: number;\n  totalElements: number;\n  last: true;\n  first: false;\n  numberOfElements: number;\n  sort: {\n    unsorted: false;\n    sorted: true;\n    empty: false;\n  };\n  size: number;\n  number: number;\n  empty: false;\n};\n\n// Payout Horizon\nexport type GetPayoutHorizonByUsingPostApiArg = FiltersApiArg &\n  DisplayCurrencyApiArg;\n\nexport type GetPayoutHorizonByUsingPostApiResponse = PayoutHorizonData[];\n\n// PayoutSummary\nexport type GetPayoutSummaryUsingPostApiArg = FiltersApiArg &\n  DisplayCurrencyApiArg;\n\nexport type GetPayoutSummaryUsingPostApiResponse = PayoutSummaryData;\n\n// PayoutBreakdown\nexport type GetPayoutBreakdownUsingPostApiArg = FiltersApiArg &\n  DisplayCurrencyApiArg &\n  BreakdownValuesApiArg;\n\nexport type GetPayoutBreakdownUsingPostApiResponse = PayoutBreakdownData;\n\n// Accounts by Representatives\nexport type GetAccountsByRepresentativeUsingPostApiArg = FiltersApiArg &\n  DisplayCurrencyApiArg &\n  EventIdArg;\n\nexport type GetAccountsByRepresentativeUsingPostApiResponse =\n  AccountsByRepresentative[];\n\n// Additional Types\nexport interface AccountsByRepresentative {\n  representative: string;\n  accountNotionals: AccountNotional[];\n}\n\ninterface AccountNotional {\n  accountId: string;\n  notional: number;\n}\n\nexport interface DisplayCurrencyApiArg {\n  displayCurrency: string;\n}\n\ninterface BreakdownValuesApiArg {\n  groupByName: string;\n  breakdownType: string;\n}\n\ninterface EventIdArg {\n  eventId: string;\n}\n\n// Display Currencies\nexport type GetDisplayCurrenciesUsingGetApiResponse = string[];\n"],"mappings":""},"metadata":{},"sourceType":"module"}