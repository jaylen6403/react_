{"ast":null,"code":"import { baseApi as api } from './companyServiceBaseApi';\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: build => ({\n    getWhitelabelInfoUsingGet: build.query({\n      query: () => ({\n        url: `/whitelabelinfo`\n      })\n    })\n  }),\n  overrideExisting: false\n});\nexport { injectedRtkApi as companyProductServiceApi };\nexport const {\n  useGetWhitelabelInfoUsingGetQuery\n} = injectedRtkApi;","map":{"version":3,"names":["baseApi","api","injectedRtkApi","injectEndpoints","endpoints","build","getWhitelabelInfoUsingGet","query","url","overrideExisting","companyProductServiceApi","useGetWhitelabelInfoUsingGetQuery"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/redux/companyService/companyServiceEndpoints.ts"],"sourcesContent":["import { baseApi as api } from './companyServiceBaseApi';\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: (build) => ({\n    getWhitelabelInfoUsingGet: build.query<\n      GetWhitelabelInfoUsingGetApiResponse,\n      void\n    >({\n      query: () => ({\n        url: `/whitelabelinfo`,\n      }),\n    }),\n  }),\n  overrideExisting: false,\n});\nexport { injectedRtkApi as companyProductServiceApi };\n\nexport type GetWhitelabelInfoUsingGetApiResponse =\n  /** status 200 Ok */ WhitelabelInfo;\n\nexport type WhitelabelInfo = {\n  companyUri?: string;\n  contactEmail?: string;\n  disclaimers?: {\n    [key: string]: string;\n  };\n  hostCompanyUri?: string;\n};\nexport const { useGetWhitelabelInfoUsingGetQuery } = injectedRtkApi;\n"],"mappings":"AAAA,SAASA,OAAO,IAAIC,GAApB,QAA+B,yBAA/B;AACA,MAAMC,cAAc,GAAGD,GAAG,CAACE,eAAJ,CAAoB;EACzCC,SAAS,EAAGC,KAAD,KAAY;IACrBC,yBAAyB,EAAED,KAAK,CAACE,KAAN,CAGzB;MACAA,KAAK,EAAE,OAAO;QACZC,GAAG,EAAG;MADM,CAAP;IADP,CAHyB;EADN,CAAZ,CAD8B;EAWzCC,gBAAgB,EAAE;AAXuB,CAApB,CAAvB;AAaA,SAASP,cAAc,IAAIQ,wBAA3B;AAaA,OAAO,MAAM;EAAEC;AAAF,IAAwCT,cAA9C"},"metadata":{},"sourceType":"module"}