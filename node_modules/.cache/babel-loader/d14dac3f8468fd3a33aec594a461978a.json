{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaToggleSwitch/LabelSwitch/LumaToggleSwitch.tsx\";\nimport { Input, Switch, ToggleSwitchContainer } from './LumaToggleSwitch.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LumaToggleSwitch = ({\n  label,\n  checked: _checked = false,\n  disabled: _disabled = false,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(ToggleSwitchContainer, {\n    checked: _checked,\n    label: label,\n    disabled: _disabled,\n    \"data-testid\": \"toggle-test-id\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: _checked ? label.textChecked : label.textUnchecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"checkbox\",\n      checked: _checked,\n      onChange: onChange,\n      disabled: _disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      disabled: _disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = LumaToggleSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"LumaToggleSwitch\");","map":{"version":3,"names":["Input","Switch","ToggleSwitchContainer","LumaToggleSwitch","label","checked","disabled","onChange","textChecked","textUnchecked"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaToggleSwitch/LabelSwitch/LumaToggleSwitch.tsx"],"sourcesContent":["import { Input, Switch, ToggleSwitchContainer } from './LumaToggleSwitch.style';\n\ntype ToggleSwitchLabel = {\n  position: 'top' | 'side';\n  textChecked: string;\n  textUnchecked: string;\n};\n\nexport interface ToggleSwitchProps {\n  /**\n   * Toggle Switch label.\n   */\n  label: ToggleSwitchLabel;\n  /**\n   * Is switch checked.\n   */\n  checked: boolean;\n  /**\n   * Is switch disabled.\n   */\n  disabled: boolean;\n  /**\n   * Change handler.\n   */\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const LumaToggleSwitch = ({\n  label,\n  checked = false,\n  disabled = false,\n  onChange,\n}: ToggleSwitchProps) => {\n  return (\n    <ToggleSwitchContainer\n      checked={checked}\n      label={label}\n      disabled={disabled}\n      data-testid=\"toggle-test-id\"\n    >\n      <span>{checked ? label.textChecked : label.textUnchecked}</span>\n      <Input\n        type=\"checkbox\"\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled}\n      />\n      <Switch disabled={disabled} />\n    </ToggleSwitchContainer>\n  );\n};\n"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,qBAAxB,QAAqD,0BAArD;;AA2BA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;EAC/BC,KAD+B;EAE/BC,OAAO,EAAPA,QAAO,GAAG,KAFqB;EAG/BC,QAAQ,EAARA,SAAQ,GAAG,KAHoB;EAI/BC;AAJ+B,CAAD,KAKP;EACvB,oBACE,QAAC,qBAAD;IACE,OAAO,EAAEF,QADX;IAEE,KAAK,EAAED,KAFT;IAGE,QAAQ,EAAEE,SAHZ;IAIE,eAAY,gBAJd;IAAA,wBAME;MAAA,UAAOD,QAAO,GAAGD,KAAK,CAACI,WAAT,GAAuBJ,KAAK,CAACK;IAA3C;MAAA;MAAA;MAAA;IAAA,QANF,eAOE,QAAC,KAAD;MACE,IAAI,EAAC,UADP;MAEE,OAAO,EAAEJ,QAFX;MAGE,QAAQ,EAAEE,QAHZ;MAIE,QAAQ,EAAED;IAJZ;MAAA;MAAA;MAAA;IAAA,QAPF,eAaE,QAAC,MAAD;MAAQ,QAAQ,EAAEA;IAAlB;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAvBM;KAAMH,gB"},"metadata":{},"sourceType":"module"}