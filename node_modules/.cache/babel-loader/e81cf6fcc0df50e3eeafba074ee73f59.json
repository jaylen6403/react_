{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/lifecyclemanager/src/components/EventsPage/EventsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { selectLifecycleEventDisplayCurrency, useAppSelector, useGetFiltersUsingGetQuery } from '@luma-fe-workspace/redux';\nimport { useState } from 'react';\nimport { AccountsByRepDrawer } from '../AccountsByRepDrawer/AccountsByRepDrawer';\nimport { ColumnChartCard } from '../ColumnChart/ColumnChartCard';\nimport { EventTable } from '../EventTable/EventTable';\nimport { PayoutSummary } from '../PayoutSummary/PayoutSummary';\nimport { PieChartCard } from '../PieChart/PieChartCard';\nimport { EventContainer, EventMetrics, EventTableContainer } from './EventsPage.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventsPage = ({\n  currentGridApi,\n  setCurrentGridApi\n}) => {\n  _s();\n\n  const [selectedEvent, setSelectedEvent] = useState();\n  const [infoWidgetsCollapsed, setInfoWidgetCollapsed] = useState(false);\n  useGetFiltersUsingGetQuery({\n    displayCurrency: useAppSelector(selectLifecycleEventDisplayCurrency)\n  });\n  return /*#__PURE__*/_jsxDEV(EventContainer, {\n    children: [/*#__PURE__*/_jsxDEV(AccountsByRepDrawer, {\n      selectedEvent: selectedEvent,\n      setSelectedEvent: setSelectedEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventMetrics, {\n      children: [/*#__PURE__*/_jsxDEV(PayoutSummary, {\n        title: ' Payout Summary',\n        styles: 'width: 20%;',\n        isCollapsed: infoWidgetsCollapsed,\n        setIsCollapsed: setInfoWidgetCollapsed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColumnChartCard, {\n        title: 'Event Forecast',\n        styles: 'width: 48%;',\n        isCollapsed: infoWidgetsCollapsed,\n        setIsCollapsed: setInfoWidgetCollapsed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieChartCard, {\n        title: 'Exposure Allocation',\n        styles: 'width: 30%;',\n        isCollapsed: infoWidgetsCollapsed,\n        setIsCollapsed: setInfoWidgetCollapsed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventTableContainer, {\n      children: /*#__PURE__*/_jsxDEV(EventTable, {\n        setSelectedEvent: setSelectedEvent,\n        currentGridApi: currentGridApi,\n        setCurrentGridApi: setCurrentGridApi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EventsPage, \"ybj25ml98N/x7TQII/rOsMXYXuE=\", false, function () {\n  return [useGetFiltersUsingGetQuery, useAppSelector];\n});\n\n_c = EventsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["selectLifecycleEventDisplayCurrency","useAppSelector","useGetFiltersUsingGetQuery","useState","AccountsByRepDrawer","ColumnChartCard","EventTable","PayoutSummary","PieChartCard","EventContainer","EventMetrics","EventTableContainer","EventsPage","currentGridApi","setCurrentGridApi","selectedEvent","setSelectedEvent","infoWidgetsCollapsed","setInfoWidgetCollapsed","displayCurrency"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/lifecyclemanager/src/components/EventsPage/EventsPage.tsx"],"sourcesContent":["import {\n  LifecycleEventLM,\n  selectLifecycleEventDisplayCurrency,\n  useAppSelector,\n  useGetFiltersUsingGetQuery,\n} from '@luma-fe-workspace/redux';\nimport { useState } from 'react';\nimport { AccountsByRepDrawer } from '../AccountsByRepDrawer/AccountsByRepDrawer';\nimport { ColumnChartCard } from '../ColumnChart/ColumnChartCard';\nimport { EventTable } from '../EventTable/EventTable';\nimport { PayoutSummary } from '../PayoutSummary/PayoutSummary';\nimport { PieChartCard } from '../PieChart/PieChartCard';\nimport {\n  EventContainer,\n  EventMetrics,\n  EventTableContainer,\n} from './EventsPage.styles';\nimport { GridApi } from 'ag-grid-community';\n\ninterface EventsPageProps {\n  currentGridApi: GridApi | undefined;\n  setCurrentGridApi: (gridApi: GridApi) => void;\n}\n\nexport const EventsPage = ({\n  currentGridApi,\n  setCurrentGridApi,\n}: EventsPageProps) => {\n  const [selectedEvent, setSelectedEvent] = useState<LifecycleEventLM>();\n  const [infoWidgetsCollapsed, setInfoWidgetCollapsed] =\n    useState<boolean>(false);\n  useGetFiltersUsingGetQuery({\n    displayCurrency: useAppSelector(selectLifecycleEventDisplayCurrency),\n  });\n\n  return (\n    <EventContainer>\n      <AccountsByRepDrawer\n        selectedEvent={selectedEvent}\n        setSelectedEvent={setSelectedEvent}\n      />\n      <EventMetrics>\n        <PayoutSummary\n          title={' Payout Summary'}\n          styles={'width: 20%;'}\n          isCollapsed={infoWidgetsCollapsed}\n          setIsCollapsed={setInfoWidgetCollapsed}\n        />\n        <ColumnChartCard\n          title={'Event Forecast'}\n          styles={'width: 48%;'}\n          isCollapsed={infoWidgetsCollapsed}\n          setIsCollapsed={setInfoWidgetCollapsed}\n        />\n        <PieChartCard\n          title={'Exposure Allocation'}\n          styles={'width: 30%;'}\n          isCollapsed={infoWidgetsCollapsed}\n          setIsCollapsed={setInfoWidgetCollapsed}\n        />\n      </EventMetrics>\n      <EventTableContainer>\n        <EventTable\n          setSelectedEvent={setSelectedEvent}\n          currentGridApi={currentGridApi}\n          setCurrentGridApi={setCurrentGridApi}\n        />\n      </EventTableContainer>\n    </EventContainer>\n  );\n};\n"],"mappings":";;;;;AAAA,SAEEA,mCAFF,EAGEC,cAHF,EAIEC,0BAJF,QAKO,0BALP;AAMA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,4CAApC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,mBAHF,QAIO,qBAJP;;AAYA,OAAO,MAAMC,UAAU,GAAG,CAAC;EACzBC,cADyB;EAEzBC;AAFyB,CAAD,KAGH;EAAA;;EACrB,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,EAAlD;EACA,MAAM,CAACc,oBAAD,EAAuBC,sBAAvB,IACJf,QAAQ,CAAU,KAAV,CADV;EAEAD,0BAA0B,CAAC;IACzBiB,eAAe,EAAElB,cAAc,CAACD,mCAAD;EADN,CAAD,CAA1B;EAIA,oBACE,QAAC,cAAD;IAAA,wBACE,QAAC,mBAAD;MACE,aAAa,EAAEe,aADjB;MAEE,gBAAgB,EAAEC;IAFpB;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,YAAD;MAAA,wBACE,QAAC,aAAD;QACE,KAAK,EAAE,iBADT;QAEE,MAAM,EAAE,aAFV;QAGE,WAAW,EAAEC,oBAHf;QAIE,cAAc,EAAEC;MAJlB;QAAA;QAAA;QAAA;MAAA,QADF,eAOE,QAAC,eAAD;QACE,KAAK,EAAE,gBADT;QAEE,MAAM,EAAE,aAFV;QAGE,WAAW,EAAED,oBAHf;QAIE,cAAc,EAAEC;MAJlB;QAAA;QAAA;QAAA;MAAA,QAPF,eAaE,QAAC,YAAD;QACE,KAAK,EAAE,qBADT;QAEE,MAAM,EAAE,aAFV;QAGE,WAAW,EAAED,oBAHf;QAIE,cAAc,EAAEC;MAJlB;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAyBE,QAAC,mBAAD;MAAA,uBACE,QAAC,UAAD;QACE,gBAAgB,EAAEF,gBADpB;QAEE,cAAc,EAAEH,cAFlB;QAGE,iBAAiB,EAAEC;MAHrB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD,CA9CM;;GAAMF,U;UAOXV,0B,EACmBD,c;;;KARRW,U"},"metadata":{},"sourceType":"module"}