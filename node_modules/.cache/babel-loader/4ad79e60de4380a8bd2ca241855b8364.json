{"ast":null,"code":"import \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { colors } from '@luma-fe-workspace/design-system';\nexport const annuityDefault = {\n  'fixed index': {\n    count: 0,\n    totalSum: 0\n  },\n  'fixed rate': {\n    count: 0,\n    totalSum: 0\n  },\n  variable: {\n    count: 0,\n    totalSum: 0\n  },\n  'reg. index': {\n    count: 0,\n    totalSum: 0\n  },\n  'income*': {\n    count: 0,\n    totalSum: '--'\n  }\n};\nexport const policyAcctValues = data => {\n  if (!data) {\n    return annuityDefault;\n  }\n\n  const acctValues = data.reduce((acc, cur) => {\n    var _cur$productType;\n\n    const productType = cur == null ? void 0 : (_cur$productType = cur.productType) == null ? void 0 : _cur$productType.toLowerCase();\n\n    if (productType === 'fixed indexed annuity' && cur.accountValue) {\n      const totalFixedIndexCount = acc['fixed index'].count + 1;\n      const totalFixedIndexValue = acc['fixed index'].totalSum + cur.accountValue;\n      return Object.assign({}, acc, {\n        'fixed index': {\n          count: totalFixedIndexCount,\n          totalSum: totalFixedIndexValue\n        }\n      });\n    }\n\n    if (productType === 'fixed annuity products' && cur.accountValue) {\n      const totalFixedIndexCount = acc['fixed rate'].count + 1;\n      const totalFixedIndexValue = acc['fixed rate'].totalSum + cur.accountValue;\n      return Object.assign({}, acc, {\n        'fixed rate': {\n          count: totalFixedIndexCount,\n          totalSum: totalFixedIndexValue\n        }\n      });\n    }\n\n    if (productType === 'variable annuity products' && cur.accountValue) {\n      const totalFixedIndexCount = acc.variable.count + 1;\n      const totalFixedIndexValue = acc.variable.totalSum + cur.accountValue;\n      return Object.assign({}, acc, {\n        variable: {\n          count: totalFixedIndexCount,\n          totalSum: totalFixedIndexValue\n        }\n      });\n    }\n\n    if ((productType === 'registered index annuity' || productType === 'index variable annuity') && cur.accountValue) {\n      const totalFixedIndexCount = acc['reg. index'].count + 1;\n      const totalFixedIndexValue = acc['reg. index'].totalSum + cur.accountValue;\n      return Object.assign({}, acc, {\n        'reg. index': {\n          count: totalFixedIndexCount,\n          totalSum: totalFixedIndexValue\n        }\n      });\n    }\n\n    if ((productType === 'variable immediate annuity' || productType === 'fixed immediate annuity') && cur.accountValue) {\n      const totalFixedIndexCount = acc['income*'].count + 1;\n      const totalFixedIndexValue = acc['income*'].totalSum;\n      return Object.assign({}, acc, {\n        'income*': {\n          count: totalFixedIndexCount,\n          totalSum: totalFixedIndexValue\n        }\n      });\n    }\n\n    return acc;\n  }, annuityDefault);\n  return acctValues;\n};\nexport const annuityTableColumnData = [{\n  field: 'Type',\n  cellStyle: params => {\n    if (params.value === 'fixed index') {\n      return {\n        borderLeft: `0.5rem ${colors.accent90} solid`\n      };\n    }\n\n    if (params.value === 'fixed rate') {\n      return {\n        borderLeft: `0.5rem ${colors.accent70} solid`\n      };\n    }\n\n    if (params.value === 'variable') {\n      return {\n        borderLeft: `0.5rem ${colors.accent50} solid`\n      };\n    }\n\n    if (params.value === 'reg. index') {\n      return {\n        borderLeft: `0.5rem ${colors.accent40} solid`\n      };\n    }\n\n    if (params.value === 'income*') {\n      return {\n        borderLeft: `0.5rem ${colors.accent20} solid`\n      };\n    }\n\n    return;\n  }\n}, {\n  field: 'Policies',\n  cellStyle: {\n    justifyContent: 'flex-end'\n  },\n  headerClass: 'ag-right-aligned-header'\n}, {\n  field: 'Acct Value',\n  cellStyle: {\n    justifyContent: 'flex-end'\n  },\n  headerClass: 'ag-right-aligned-header'\n}];","map":{"version":3,"names":["colors","annuityDefault","count","totalSum","variable","policyAcctValues","data","acctValues","reduce","acc","cur","productType","toLowerCase","accountValue","totalFixedIndexCount","totalFixedIndexValue","annuityTableColumnData","field","cellStyle","params","value","borderLeft","accent90","accent70","accent50","accent40","accent20","justifyContent","headerClass"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/utils/annuityProductsPortfolio.utils.ts"],"sourcesContent":["import { ColDef } from 'ag-grid-community';\nimport { LifecycleProduct } from '@luma-fe-workspace/redux';\nimport { colors } from '@luma-fe-workspace/design-system';\n\ntype AnnuitySum = {\n  count: number;\n  totalSum: number;\n};\n\ntype emptySum = {\n  count: number;\n  totalSum: string;\n};\n\nexport type AnnuitySums = {\n  'fixed index': AnnuitySum;\n  'fixed rate': AnnuitySum;\n  variable: AnnuitySum;\n  'reg. index': AnnuitySum;\n  'income*': emptySum;\n};\n\nexport const annuityDefault: AnnuitySums = {\n  'fixed index': { count: 0, totalSum: 0 },\n  'fixed rate': { count: 0, totalSum: 0 },\n  variable: { count: 0, totalSum: 0 },\n  'reg. index': { count: 0, totalSum: 0 },\n  'income*': { count: 0, totalSum: '--' },\n};\n\nexport const policyAcctValues = (data: LifecycleProduct[]): AnnuitySums => {\n  if (!data) {\n    return annuityDefault;\n  }\n\n  const acctValues = data.reduce((acc: AnnuitySums, cur: LifecycleProduct) => {\n    const productType = cur?.productType?.toLowerCase();\n\n    if (productType === 'fixed indexed annuity' && cur.accountValue) {\n      const totalFixedIndexCount = acc['fixed index'].count + 1;\n      const totalFixedIndexValue =\n        acc['fixed index'].totalSum + cur.accountValue;\n      return {\n        ...acc,\n        'fixed index': {\n          count: totalFixedIndexCount,\n          totalSum: totalFixedIndexValue,\n        },\n      };\n    }\n    if (productType === 'fixed annuity products' && cur.accountValue) {\n      const totalFixedIndexCount = acc['fixed rate'].count + 1;\n      const totalFixedIndexValue =\n        acc['fixed rate'].totalSum + cur.accountValue;\n      return {\n        ...acc,\n        'fixed rate': {\n          count: totalFixedIndexCount,\n          totalSum: totalFixedIndexValue,\n        },\n      };\n    }\n    if (productType === 'variable annuity products' && cur.accountValue) {\n      const totalFixedIndexCount = acc.variable.count + 1;\n      const totalFixedIndexValue = acc.variable.totalSum + cur.accountValue;\n      return {\n        ...acc,\n        variable: {\n          count: totalFixedIndexCount,\n          totalSum: totalFixedIndexValue,\n        },\n      };\n    }\n    if (\n      (productType === 'registered index annuity' ||\n        productType === 'index variable annuity') &&\n      cur.accountValue\n    ) {\n      const totalFixedIndexCount = acc['reg. index'].count + 1;\n      const totalFixedIndexValue =\n        acc['reg. index'].totalSum + cur.accountValue;\n      return {\n        ...acc,\n        'reg. index': {\n          count: totalFixedIndexCount,\n          totalSum: totalFixedIndexValue,\n        },\n      };\n    }\n    if (\n      (productType === 'variable immediate annuity' ||\n        productType === 'fixed immediate annuity') &&\n      cur.accountValue\n    ) {\n      const totalFixedIndexCount = acc['income*'].count + 1;\n      const totalFixedIndexValue = acc['income*'].totalSum;\n      return {\n        ...acc,\n        'income*': {\n          count: totalFixedIndexCount,\n          totalSum: totalFixedIndexValue,\n        },\n      };\n    }\n\n    return acc;\n  }, annuityDefault);\n  return acctValues;\n};\n\nexport const annuityTableColumnData: ColDef[] = [\n  {\n    field: 'Type',\n    cellStyle: (params) => {\n      if (params.value === 'fixed index') {\n        return {\n          borderLeft: `0.5rem ${colors.accent90} solid`,\n        };\n      }\n      if (params.value === 'fixed rate') {\n        return {\n          borderLeft: `0.5rem ${colors.accent70} solid`,\n        };\n      }\n      if (params.value === 'variable') {\n        return {\n          borderLeft: `0.5rem ${colors.accent50} solid`,\n        };\n      }\n      if (params.value === 'reg. index') {\n        return {\n          borderLeft: `0.5rem ${colors.accent40} solid`,\n        };\n      }\n      if (params.value === 'income*') {\n        return {\n          borderLeft: `0.5rem ${colors.accent20} solid`,\n        };\n      }\n      return;\n    },\n  },\n  {\n    field: 'Policies',\n    cellStyle: { justifyContent: 'flex-end' },\n    headerClass: 'ag-right-aligned-header',\n  },\n  {\n    field: 'Acct Value',\n    cellStyle: { justifyContent: 'flex-end' },\n    headerClass: 'ag-right-aligned-header',\n  },\n];\n"],"mappings":";;AAEA,SAASA,MAAT,QAAuB,kCAAvB;AAoBA,OAAO,MAAMC,cAA2B,GAAG;EACzC,eAAe;IAAEC,KAAK,EAAE,CAAT;IAAYC,QAAQ,EAAE;EAAtB,CAD0B;EAEzC,cAAc;IAAED,KAAK,EAAE,CAAT;IAAYC,QAAQ,EAAE;EAAtB,CAF2B;EAGzCC,QAAQ,EAAE;IAAEF,KAAK,EAAE,CAAT;IAAYC,QAAQ,EAAE;EAAtB,CAH+B;EAIzC,cAAc;IAAED,KAAK,EAAE,CAAT;IAAYC,QAAQ,EAAE;EAAtB,CAJ2B;EAKzC,WAAW;IAAED,KAAK,EAAE,CAAT;IAAYC,QAAQ,EAAE;EAAtB;AAL8B,CAApC;AAQP,OAAO,MAAME,gBAAgB,GAAIC,IAAD,IAA2C;EACzE,IAAI,CAACA,IAAL,EAAW;IACT,OAAOL,cAAP;EACD;;EAED,MAAMM,UAAU,GAAGD,IAAI,CAACE,MAAL,CAAY,CAACC,GAAD,EAAmBC,GAAnB,KAA6C;IAAA;;IAC1E,MAAMC,WAAW,GAAGD,GAAH,wCAAGA,GAAG,CAAEC,WAAR,qBAAG,iBAAkBC,WAAlB,EAApB;;IAEA,IAAID,WAAW,KAAK,uBAAhB,IAA2CD,GAAG,CAACG,YAAnD,EAAiE;MAC/D,MAAMC,oBAAoB,GAAGL,GAAG,CAAC,aAAD,CAAH,CAAmBP,KAAnB,GAA2B,CAAxD;MACA,MAAMa,oBAAoB,GACxBN,GAAG,CAAC,aAAD,CAAH,CAAmBN,QAAnB,GAA8BO,GAAG,CAACG,YADpC;MAEA,yBACKJ,GADL;QAEE,eAAe;UACbP,KAAK,EAAEY,oBADM;UAEbX,QAAQ,EAAEY;QAFG;MAFjB;IAOD;;IACD,IAAIJ,WAAW,KAAK,wBAAhB,IAA4CD,GAAG,CAACG,YAApD,EAAkE;MAChE,MAAMC,oBAAoB,GAAGL,GAAG,CAAC,YAAD,CAAH,CAAkBP,KAAlB,GAA0B,CAAvD;MACA,MAAMa,oBAAoB,GACxBN,GAAG,CAAC,YAAD,CAAH,CAAkBN,QAAlB,GAA6BO,GAAG,CAACG,YADnC;MAEA,yBACKJ,GADL;QAEE,cAAc;UACZP,KAAK,EAAEY,oBADK;UAEZX,QAAQ,EAAEY;QAFE;MAFhB;IAOD;;IACD,IAAIJ,WAAW,KAAK,2BAAhB,IAA+CD,GAAG,CAACG,YAAvD,EAAqE;MACnE,MAAMC,oBAAoB,GAAGL,GAAG,CAACL,QAAJ,CAAaF,KAAb,GAAqB,CAAlD;MACA,MAAMa,oBAAoB,GAAGN,GAAG,CAACL,QAAJ,CAAaD,QAAb,GAAwBO,GAAG,CAACG,YAAzD;MACA,yBACKJ,GADL;QAEEL,QAAQ,EAAE;UACRF,KAAK,EAAEY,oBADC;UAERX,QAAQ,EAAEY;QAFF;MAFZ;IAOD;;IACD,IACE,CAACJ,WAAW,KAAK,0BAAhB,IACCA,WAAW,KAAK,wBADlB,KAEAD,GAAG,CAACG,YAHN,EAIE;MACA,MAAMC,oBAAoB,GAAGL,GAAG,CAAC,YAAD,CAAH,CAAkBP,KAAlB,GAA0B,CAAvD;MACA,MAAMa,oBAAoB,GACxBN,GAAG,CAAC,YAAD,CAAH,CAAkBN,QAAlB,GAA6BO,GAAG,CAACG,YADnC;MAEA,yBACKJ,GADL;QAEE,cAAc;UACZP,KAAK,EAAEY,oBADK;UAEZX,QAAQ,EAAEY;QAFE;MAFhB;IAOD;;IACD,IACE,CAACJ,WAAW,KAAK,4BAAhB,IACCA,WAAW,KAAK,yBADlB,KAEAD,GAAG,CAACG,YAHN,EAIE;MACA,MAAMC,oBAAoB,GAAGL,GAAG,CAAC,SAAD,CAAH,CAAeP,KAAf,GAAuB,CAApD;MACA,MAAMa,oBAAoB,GAAGN,GAAG,CAAC,SAAD,CAAH,CAAeN,QAA5C;MACA,yBACKM,GADL;QAEE,WAAW;UACTP,KAAK,EAAEY,oBADE;UAETX,QAAQ,EAAEY;QAFD;MAFb;IAOD;;IAED,OAAON,GAAP;EACD,CAvEkB,EAuEhBR,cAvEgB,CAAnB;EAwEA,OAAOM,UAAP;AACD,CA9EM;AAgFP,OAAO,MAAMS,sBAAgC,GAAG,CAC9C;EACEC,KAAK,EAAE,MADT;EAEEC,SAAS,EAAGC,MAAD,IAAY;IACrB,IAAIA,MAAM,CAACC,KAAP,KAAiB,aAArB,EAAoC;MAClC,OAAO;QACLC,UAAU,EAAG,UAASrB,MAAM,CAACsB,QAAS;MADjC,CAAP;IAGD;;IACD,IAAIH,MAAM,CAACC,KAAP,KAAiB,YAArB,EAAmC;MACjC,OAAO;QACLC,UAAU,EAAG,UAASrB,MAAM,CAACuB,QAAS;MADjC,CAAP;IAGD;;IACD,IAAIJ,MAAM,CAACC,KAAP,KAAiB,UAArB,EAAiC;MAC/B,OAAO;QACLC,UAAU,EAAG,UAASrB,MAAM,CAACwB,QAAS;MADjC,CAAP;IAGD;;IACD,IAAIL,MAAM,CAACC,KAAP,KAAiB,YAArB,EAAmC;MACjC,OAAO;QACLC,UAAU,EAAG,UAASrB,MAAM,CAACyB,QAAS;MADjC,CAAP;IAGD;;IACD,IAAIN,MAAM,CAACC,KAAP,KAAiB,SAArB,EAAgC;MAC9B,OAAO;QACLC,UAAU,EAAG,UAASrB,MAAM,CAAC0B,QAAS;MADjC,CAAP;IAGD;;IACD;EACD;AA7BH,CAD8C,EAgC9C;EACET,KAAK,EAAE,UADT;EAEEC,SAAS,EAAE;IAAES,cAAc,EAAE;EAAlB,CAFb;EAGEC,WAAW,EAAE;AAHf,CAhC8C,EAqC9C;EACEX,KAAK,EAAE,YADT;EAEEC,SAAS,EAAE;IAAES,cAAc,EAAE;EAAlB,CAFb;EAGEC,WAAW,EAAE;AAHf,CArC8C,CAAzC"},"metadata":{},"sourceType":"module"}