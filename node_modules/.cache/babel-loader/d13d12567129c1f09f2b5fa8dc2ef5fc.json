{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/AGGridTable/AGGridTableComponents.tsx\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport React, { useMemo } from 'react';\nimport { colors, LumaButton, LumaIcon } from '@luma-fe-workspace/design-system';\nimport { EventCalculationStatuses } from './AGGridTable';\nimport { bofaLogo } from '../../utils/constants';\nimport { getPhysicalSettlementData } from '../../utils/gridUtils';\nimport { IssuerContainer, IssuerLogo, UnderlierTicker, IssuerSecuritynumber, UnderlierWrapper, UnderlierText, StatusContainer, StatusLabelContainer, StatusLabel, SettlementRates, SettlementRate, SettlementRateLabel, SettlementRateValue, SecurityText, StructuredContainer, StructuredText, UnderlinerContainer, BasketTypeText, IssuerName, TooltipWrapper } from './AGGridTableComponents.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const generateUnderliers = ({\n  data\n}) => {\n  const {\n    Underliers: underliers\n  } = data;\n  let count = 0;\n  return /*#__PURE__*/_jsxDEV(UnderlinerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(BasketTypeText, {\n      children: data.basketType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UnderlierWrapper, {\n      children: underliers == null ? void 0 : underliers.map((underlier, idx) => {\n        count += 1;\n\n        if (count <= 3) {\n          return /*#__PURE__*/_jsxDEV(UnderlierTicker, {\n            children: /*#__PURE__*/_jsxDEV(UnderlierText, {\n              children: underlier.ticker\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this);\n        } else if (count === 4) {\n          return /*#__PURE__*/_jsxDEV(UnderlierTicker, {\n            children: /*#__PURE__*/_jsxDEV(UnderlierText, {\n              children: `+${count - 2} More`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this);\n        } else {\n          return null;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\nexport const formatIssuerColumn = ({\n  data\n}) => {\n  var _data$eventProductDat, _data$eventProductDat2;\n\n  return /*#__PURE__*/_jsxDEV(IssuerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(IssuerLogo, {\n      src: bofaLogo,\n      alt: ((_data$eventProductDat = data.eventProductData) == null ? void 0 : _data$eventProductDat.issuer) || '',\n      width: '8.75rem'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(IssuerName, {\n      children: ((_data$eventProductDat2 = data.eventProductData) == null ? void 0 : _data$eventProductDat2.issuer) || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(IssuerSecuritynumber, {\n      children: data.cusip || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SecurityText, {\n      children: data.productSymbol || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n};\nexport const generateActions = (setDrawerData, setProductStructure) => {\n  var _s = $RefreshSig$();\n\n  const EmailAction = ({\n    data\n  }) => {\n    _s();\n\n    const isButtonDisabled = useMemo(() => {\n      if (!data['Event Calculation']) return true;\n      if (![EventCalculationStatuses.CONFIRMED, EventCalculationStatuses.REVIEW].includes(data['Event Calculation'])) return true;\n      return false;\n    }, [data]);\n    return /*#__PURE__*/_jsxDEV(LumaButton, {\n      variant: \"secondary\",\n      size: \"small\",\n      disabled: isButtonDisabled,\n      onClick: () => {\n        var _data$eventProductDat3;\n\n        setDrawerData(data.eventProductData);\n        setProductStructure((_data$eventProductDat3 = data.eventProductData) == null ? void 0 : _data$eventProductDat3.structureNameInternal);\n      },\n      icon: {\n        iconComponent: /*#__PURE__*/_jsxDEV(LumaIcon, {\n          iconCode: \"envelope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 26\n        }, this)\n      },\n      children: \"Send Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(EmailAction, \"bxA6/6CuJ7FDGTPRNz23gt3t5AU=\");\n\n  return EmailAction;\n};\nconst statusSymbols = {\n  'Upcoming Event': {\n    color: 'black',\n    icon: 'calendar'\n  },\n  'Pending Event': {\n    color: colors.warning60,\n    icon: 'clock'\n  },\n  Review: {\n    color: colors.negative60,\n    icon: 'circle-xmark'\n  },\n  Confirmed: {\n    color: colors.positive60,\n    icon: 'check-circle'\n  }\n};\nconst cashSettlementRatesMapping = [{\n  fieldName: 'lumaRate',\n  label: 'Luma'\n}, {\n  fieldName: 'issuerRate',\n  label: 'Issuer'\n}, {\n  fieldName: 'rate',\n  label: 'Confirmed'\n}];\nconst physicalSettlementRatesMapping = [{\n  fieldName: 'lumaValue',\n  label: 'Luma'\n}, {\n  fieldName: 'issuerValue',\n  label: 'Issuer'\n}, {\n  fieldName: 'value',\n  label: 'Confirmed'\n}];\n\nconst getPhysicalSettlement = (physicalSettlements, fieldName) => {\n  if (!physicalSettlements) return '';\n  const {\n    cash: cashSettlement,\n    shares: sharesSettlement\n  } = getPhysicalSettlementData(physicalSettlements);\n  const shares = sharesSettlement != null && sharesSettlement[fieldName] ? `${sharesSettlement[fieldName]} Shares` : '';\n  const cash = cashSettlement != null && cashSettlement[fieldName] ? `$${(cashSettlement == null ? void 0 : cashSettlement[fieldName]) || 0}` : '';\n  return sharesSettlement != null && sharesSettlement[fieldName] ? `${shares}${shares && cash && ' + '}${cash}` : null;\n};\n\nconst formatCashSettlement = (rates, type) => {\n  return rates[type] ? `${rates[type]}%` : null;\n};\n\nexport const StatusComponent = ({\n  data\n}) => {\n  var _statusSymbols$eventS;\n\n  const eventStatus = data == null ? void 0 : data.eventStatus;\n  return /*#__PURE__*/_jsxDEV(StatusContainer, {\n    children: [(eventStatus == null ? void 0 : eventStatus.status) && /*#__PURE__*/_jsxDEV(StatusLabelContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StatusLabel, {\n        color: (_statusSymbols$eventS = statusSymbols[eventStatus.status]) == null ? void 0 : _statusSymbols$eventS.color,\n        children: eventStatus.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), eventStatus.status === EventCalculationStatuses.CONFIRMED ? /*#__PURE__*/_jsxDEV(SettlementRateValue, {\n        children: /*#__PURE__*/_jsxDEV(SettlementRateValue, {\n          children: eventStatus != null && eventStatus.cashSettlementRates ? formatCashSettlement(eventStatus.cashSettlementRates, 'rate') : getPhysicalSettlement(eventStatus.physicalSettlementRates, 'value')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), (eventStatus == null ? void 0 : eventStatus.cashSettlementRates) && /*#__PURE__*/_jsxDEV(SettlementRates, {\n      children: cashSettlementRatesMapping.map((cashSettlementRate, idx) => {\n        var _eventStatus$cashSett;\n\n        if (cashSettlementRate.label === 'Confirmed' && eventStatus.status === EventCalculationStatuses.CONFIRMED) return null;\n        return (_eventStatus$cashSett = eventStatus.cashSettlementRates) != null && _eventStatus$cashSett[cashSettlementRate.fieldName] ? /*#__PURE__*/_jsxDEV(SettlementRate, {\n          children: [/*#__PURE__*/_jsxDEV(SettlementRateLabel, {\n            children: cashSettlementRate.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SettlementRateValue, {\n            children: formatCashSettlement(eventStatus.cashSettlementRates, cashSettlementRate.fieldName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this) : null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this), (eventStatus == null ? void 0 : eventStatus.physicalSettlementRates) && /*#__PURE__*/_jsxDEV(SettlementRates, {\n      children: physicalSettlementRatesMapping.map((physicalSettlement, idx) => {\n        const physicalSettlementValue = getPhysicalSettlement(eventStatus.physicalSettlementRates, physicalSettlement.fieldName);\n        if (!physicalSettlementValue || physicalSettlement.label === 'Confirmed' && eventStatus.status === EventCalculationStatuses.CONFIRMED) return null;\n        return /*#__PURE__*/_jsxDEV(SettlementRate, {\n          children: [/*#__PURE__*/_jsxDEV(SettlementRateLabel, {\n            children: physicalSettlement.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SettlementRateValue, {\n            children: physicalSettlementValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusComponent;\nexport const StructuredComponent = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(StructuredContainer, {\n  children: /*#__PURE__*/_jsxDEV(StructuredText, {\n    children: data.Structure\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 271,\n  columnNumber: 3\n}, this);\n_c2 = StructuredComponent;\nexport const IssuerNameTooltip = ({\n  data\n}) => {\n  var _data$eventProductDat4;\n\n  return /*#__PURE__*/_jsxDEV(TooltipWrapper, {\n    children: data == null ? void 0 : (_data$eventProductDat4 = data.eventProductData) == null ? void 0 : _data$eventProductDat4.issuer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 10\n  }, this);\n};\n_c3 = IssuerNameTooltip;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StatusComponent\");\n$RefreshReg$(_c2, \"StructuredComponent\");\n$RefreshReg$(_c3, \"IssuerNameTooltip\");","map":{"version":3,"names":["React","useMemo","colors","LumaButton","LumaIcon","EventCalculationStatuses","bofaLogo","getPhysicalSettlementData","IssuerContainer","IssuerLogo","UnderlierTicker","IssuerSecuritynumber","UnderlierWrapper","UnderlierText","StatusContainer","StatusLabelContainer","StatusLabel","SettlementRates","SettlementRate","SettlementRateLabel","SettlementRateValue","SecurityText","StructuredContainer","StructuredText","UnderlinerContainer","BasketTypeText","IssuerName","TooltipWrapper","generateUnderliers","data","Underliers","underliers","count","basketType","map","underlier","idx","ticker","formatIssuerColumn","eventProductData","issuer","cusip","productSymbol","generateActions","setDrawerData","setProductStructure","EmailAction","isButtonDisabled","CONFIRMED","REVIEW","includes","structureNameInternal","iconComponent","statusSymbols","color","icon","warning60","Review","negative60","Confirmed","positive60","cashSettlementRatesMapping","fieldName","label","physicalSettlementRatesMapping","getPhysicalSettlement","physicalSettlements","cash","cashSettlement","shares","sharesSettlement","formatCashSettlement","rates","type","StatusComponent","eventStatus","status","cashSettlementRates","physicalSettlementRates","cashSettlementRate","physicalSettlement","physicalSettlementValue","StructuredComponent","Structure","IssuerNameTooltip"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/AGGridTable/AGGridTableComponents.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, useMemo } from 'react';\n\nimport {\n  PhysicalSettlement,\n  UnderlierRest,\n  CashSettlementRates,\n  EventProductData,\n} from '@luma-fe-workspace/redux';\nimport { colors, LumaButton, LumaIcon } from '@luma-fe-workspace/design-system';\nimport { RowData, EventStatus, EventCalculationStatuses } from './AGGridTable';\nimport { IconName } from '@fortawesome/fontawesome-svg-core';\nimport { bofaLogo } from '../../utils/constants';\nimport { ITooltipParams } from 'ag-grid-community';\nimport { getPhysicalSettlementData } from '../../utils/gridUtils';\n\nimport {\n  IssuerContainer,\n  IssuerLogo,\n  UnderlierTicker,\n  IssuerSecuritynumber,\n  UnderlierWrapper,\n  UnderlierText,\n  StatusContainer,\n  StatusLabelContainer,\n  StatusLabel,\n  SettlementRates,\n  SettlementRate,\n  SettlementRateLabel,\n  SettlementRateValue,\n  SecurityText,\n  StructuredContainer,\n  StructuredText,\n  UnderlinerContainer,\n  BasketTypeText,\n  IssuerName,\n  TooltipWrapper,\n} from './AGGridTableComponents.style';\n\ninterface ColumnProps {\n  data: RowData;\n}\nexport const generateUnderliers = ({ data }: ColumnProps) => {\n  const { Underliers: underliers } = data;\n  let count = 0;\n  return (\n    <UnderlinerContainer>\n      <BasketTypeText>{data.basketType}</BasketTypeText>\n      <UnderlierWrapper>\n        {underliers?.map((underlier: UnderlierRest, idx: number) => {\n          count += 1;\n          if (count <= 3) {\n            return (\n              <UnderlierTicker key={idx}>\n                <UnderlierText>{underlier.ticker}</UnderlierText>\n              </UnderlierTicker>\n            );\n          } else if (count === 4) {\n            return (\n              <UnderlierTicker key={idx}>\n                <UnderlierText>{`+${count - 2} More`}</UnderlierText>\n              </UnderlierTicker>\n            );\n          } else {\n            return null;\n          }\n        })}\n      </UnderlierWrapper>\n    </UnderlinerContainer>\n  );\n};\n\nexport const formatIssuerColumn = ({ data }: ColumnProps) => (\n  <IssuerContainer>\n    <IssuerLogo\n      src={bofaLogo}\n      alt={data.eventProductData?.issuer || ''}\n      width={'8.75rem'}\n    />\n    <IssuerName>{data.eventProductData?.issuer || ''}</IssuerName>\n    <IssuerSecuritynumber>{data.cusip || ''}</IssuerSecuritynumber>\n    <SecurityText>{data.productSymbol || ''}</SecurityText>\n  </IssuerContainer>\n);\n\nexport const generateActions = (\n  setDrawerData: Dispatch<SetStateAction<EventProductData | undefined>>,\n  setProductStructure: Dispatch<SetStateAction<string | undefined>>\n) => {\n  const EmailAction = ({ data }: ColumnProps) => {\n    const isButtonDisabled = useMemo((): boolean => {\n      if (!data['Event Calculation']) return true;\n      if (\n        ![\n          EventCalculationStatuses.CONFIRMED,\n          EventCalculationStatuses.REVIEW,\n        ].includes(data['Event Calculation'])\n      )\n        return true;\n      return false;\n    }, [data]);\n\n    return (\n      <LumaButton\n        variant=\"secondary\"\n        size=\"small\"\n        disabled={isButtonDisabled}\n        onClick={() => {\n          setDrawerData(data.eventProductData);\n          setProductStructure(data.eventProductData?.structureNameInternal);\n        }}\n        icon={{\n          iconComponent: <LumaIcon iconCode=\"envelope\" />,\n        }}\n      >\n        Send Notification\n      </LumaButton>\n    );\n  };\n  return EmailAction;\n};\n\ninterface StatusProps {\n  color: string;\n  icon: IconName;\n}\ninterface StatusSymbols {\n  [key: string]: StatusProps;\n}\n\nconst statusSymbols: StatusSymbols = {\n  'Upcoming Event': { color: 'black', icon: 'calendar' },\n  'Pending Event': { color: colors.warning60, icon: 'clock' },\n  Review: { color: colors.negative60, icon: 'circle-xmark' },\n  Confirmed: { color: colors.positive60, icon: 'check-circle' },\n};\n\ninterface CashSettlementRateMap {\n  fieldName: keyof CashSettlementRates;\n  label: string;\n}\nconst cashSettlementRatesMapping: CashSettlementRateMap[] = [\n  { fieldName: 'lumaRate', label: 'Luma' },\n  { fieldName: 'issuerRate', label: 'Issuer' },\n  { fieldName: 'rate', label: 'Confirmed' },\n];\n\ninterface PhysicalSettlementMap {\n  fieldName: 'lumaValue' | 'issuerValue' | 'value';\n  label: string;\n}\nconst physicalSettlementRatesMapping: PhysicalSettlementMap[] = [\n  { fieldName: 'lumaValue', label: 'Luma' },\n  { fieldName: 'issuerValue', label: 'Issuer' },\n  { fieldName: 'value', label: 'Confirmed' },\n];\n\nconst getPhysicalSettlement = (\n  physicalSettlements: PhysicalSettlement[] | undefined,\n  fieldName: 'lumaValue' | 'issuerValue' | 'value'\n): string | null => {\n  if (!physicalSettlements) return '';\n  const { cash: cashSettlement, shares: sharesSettlement } =\n    getPhysicalSettlementData(physicalSettlements);\n\n  const shares: string = sharesSettlement?.[fieldName]\n    ? `${sharesSettlement[fieldName]} Shares`\n    : '';\n  const cash: string = cashSettlement?.[fieldName]\n    ? `$${cashSettlement?.[fieldName] || 0}`\n    : '';\n  return sharesSettlement?.[fieldName]\n    ? `${shares}${shares && cash && ' + '}${cash}`\n    : null;\n};\n\nconst formatCashSettlement = (\n  rates: CashSettlementRates,\n  type: keyof CashSettlementRates\n): string | null => {\n  return rates[type] ? `${rates[type]}%` : null;\n};\n\nexport const StatusComponent = ({ data }: ColumnProps) => {\n  const eventStatus: EventStatus | undefined = data?.eventStatus;\n  return (\n    <StatusContainer>\n      {eventStatus?.status && (\n        <StatusLabelContainer>\n          <StatusLabel color={statusSymbols[eventStatus.status]?.color}>\n            {eventStatus.status}\n          </StatusLabel>\n\n          {eventStatus.status === EventCalculationStatuses.CONFIRMED ? (\n            <SettlementRateValue>\n              <SettlementRateValue>\n                {eventStatus?.cashSettlementRates\n                  ? formatCashSettlement(\n                      eventStatus.cashSettlementRates,\n                      'rate'\n                    )\n                  : getPhysicalSettlement(\n                      eventStatus.physicalSettlementRates,\n                      'value'\n                    )}\n              </SettlementRateValue>\n            </SettlementRateValue>\n          ) : null}\n        </StatusLabelContainer>\n      )}\n      {eventStatus?.cashSettlementRates && (\n        <SettlementRates>\n          {cashSettlementRatesMapping.map(\n            (cashSettlementRate: CashSettlementRateMap, idx: number) => {\n              if (\n                cashSettlementRate.label === 'Confirmed' &&\n                eventStatus.status === EventCalculationStatuses.CONFIRMED\n              )\n                return null;\n              return eventStatus.cashSettlementRates?.[\n                cashSettlementRate.fieldName\n              ] ? (\n                <SettlementRate key={idx}>\n                  <SettlementRateLabel>\n                    {cashSettlementRate.label}\n                  </SettlementRateLabel>\n                  <SettlementRateValue>\n                    {formatCashSettlement(\n                      eventStatus.cashSettlementRates,\n                      cashSettlementRate.fieldName\n                    )}\n                  </SettlementRateValue>\n                </SettlementRate>\n              ) : null;\n            }\n          )}\n        </SettlementRates>\n      )}\n      {eventStatus?.physicalSettlementRates && (\n        <SettlementRates>\n          {physicalSettlementRatesMapping.map(\n            (physicalSettlement: PhysicalSettlementMap, idx: number) => {\n              const physicalSettlementValue = getPhysicalSettlement(\n                eventStatus.physicalSettlementRates,\n                physicalSettlement.fieldName\n              );\n              if (\n                !physicalSettlementValue ||\n                (physicalSettlement.label === 'Confirmed' &&\n                  eventStatus.status === EventCalculationStatuses.CONFIRMED)\n              )\n                return null;\n              return (\n                <SettlementRate key={idx}>\n                  <SettlementRateLabel>\n                    {physicalSettlement.label}\n                  </SettlementRateLabel>\n                  <SettlementRateValue>\n                    {physicalSettlementValue}\n                  </SettlementRateValue>\n                </SettlementRate>\n              );\n            }\n          )}\n        </SettlementRates>\n      )}\n    </StatusContainer>\n  );\n};\n\nexport const StructuredComponent = ({ data }: ColumnProps) => (\n  <StructuredContainer>\n    <StructuredText>{data.Structure}</StructuredText>\n  </StructuredContainer>\n);\n\nexport const IssuerNameTooltip = ({\n  data,\n}: ITooltipParams<RowData, string>) => {\n  return <TooltipWrapper>{data?.eventProductData?.issuer}</TooltipWrapper>;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0CC,OAA1C,QAAyD,OAAzD;AAQA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,QAA7B,QAA6C,kCAA7C;AACA,SAA+BC,wBAA/B,QAA+D,eAA/D;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,SAASC,yBAAT,QAA0C,uBAA1C;AAEA,SACEC,eADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,oBAJF,EAKEC,gBALF,EAMEC,aANF,EAOEC,eAPF,EAQEC,oBARF,EASEC,WATF,EAUEC,eAVF,EAWEC,cAXF,EAYEC,mBAZF,EAaEC,mBAbF,EAcEC,YAdF,EAeEC,mBAfF,EAgBEC,cAhBF,EAiBEC,mBAjBF,EAkBEC,cAlBF,EAmBEC,UAnBF,EAoBEC,cApBF,QAqBO,+BArBP;;AA0BA,OAAO,MAAMC,kBAAkB,GAAG,CAAC;EAAEC;AAAF,CAAD,KAA2B;EAC3D,MAAM;IAAEC,UAAU,EAAEC;EAAd,IAA6BF,IAAnC;EACA,IAAIG,KAAK,GAAG,CAAZ;EACA,oBACE,QAAC,mBAAD;IAAA,wBACE,QAAC,cAAD;MAAA,UAAiBH,IAAI,CAACI;IAAtB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,gBAAD;MAAA,UACGF,UADH,oBACGA,UAAU,CAAEG,GAAZ,CAAgB,CAACC,SAAD,EAA2BC,GAA3B,KAA2C;QAC1DJ,KAAK,IAAI,CAAT;;QACA,IAAIA,KAAK,IAAI,CAAb,EAAgB;UACd,oBACE,QAAC,eAAD;YAAA,uBACE,QAAC,aAAD;cAAA,UAAgBG,SAAS,CAACE;YAA1B;cAAA;cAAA;cAAA;YAAA;UADF,GAAsBD,GAAtB;YAAA;YAAA;YAAA;UAAA,QADF;QAKD,CAND,MAMO,IAAIJ,KAAK,KAAK,CAAd,EAAiB;UACtB,oBACE,QAAC,eAAD;YAAA,uBACE,QAAC,aAAD;cAAA,UAAiB,IAAGA,KAAK,GAAG,CAAE;YAA9B;cAAA;cAAA;cAAA;YAAA;UADF,GAAsBI,GAAtB;YAAA;YAAA;YAAA;UAAA,QADF;QAKD,CANM,MAMA;UACL,OAAO,IAAP;QACD;MACF,CAjBA;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CA5BM;AA8BP,OAAO,MAAME,kBAAkB,GAAG,CAAC;EAAET;AAAF,CAAD;EAAA;;EAAA,oBAChC,QAAC,eAAD;IAAA,wBACE,QAAC,UAAD;MACE,GAAG,EAAEvB,QADP;MAEE,GAAG,EAAE,0BAAAuB,IAAI,CAACU,gBAAL,2CAAuBC,MAAvB,KAAiC,EAFxC;MAGE,KAAK,EAAE;IAHT;MAAA;MAAA;MAAA;IAAA,QADF,eAME,QAAC,UAAD;MAAA,UAAa,2BAAAX,IAAI,CAACU,gBAAL,4CAAuBC,MAAvB,KAAiC;IAA9C;MAAA;MAAA;MAAA;IAAA,QANF,eAOE,QAAC,oBAAD;MAAA,UAAuBX,IAAI,CAACY,KAAL,IAAc;IAArC;MAAA;MAAA;MAAA;IAAA,QAPF,eAQE,QAAC,YAAD;MAAA,UAAeZ,IAAI,CAACa,aAAL,IAAsB;IAArC;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADgC;AAAA,CAA3B;AAaP,OAAO,MAAMC,eAAe,GAAG,CAC7BC,aAD6B,EAE7BC,mBAF6B,KAG1B;EAAA;;EACH,MAAMC,WAAW,GAAG,CAAC;IAAEjB;EAAF,CAAD,KAA2B;IAAA;;IAC7C,MAAMkB,gBAAgB,GAAG9C,OAAO,CAAC,MAAe;MAC9C,IAAI,CAAC4B,IAAI,CAAC,mBAAD,CAAT,EAAgC,OAAO,IAAP;MAChC,IACE,CAAC,CACCxB,wBAAwB,CAAC2C,SAD1B,EAEC3C,wBAAwB,CAAC4C,MAF1B,EAGCC,QAHD,CAGUrB,IAAI,CAAC,mBAAD,CAHd,CADH,EAME,OAAO,IAAP;MACF,OAAO,KAAP;IACD,CAV+B,EAU7B,CAACA,IAAD,CAV6B,CAAhC;IAYA,oBACE,QAAC,UAAD;MACE,OAAO,EAAC,WADV;MAEE,IAAI,EAAC,OAFP;MAGE,QAAQ,EAAEkB,gBAHZ;MAIE,OAAO,EAAE,MAAM;QAAA;;QACbH,aAAa,CAACf,IAAI,CAACU,gBAAN,CAAb;QACAM,mBAAmB,2BAAChB,IAAI,CAACU,gBAAN,qBAAC,uBAAuBY,qBAAxB,CAAnB;MACD,CAPH;MAQE,IAAI,EAAE;QACJC,aAAa,eAAE,QAAC,QAAD;UAAU,QAAQ,EAAC;QAAnB;UAAA;UAAA;UAAA;QAAA;MADX,CARR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAgBD,CA7BD;;EADG,GACGN,WADH;;EA+BH,OAAOA,WAAP;AACD,CAnCM;AA6CP,MAAMO,aAA4B,GAAG;EACnC,kBAAkB;IAAEC,KAAK,EAAE,OAAT;IAAkBC,IAAI,EAAE;EAAxB,CADiB;EAEnC,iBAAiB;IAAED,KAAK,EAAEpD,MAAM,CAACsD,SAAhB;IAA2BD,IAAI,EAAE;EAAjC,CAFkB;EAGnCE,MAAM,EAAE;IAAEH,KAAK,EAAEpD,MAAM,CAACwD,UAAhB;IAA4BH,IAAI,EAAE;EAAlC,CAH2B;EAInCI,SAAS,EAAE;IAAEL,KAAK,EAAEpD,MAAM,CAAC0D,UAAhB;IAA4BL,IAAI,EAAE;EAAlC;AAJwB,CAArC;AAWA,MAAMM,0BAAmD,GAAG,CAC1D;EAAEC,SAAS,EAAE,UAAb;EAAyBC,KAAK,EAAE;AAAhC,CAD0D,EAE1D;EAAED,SAAS,EAAE,YAAb;EAA2BC,KAAK,EAAE;AAAlC,CAF0D,EAG1D;EAAED,SAAS,EAAE,MAAb;EAAqBC,KAAK,EAAE;AAA5B,CAH0D,CAA5D;AAUA,MAAMC,8BAAuD,GAAG,CAC9D;EAAEF,SAAS,EAAE,WAAb;EAA0BC,KAAK,EAAE;AAAjC,CAD8D,EAE9D;EAAED,SAAS,EAAE,aAAb;EAA4BC,KAAK,EAAE;AAAnC,CAF8D,EAG9D;EAAED,SAAS,EAAE,OAAb;EAAsBC,KAAK,EAAE;AAA7B,CAH8D,CAAhE;;AAMA,MAAME,qBAAqB,GAAG,CAC5BC,mBAD4B,EAE5BJ,SAF4B,KAGV;EAClB,IAAI,CAACI,mBAAL,EAA0B,OAAO,EAAP;EAC1B,MAAM;IAAEC,IAAI,EAAEC,cAAR;IAAwBC,MAAM,EAAEC;EAAhC,IACJ/D,yBAAyB,CAAC2D,mBAAD,CAD3B;EAGA,MAAMG,MAAc,GAAGC,gBAAgB,QAAhB,IAAAA,gBAAgB,CAAGR,SAAH,CAAhB,GAClB,GAAEQ,gBAAgB,CAACR,SAAD,CAAY,SADZ,GAEnB,EAFJ;EAGA,MAAMK,IAAY,GAAGC,cAAc,QAAd,IAAAA,cAAc,CAAGN,SAAH,CAAd,GAChB,IAAG,CAAAM,cAAc,QAAd,YAAAA,cAAc,CAAGN,SAAH,CAAd,KAA+B,CAAE,EADpB,GAEjB,EAFJ;EAGA,OAAOQ,gBAAgB,QAAhB,IAAAA,gBAAgB,CAAGR,SAAH,CAAhB,GACF,GAAEO,MAAO,GAAEA,MAAM,IAAIF,IAAV,IAAkB,KAAM,GAAEA,IAAK,EADxC,GAEH,IAFJ;AAGD,CAjBD;;AAmBA,MAAMI,oBAAoB,GAAG,CAC3BC,KAD2B,EAE3BC,IAF2B,KAGT;EAClB,OAAOD,KAAK,CAACC,IAAD,CAAL,GAAe,GAAED,KAAK,CAACC,IAAD,CAAO,GAA7B,GAAkC,IAAzC;AACD,CALD;;AAOA,OAAO,MAAMC,eAAe,GAAG,CAAC;EAAE7C;AAAF,CAAD,KAA2B;EAAA;;EACxD,MAAM8C,WAAoC,GAAG9C,IAAH,oBAAGA,IAAI,CAAE8C,WAAnD;EACA,oBACE,QAAC,eAAD;IAAA,WACG,CAAAA,WAAW,QAAX,YAAAA,WAAW,CAAEC,MAAb,kBACC,QAAC,oBAAD;MAAA,wBACE,QAAC,WAAD;QAAa,KAAK,2BAAEvB,aAAa,CAACsB,WAAW,CAACC,MAAb,CAAf,qBAAE,sBAAmCtB,KAAvD;QAAA,UACGqB,WAAW,CAACC;MADf;QAAA;QAAA;QAAA;MAAA,QADF,EAKGD,WAAW,CAACC,MAAZ,KAAuBvE,wBAAwB,CAAC2C,SAAhD,gBACC,QAAC,mBAAD;QAAA,uBACE,QAAC,mBAAD;UAAA,UACG2B,WAAW,QAAX,IAAAA,WAAW,CAAEE,mBAAb,GACGN,oBAAoB,CAClBI,WAAW,CAACE,mBADM,EAElB,MAFkB,CADvB,GAKGZ,qBAAqB,CACnBU,WAAW,CAACG,uBADO,EAEnB,OAFmB;QAN3B;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADD,GAcG,IAnBN;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAwBG,CAAAH,WAAW,QAAX,YAAAA,WAAW,CAAEE,mBAAb,kBACC,QAAC,eAAD;MAAA,UACGhB,0BAA0B,CAAC3B,GAA3B,CACC,CAAC6C,kBAAD,EAA4C3C,GAA5C,KAA4D;QAAA;;QAC1D,IACE2C,kBAAkB,CAAChB,KAAnB,KAA6B,WAA7B,IACAY,WAAW,CAACC,MAAZ,KAAuBvE,wBAAwB,CAAC2C,SAFlD,EAIE,OAAO,IAAP;QACF,OAAO,yBAAA2B,WAAW,CAACE,mBAAZ,mCACLE,kBAAkB,CAACjB,SADd,iBAGL,QAAC,cAAD;UAAA,wBACE,QAAC,mBAAD;YAAA,UACGiB,kBAAkB,CAAChB;UADtB;YAAA;YAAA;YAAA;UAAA,QADF,eAIE,QAAC,mBAAD;YAAA,UACGQ,oBAAoB,CACnBI,WAAW,CAACE,mBADO,EAEnBE,kBAAkB,CAACjB,SAFA;UADvB;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA,GAAqB1B,GAArB;UAAA;UAAA;UAAA;QAAA,QAHK,GAcH,IAdJ;MAeD,CAtBF;IADH;MAAA;MAAA;MAAA;IAAA,QAzBJ,EAoDG,CAAAuC,WAAW,QAAX,YAAAA,WAAW,CAAEG,uBAAb,kBACC,QAAC,eAAD;MAAA,UACGd,8BAA8B,CAAC9B,GAA/B,CACC,CAAC8C,kBAAD,EAA4C5C,GAA5C,KAA4D;QAC1D,MAAM6C,uBAAuB,GAAGhB,qBAAqB,CACnDU,WAAW,CAACG,uBADuC,EAEnDE,kBAAkB,CAAClB,SAFgC,CAArD;QAIA,IACE,CAACmB,uBAAD,IACCD,kBAAkB,CAACjB,KAAnB,KAA6B,WAA7B,IACCY,WAAW,CAACC,MAAZ,KAAuBvE,wBAAwB,CAAC2C,SAHpD,EAKE,OAAO,IAAP;QACF,oBACE,QAAC,cAAD;UAAA,wBACE,QAAC,mBAAD;YAAA,UACGgC,kBAAkB,CAACjB;UADtB;YAAA;YAAA;YAAA;UAAA,QADF,eAIE,QAAC,mBAAD;YAAA,UACGkB;UADH;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA,GAAqB7C,GAArB;UAAA;UAAA;UAAA;QAAA,QADF;MAUD,CAtBF;IADH;MAAA;MAAA;MAAA;IAAA,QArDJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmFD,CArFM;KAAMsC,e;AAuFb,OAAO,MAAMQ,mBAAmB,GAAG,CAAC;EAAErD;AAAF,CAAD,kBACjC,QAAC,mBAAD;EAAA,uBACE,QAAC,cAAD;IAAA,UAAiBA,IAAI,CAACsD;EAAtB;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADK;MAAMD,mB;AAMb,OAAO,MAAME,iBAAiB,GAAG,CAAC;EAChCvD;AADgC,CAAD,KAEM;EAAA;;EACrC,oBAAO,QAAC,cAAD;IAAA,UAAiBA,IAAjB,8CAAiBA,IAAI,CAAEU,gBAAvB,qBAAiB,uBAAwBC;EAAzC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAJM;MAAM4C,iB"},"metadata":{},"sourceType":"module"}