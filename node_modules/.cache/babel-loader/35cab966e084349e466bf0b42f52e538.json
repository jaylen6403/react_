{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/creationhub/src/components/PricingForm/PricingForm.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport ReactDOM from 'react-dom';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport produce from 'immer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport isEqual from 'lodash/isEqual';\nimport { LumaButton, LumaModal } from '@luma-fe-workspace/design-system';\nimport { Spinner } from '@luma-fe-workspace/luma/dashboard';\nimport { PricingState, RfqIssuerAction, RfqTypeEnum } from '@luma-fe-workspace/redux';\nimport { ConfigurableFormGroups, PricingFormFooter, QuotingInCreation, QuotingInProgress, RequestTabs } from './groups';\nimport { BottomRightGroup, ButtonsGroup, CH2Form, Footer, FormGroupWrapper, FormLeftPanel, FormRightPanel, FormsRow, PricingFormWrapper, RequestTabsRow, UpperRightGroup } from './PricingForm.styles';\nimport { CloneLabel, getDisplayedFormVariant, getFormSubmissionBody, getFormValidationBody, initialPricing, isPricingEmpty, Pending, PricingFormVariants, PricingModes } from './PricingFormUtils';\nimport RFQ from './groups/RFQ/RFQ';\nimport { CreationHubPages } from '../HomePage';\nimport { usePricingAPI } from './usePricingAPI';\nimport useInterval from '../../hooks/useInterval';\nimport { formatTypeLabel } from './groups/Quoting/QuotingUtils';\nimport { DocumentRequests } from './groups/DocumentRequests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function PricingForm({\n  formVariant\n}) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [pricingMode, setPricingMode] = useState(PricingModes.Pricing);\n  const [cloneCount, setCloneCount] = useState(0);\n  const initialPricingId = formVariant === PricingFormVariants.NEW_PRICING ? Pending : id;\n  const [pricingId, setPricingId] = useState(initialPricingId);\n  const [pricings, setPricings] = useState({\n    [initialPricingId]: initialPricing\n  });\n  const [selectedIssuers, setSelectedIssuers] = useState({\n    [initialPricingId]: []\n  });\n  const [rfqType, setRfqType] = useState(RfqTypeEnum.INDICATIVE);\n  const formikRef = useRef(null);\n  const api = usePricingAPI();\n  const errorMessages = {\n    '409': 'It looks like there was a conflict with the server. Refreshing the view...',\n    '404': 'Page not found'\n  };\n  const [errorCode, setErrorCode] = useState('');\n  const [disableSubmitButtons, setDisableSubmitButtons] = useState(false);\n  const displayedPricing = pricings[pricingId];\n  const isInitialLoading = isPricingEmpty(displayedPricing) && (api.isLoading.initialState || api.isLoading.pricing || api.isLoading.issuerPricing);\n  const isFormRequestPending = api.isLoading.changes || api.isLoading.createRfq;\n  const displayedFormVariant = getDisplayedFormVariant({\n    formVariant,\n    displayedPricing\n  });\n  const isFormEditable = displayedFormVariant === PricingFormVariants.NEW_PRICING && !isFormRequestPending;\n  const memoizedGetFormValues = useCallback(() => {\n    if (displayedPricing === undefined) {\n      return {};\n    }\n\n    return displayedPricing.product.params;\n  }, [displayedPricing]);\n\n  const handleRequestError = error => {\n    switch (error.status) {\n      case 409:\n        {\n          setErrorCode('409');\n          break;\n        }\n\n      default:\n        console.error(error);\n    }\n  };\n\n  const handleRequestDetailsError = error => {\n    const statuses = [403, 404];\n    const notFoundUrl = '/not-found';\n\n    if (statuses.includes(error.status)) {\n      navigate(notFoundUrl);\n    }\n  };\n\n  function getModifiedParams(newValues) {\n    const oldPricingParams = displayedPricing.product.params;\n    const changedParams = [];\n    Object.entries(newValues).forEach(([key, value]) => {\n      if (!isEqual(value, oldPricingParams[key])) {\n        changedParams.push(key);\n      }\n    });\n    return changedParams;\n  }\n\n  function updateCurrentPricing(newPricing) {\n    if (newPricing) {\n      setPricings(Object.assign({}, pricings, {\n        [pricingId]: newPricing\n      }));\n    }\n  }\n\n  const isValidation = displayedPricing.state === PricingState.InCreation && displayedPricing.productValidationErrors !== null;\n\n  const handleSubmitButtonsDisableInCreation = () => {\n    if (displayedFormVariant === PricingFormVariants.NEW_PRICING) {\n      const areIssuersChosen = selectedIssuers[pricingId].length !== 0;\n      const validationFailed = !areIssuersChosen || isValidation && Object.keys(displayedPricing.productValidationErrors).length !== 0;\n      setDisableSubmitButtons(validationFailed);\n    }\n  };\n\n  useEffect(() => {\n    if (isValidation) {\n      setValidationErrors(displayedPricing.productValidationErrors);\n      handleSubmitButtonsDisableInCreation();\n    }\n  }, [displayedPricing]);\n  useEffect(() => {\n    handleSubmitButtonsDisableInCreation();\n  }, [selectedIssuers]);\n  useEffect(() => {\n    async function getInitialRequest() {\n      let initialRequest = undefined;\n\n      try {\n        if (formVariant === PricingFormVariants.NEW_PRICING) {\n          initialRequest = await api.getInitialState({}).unwrap();\n        } else if (formVariant === PricingFormVariants.PRICING) {\n          initialRequest = await api.getExistingPricing({\n            pricingId: id\n          }).unwrap();\n        } else if (formVariant === PricingFormVariants.RFQ) {\n          initialRequest = await api.getIssuerPricing({\n            pricingId: id\n          }).unwrap();\n        }\n\n        if (initialRequest !== undefined) {\n          // batching updates will be automatic from React 18\n          // remove this wrapper when upgrading version\n          ReactDOM.unstable_batchedUpdates(() => {\n            setPricings({\n              [initialPricingId]: initialRequest\n            });\n            setPricingId(initialPricingId);\n          });\n        }\n      } catch (err) {\n        handleRequestError(err);\n        handleRequestDetailsError(err);\n      }\n    }\n\n    getInitialRequest();\n  }, [formVariant]);\n\n  const getNewPricing = async () => {\n    let updatedPricing;\n\n    try {\n      if (formVariant === PricingFormVariants.PRICING) {\n        updatedPricing = await api.getExistingPricing({\n          pricingId: id\n        }).unwrap();\n      } else if (formVariant === PricingFormVariants.RFQ) {\n        updatedPricing = await api.getIssuerPricing({\n          pricingId: id\n        }).unwrap();\n      }\n\n      updateCurrentPricing(updatedPricing);\n    } catch (err) {\n      handleRequestError(err);\n      handleRequestDetailsError(err);\n    }\n  };\n\n  const updateInterval = displayedFormVariant !== PricingFormVariants.NEW_PRICING ? 5000 : null;\n  useInterval(getNewPricing, updateInterval);\n\n  async function updatePricingHandler(body) {\n    try {\n      const resultPricing = await api.updatePricing(body).unwrap();\n      updateCurrentPricing(resultPricing);\n    } catch (err) {\n      handleRequestError(err);\n    }\n  }\n\n  async function cancelRfqHandler(body) {\n    try {\n      const resultPricing = await api.cancelRfq(body).unwrap();\n      updateCurrentPricing(resultPricing);\n    } catch (err) {\n      handleRequestError(err);\n    }\n  }\n\n  async function createRfqHandler(body) {\n    try {\n      const resultPricing = await api.createRfq(body).unwrap();\n      updateCurrentPricing(resultPricing);\n    } catch (err) {\n      handleRequestError(err);\n    }\n  }\n\n  async function updateRfqHandler(body) {\n    try {\n      const resultRfq = await api.updateRfq(body).unwrap();\n      updateCurrentPricing(resultRfq);\n    } catch (err) {\n      handleRequestError(err);\n    }\n  }\n\n  function setValidationErrors(errors) {\n    Object.entries(errors).forEach(([paramName, errors]) => {\n      var _formikRef$current;\n\n      formikRef == null ? void 0 : (_formikRef$current = formikRef.current) == null ? void 0 : _formikRef$current.setFieldError(paramName, errors[0].message);\n    });\n  }\n\n  function overWriteCurrentPricing(resultingPricing) {\n    const updatedPricings = produce(pricings, draft => {\n      draft[resultingPricing.id] = resultingPricing;\n      delete draft[pricingId];\n    });\n    const updatedSelectedIssuers = produce(selectedIssuers, draft => {\n      delete draft[pricingId];\n    });\n    ReactDOM.unstable_batchedUpdates(() => {\n      setPricings(updatedPricings);\n      setSelectedIssuers(updatedSelectedIssuers);\n      setPricingId(resultingPricing.id);\n    });\n  }\n\n  async function formSubmissionHandler(values) {\n    try {\n      const body = getFormSubmissionBody(values, selectedIssuers[pricingId], rfqType);\n      const resultingPricing = await api.submitForm(body).unwrap();\n\n      if (resultingPricing.state === PricingState.InProgress) {\n        overWriteCurrentPricing(resultingPricing);\n        const {\n          id\n        } = resultingPricing;\n        navigate(`/creationhub/${CreationHubPages.PricingView}/${id}`);\n      }\n\n      if (resultingPricing.state === PricingState.InCreation && resultingPricing.productValidationErrors !== null) {\n        setValidationErrors(resultingPricing.productValidationErrors);\n      }\n    } catch (err) {\n      handleRequestError(err);\n    }\n  }\n\n  async function validateForm(values) {\n    try {\n      const modifiedParams = getModifiedParams(values);\n      const body = getFormValidationBody(values, modifiedParams);\n      const resultPricing = await api.postProductChanges(body).unwrap();\n      updateCurrentPricing(resultPricing);\n\n      if (resultPricing.productValidationErrors !== null) {\n        setValidationErrors(resultPricing.productValidationErrors);\n      }\n    } catch (err) {\n      handleRequestError(err);\n    }\n  }\n\n  function toggleIssuer(issuerId) {\n    var _selectedIssuers$pric;\n\n    let issuers = (_selectedIssuers$pric = selectedIssuers[pricingId]) != null ? _selectedIssuers$pric : [];\n    const isSelected = issuers.includes(issuerId);\n\n    if (isSelected) {\n      issuers = issuers.filter(id => id !== issuerId);\n    } else {\n      issuers = [...issuers, issuerId];\n    }\n\n    setSelectedIssuers(Object.assign({}, selectedIssuers, {\n      [pricingId]: issuers\n    }));\n  }\n\n  function toggleAllIssuers(value) {\n    let issuers = [];\n\n    if (value) {\n      issuers = Object.keys(displayedPricing == null ? void 0 : displayedPricing.issuers);\n    }\n\n    setSelectedIssuers(Object.assign({}, selectedIssuers, {\n      [pricingId]: issuers\n    }));\n  }\n\n  async function handleRequestClone() {\n    let newPricing;\n    let newSelectedIssuers;\n    const cloneId = cloneCount + 1;\n    const originalPricingId = pricingId.split(` - ${CloneLabel}`)[0];\n    const newPricingId = `${originalPricingId} - ${CloneLabel}${cloneId}`;\n\n    if (displayedFormVariant === PricingFormVariants.NEW_PRICING) {\n      newPricing = produce(displayedPricing, draft => {\n        return draft;\n      });\n      newSelectedIssuers = produce(selectedIssuers[pricingId], draft => {\n        return draft;\n      });\n    } else {\n      let values = displayedPricing.product.params;\n      const tradeDateName = 'INITIAL_FIXING_DATE';\n      const tradeDateValue = values[tradeDateName].value;\n      const today = new Date().toISOString().split('T')[0];\n\n      if (typeof tradeDateValue === 'string' && new Date(tradeDateValue).getTime() < new Date(today).getTime()) {\n        values = produce(values, draft => {\n          draft[tradeDateName].value = today;\n        });\n      }\n\n      const body = getFormValidationBody(values, []);\n      newPricing = await api.postProductChanges(body).unwrap();\n      newSelectedIssuers = [];\n    }\n\n    ReactDOM.unstable_batchedUpdates(() => {\n      setCloneCount(cloneId);\n      setPricings(Object.assign({}, pricings, {\n        [newPricingId]: newPricing\n      }));\n      setSelectedIssuers(Object.assign({}, selectedIssuers, {\n        [newPricingId]: newSelectedIssuers\n      }));\n      setPricingId(newPricingId);\n    });\n  }\n\n  function closeRequestTab(tabId) {\n    if (tabId === pricingId) {\n      const currentTabIndex = Object.keys(pricings).indexOf(tabId);\n      const newTabIndex = currentTabIndex > 0 ? currentTabIndex - 1 : 1;\n      setPricingId(Object.keys(pricings)[newTabIndex]);\n    }\n\n    const updatedPricings = produce(pricings, draft => {\n      delete draft[tabId];\n    });\n    const updatedSelectedIssuers = produce(selectedIssuers, draft => {\n      delete draft[tabId];\n    });\n    setPricings(updatedPricings);\n    setSelectedIssuers(updatedSelectedIssuers);\n  }\n\n  if (isInitialLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 12\n    }, this);\n  }\n\n  const shouldDisplayTabs = formVariant !== PricingFormVariants.NEW_PRICING || Object.keys(pricings).length > 1;\n\n  const onTabClick = tabId => {\n    if (!isFormRequestPending) {\n      setPricingId(tabId);\n    }\n  };\n\n  function onKeyDown(keyEvent) {\n    if (keyEvent.key === 'Enter') {\n      keyEvent.preventDefault();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LumaModal, {\n      isOpen: !!errorCode,\n      appElement: \"#root\",\n      onAfterOpen: () => setTimeout(() => {\n        getNewPricing();\n        setErrorCode('');\n      }, 4000),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: errorCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorCode ? errorMessages[errorCode] : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: memoizedGetFormValues(),\n      enableReinitialize: true,\n      validateOnChange: false,\n      onSubmit: formSubmissionHandler,\n      innerRef: formikRef,\n      children: ({\n        values,\n        setFieldValue,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => {\n        var _actions;\n\n        return /*#__PURE__*/_jsxDEV(CH2Form, {\n          onSubmit: handleSubmit,\n          onKeyDown: onKeyDown,\n          \"data-testid\": \"pricing-form\",\n          children: /*#__PURE__*/_jsxDEV(PricingFormWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(RequestTabsRow, {\n              children: shouldDisplayTabs && /*#__PURE__*/_jsxDEV(RequestTabs, {\n                activeTab: pricingId,\n                requestTabs: Object.keys(pricings),\n                onTabClick: onTabClick,\n                formVariant: formVariant,\n                closeTab: closeRequestTab\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormsRow, {\n              children: [/*#__PURE__*/_jsxDEV(FormLeftPanel, {\n                mode: pricingMode,\n                children: /*#__PURE__*/_jsxDEV(ConfigurableFormGroups, {\n                  pricing: displayedPricing,\n                  values: values,\n                  errors: errors,\n                  handleChange: handleChange,\n                  handleBlur: handleBlur,\n                  handleValidation: validateForm,\n                  setFieldValue: setFieldValue,\n                  isEditable: isFormEditable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormRightPanel, {\n                mode: pricingMode,\n                children: [/*#__PURE__*/_jsxDEV(UpperRightGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(BottomRightGroup, {\n                    children: /*#__PURE__*/_jsxDEV(ButtonsGroup, {\n                      children: /*#__PURE__*/_jsxDEV(LumaButton, {\n                        size: \"small\",\n                        variant: \"secondary\",\n                        \"data-testid\": \"button-clone\",\n                        onClick: handleRequestClone,\n                        children: \"Clone\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 531,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroupWrapper, {\n                    children: [displayedFormVariant === PricingFormVariants.NEW_PRICING && /*#__PURE__*/_jsxDEV(QuotingInCreation, {\n                      issuers: displayedPricing == null ? void 0 : displayedPricing.issuers,\n                      selectedIssuers: selectedIssuers[pricingId],\n                      toggleIssuer: toggleIssuer,\n                      toggleAllIssuers: toggleAllIssuers\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 27\n                    }, this), displayedFormVariant === PricingFormVariants.PRICING && /*#__PURE__*/_jsxDEV(QuotingInProgress, {\n                      pricing: displayedPricing,\n                      updatePricing: updatePricingHandler,\n                      isMutationPending: api.isLoading.updatePricing || api.isLoading.cancelRfq,\n                      cancelRfq: cancelRfqHandler,\n                      createRfq: createRfqHandler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 27\n                    }, this), displayedFormVariant === PricingFormVariants.RFQ && /*#__PURE__*/_jsxDEV(RFQ, {\n                      rfq: displayedPricing,\n                      updateRfq: updateRfqHandler,\n                      isUpdateRfqPending: api.isLoading.updateRfq\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 23\n                  }, this), formVariant === PricingFormVariants.RFQ && (displayedPricing == null ? void 0 : (_actions = displayedPricing.actions) == null ? void 0 : _actions.includes(RfqIssuerAction.ADD_DOCUMENT)) && /*#__PURE__*/_jsxDEV(FormGroupWrapper, {\n                    children: /*#__PURE__*/_jsxDEV(DocumentRequests, {\n                      rfq: displayedPricing,\n                      updateRfq: updateCurrentPricing\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 579,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(BottomRightGroup, {\n                  children: /*#__PURE__*/_jsxDEV(ButtonsGroup, {\n                    children: isFormEditable && Object.keys(RfqTypeEnum).map(type => /*#__PURE__*/_jsxDEV(LumaButton, {\n                      disabled: disableSubmitButtons,\n                      variant: \"primary\",\n                      size: \"large\",\n                      className: \"button\",\n                      type: \"submit\",\n                      \"data-testid\": `button-price_${type}`,\n                      onClick: () => setRfqType(RfqTypeEnum[type]),\n                      fullWidth: true,\n                      children: [formatTypeLabel(type), \" Price\"]\n                    }, type, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 594,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              \"data-testid\": \"footer\",\n              children: /*#__PURE__*/_jsxDEV(PricingFormFooter, {\n                pricingMode: pricingMode,\n                setPricingMode: setPricingMode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PricingForm, \"k23uMAQet9bv/SDdrhJqvNhPPj8=\", false, function () {\n  return [useParams, useNavigate, usePricingAPI, useInterval];\n});\n\n_c = PricingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PricingForm\");","map":{"version":3,"names":["ReactDOM","useCallback","useEffect","useRef","useState","produce","useNavigate","useParams","Formik","isEqual","LumaButton","LumaModal","Spinner","PricingState","RfqIssuerAction","RfqTypeEnum","ConfigurableFormGroups","PricingFormFooter","QuotingInCreation","QuotingInProgress","RequestTabs","BottomRightGroup","ButtonsGroup","CH2Form","Footer","FormGroupWrapper","FormLeftPanel","FormRightPanel","FormsRow","PricingFormWrapper","RequestTabsRow","UpperRightGroup","CloneLabel","getDisplayedFormVariant","getFormSubmissionBody","getFormValidationBody","initialPricing","isPricingEmpty","Pending","PricingFormVariants","PricingModes","RFQ","CreationHubPages","usePricingAPI","useInterval","formatTypeLabel","DocumentRequests","PricingForm","formVariant","id","navigate","pricingMode","setPricingMode","Pricing","cloneCount","setCloneCount","initialPricingId","NEW_PRICING","pricingId","setPricingId","pricings","setPricings","selectedIssuers","setSelectedIssuers","rfqType","setRfqType","INDICATIVE","formikRef","api","errorMessages","errorCode","setErrorCode","disableSubmitButtons","setDisableSubmitButtons","displayedPricing","isInitialLoading","isLoading","initialState","pricing","issuerPricing","isFormRequestPending","changes","createRfq","displayedFormVariant","isFormEditable","memoizedGetFormValues","undefined","product","params","handleRequestError","error","status","console","handleRequestDetailsError","statuses","notFoundUrl","includes","getModifiedParams","newValues","oldPricingParams","changedParams","Object","entries","forEach","key","value","push","updateCurrentPricing","newPricing","isValidation","state","InCreation","productValidationErrors","handleSubmitButtonsDisableInCreation","areIssuersChosen","length","validationFailed","keys","setValidationErrors","getInitialRequest","initialRequest","getInitialState","unwrap","PRICING","getExistingPricing","getIssuerPricing","unstable_batchedUpdates","err","getNewPricing","updatedPricing","updateInterval","updatePricingHandler","body","resultPricing","updatePricing","cancelRfqHandler","cancelRfq","createRfqHandler","updateRfqHandler","resultRfq","updateRfq","errors","paramName","current","setFieldError","message","overWriteCurrentPricing","resultingPricing","updatedPricings","draft","updatedSelectedIssuers","formSubmissionHandler","values","submitForm","InProgress","PricingView","validateForm","modifiedParams","postProductChanges","toggleIssuer","issuerId","issuers","isSelected","filter","toggleAllIssuers","handleRequestClone","newSelectedIssuers","cloneId","originalPricingId","split","newPricingId","tradeDateName","tradeDateValue","today","Date","toISOString","getTime","closeRequestTab","tabId","currentTabIndex","indexOf","newTabIndex","shouldDisplayTabs","onTabClick","onKeyDown","keyEvent","preventDefault","setTimeout","setFieldValue","handleChange","handleBlur","handleSubmit","isSubmitting","actions","ADD_DOCUMENT","map","type"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/creationhub/src/components/PricingForm/PricingForm.tsx"],"sourcesContent":["import ReactDOM from 'react-dom';\nimport {\n  ChangeEvent,\n  FocusEvent,\n  KeyboardEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport produce from 'immer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Formik, FormikErrors, FormikProps } from 'formik';\nimport isEqual from 'lodash/isEqual';\nimport { LumaButton, LumaModal } from '@luma-fe-workspace/design-system';\nimport { Spinner } from '@luma-fe-workspace/luma/dashboard';\nimport {\n  IssuerId,\n  LocalDateValue,\n  IssuerPricing,\n  ParamName,\n  ParamValue,\n  Pricing,\n  PricingId,\n  PricingInCreation,\n  PricingInProgress,\n  PricingState,\n  ResponseError,\n  Rfq,\n  RfqId,\n  RfqIssuerAction,\n  RfqTypeEnum,\n  UpdatePricingUsingPostApiArg,\n  UpdateRFQUsingPostApiArg,\n  ValidationError,\n} from '@luma-fe-workspace/redux';\nimport {\n  ConfigurableFormGroups,\n  PricingFormFooter,\n  QuotingInCreation,\n  QuotingInProgress,\n  RequestTabs,\n} from './groups';\nimport {\n  BottomRightGroup,\n  ButtonsGroup,\n  CH2Form,\n  Footer,\n  FormGroupWrapper,\n  FormLeftPanel,\n  FormRightPanel,\n  FormsRow,\n  PricingFormWrapper,\n  RequestTabsRow,\n  UpperRightGroup,\n} from './PricingForm.styles';\nimport {\n  CloneLabel,\n  getDisplayedFormVariant,\n  getFormSubmissionBody,\n  getFormValidationBody,\n  initialPricing,\n  isPricingEmpty,\n  Pending,\n  PricingFormVariants,\n  PricingModes,\n  RequestFormValuesType,\n} from './PricingFormUtils';\nimport RFQ from './groups/RFQ/RFQ';\nimport { CreationHubPages } from '../HomePage';\nimport { usePricingAPI } from './usePricingAPI';\nimport useInterval from '../../hooks/useInterval';\nimport { formatTypeLabel } from './groups/Quoting/QuotingUtils';\nimport { DocumentRequests } from './groups/DocumentRequests';\n\nexport interface PricingFormProps {\n  values: RequestFormValuesType;\n  errors: FormikErrors<RequestFormValuesType>;\n  handleChange: (e: ChangeEvent) => void;\n  handleBlur: (e: FocusEvent) => void;\n  handleValidation: (values: RequestFormValuesType) => void;\n  setFieldValue: (\n    paramName: ParamName,\n    value: ParamValue,\n    shouldValidate?: boolean\n  ) => void;\n  isEditable: boolean;\n}\n\nexport function PricingForm({\n  formVariant,\n}: {\n  formVariant: PricingFormVariants;\n}) {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [pricingMode, setPricingMode] = useState(PricingModes.Pricing);\n  const [cloneCount, setCloneCount] = useState(0);\n\n  const initialPricingId = (\n    formVariant === PricingFormVariants.NEW_PRICING ? Pending : id\n  ) as PricingId;\n  const [pricingId, setPricingId] = useState(initialPricingId);\n  const [pricings, setPricings] = useState({\n    [initialPricingId]: initialPricing as Pricing,\n  } as Record<PricingId, Pricing | Rfq>);\n  const [selectedIssuers, setSelectedIssuers] = useState({\n    [initialPricingId]: [],\n  } as Record<string, IssuerId[]>);\n  const [rfqType, setRfqType] = useState<RfqTypeEnum>(RfqTypeEnum.INDICATIVE);\n\n  const formikRef = useRef<FormikProps<RequestFormValuesType>>(null);\n  const api = usePricingAPI();\n  const errorMessages = {\n    '409':\n      'It looks like there was a conflict with the server. Refreshing the view...',\n    '404': 'Page not found',\n  };\n  const [errorCode, setErrorCode] = useState<keyof typeof errorMessages | ''>(\n    ''\n  );\n  const [disableSubmitButtons, setDisableSubmitButtons] =\n    useState<boolean>(false);\n\n  const displayedPricing = pricings[pricingId];\n  const isInitialLoading =\n    isPricingEmpty(displayedPricing) &&\n    (api.isLoading.initialState ||\n      api.isLoading.pricing ||\n      api.isLoading.issuerPricing);\n  const isFormRequestPending = api.isLoading.changes || api.isLoading.createRfq;\n  const displayedFormVariant = getDisplayedFormVariant({\n    formVariant,\n    displayedPricing,\n  });\n\n  const isFormEditable =\n    displayedFormVariant === PricingFormVariants.NEW_PRICING &&\n    !isFormRequestPending;\n  const memoizedGetFormValues = useCallback(() => {\n    if (displayedPricing === undefined) {\n      return {};\n    }\n    return (displayedPricing as Pricing | Rfq).product.params;\n  }, [displayedPricing]);\n\n  const handleRequestError = (error: ResponseError) => {\n    switch (error.status) {\n      case 409: {\n        setErrorCode('409');\n        break;\n      }\n      default:\n        console.error(error);\n    }\n  };\n\n  const handleRequestDetailsError = (error: ResponseError) => {\n    const statuses = [403, 404];\n    const notFoundUrl = '/not-found';\n    if (statuses.includes(error.status)) {\n      navigate(notFoundUrl);\n    }\n  };\n\n  function getModifiedParams(newValues: RequestFormValuesType) {\n    const oldPricingParams = displayedPricing.product.params;\n    const changedParams: ParamName[] = [];\n    Object.entries(newValues).forEach(([key, value]) => {\n      if (!isEqual(value, oldPricingParams[key])) {\n        changedParams.push(key);\n      }\n    });\n    return changedParams;\n  }\n\n  function updateCurrentPricing(newPricing: Pricing | Rfq | undefined) {\n    if (newPricing) {\n      setPricings({ ...pricings, [pricingId]: newPricing });\n    }\n  }\n\n  const isValidation =\n    displayedPricing.state === PricingState.InCreation &&\n    displayedPricing.productValidationErrors !== null;\n\n  const handleSubmitButtonsDisableInCreation = () => {\n    if (displayedFormVariant === PricingFormVariants.NEW_PRICING) {\n      const areIssuersChosen = selectedIssuers[pricingId].length !== 0;\n      const validationFailed =\n        !areIssuersChosen ||\n        (isValidation &&\n          Object.keys(displayedPricing.productValidationErrors!).length !== 0);\n      setDisableSubmitButtons(validationFailed);\n    }\n  };\n\n  useEffect(() => {\n    if (isValidation) {\n      setValidationErrors(displayedPricing.productValidationErrors!);\n      handleSubmitButtonsDisableInCreation();\n    }\n  }, [displayedPricing]);\n\n  useEffect(() => {\n    handleSubmitButtonsDisableInCreation();\n  }, [selectedIssuers]);\n\n  useEffect(() => {\n    async function getInitialRequest() {\n      let initialRequest: Pricing | IssuerPricing | undefined = undefined;\n      try {\n        if (formVariant === PricingFormVariants.NEW_PRICING) {\n          initialRequest = await api.getInitialState({}).unwrap();\n        } else if (formVariant === PricingFormVariants.PRICING) {\n          initialRequest = await api\n            .getExistingPricing({\n              pricingId: id as PricingId,\n            })\n            .unwrap();\n        } else if (formVariant === PricingFormVariants.RFQ) {\n          initialRequest = await api\n            .getIssuerPricing({ pricingId: id as PricingId })\n            .unwrap();\n        }\n        if (initialRequest !== undefined) {\n          // batching updates will be automatic from React 18\n          // remove this wrapper when upgrading version\n          ReactDOM.unstable_batchedUpdates(() => {\n            setPricings({\n              [initialPricingId]: initialRequest as Pricing | Rfq,\n            });\n            setPricingId(initialPricingId);\n          });\n        }\n      } catch (err) {\n        handleRequestError(err as ResponseError);\n        handleRequestDetailsError(err as ResponseError);\n      }\n    }\n    getInitialRequest();\n  }, [formVariant]);\n\n  const getNewPricing = async () => {\n    let updatedPricing;\n    try {\n      if (formVariant === PricingFormVariants.PRICING) {\n        updatedPricing = await api\n          .getExistingPricing({\n            pricingId: id as PricingId,\n          })\n          .unwrap();\n      } else if (formVariant === PricingFormVariants.RFQ) {\n        updatedPricing = await api\n          .getIssuerPricing({ pricingId: id as PricingId })\n          .unwrap();\n      }\n      updateCurrentPricing(updatedPricing);\n    } catch (err) {\n      handleRequestError(err as ResponseError);\n      handleRequestDetailsError(err as ResponseError);\n    }\n  };\n\n  const updateInterval =\n    displayedFormVariant !== PricingFormVariants.NEW_PRICING ? 5000 : null;\n  useInterval(getNewPricing, updateInterval);\n\n  async function updatePricingHandler(body: UpdatePricingUsingPostApiArg) {\n    try {\n      const resultPricing = await api.updatePricing(body).unwrap();\n      updateCurrentPricing(resultPricing);\n    } catch (err) {\n      handleRequestError(err as ResponseError);\n    }\n  }\n\n  async function cancelRfqHandler(body: UpdatePricingUsingPostApiArg) {\n    try {\n      const resultPricing = await api.cancelRfq(body).unwrap();\n      updateCurrentPricing(resultPricing);\n    } catch (err) {\n      handleRequestError(err as ResponseError);\n    }\n  }\n\n  async function createRfqHandler(body: UpdatePricingUsingPostApiArg) {\n    try {\n      const resultPricing = await api.createRfq(body).unwrap();\n      updateCurrentPricing(resultPricing);\n    } catch (err) {\n      handleRequestError(err as ResponseError);\n    }\n  }\n\n  async function updateRfqHandler(body: UpdateRFQUsingPostApiArg) {\n    try {\n      const resultRfq = await api.updateRfq(body).unwrap();\n      updateCurrentPricing(resultRfq);\n    } catch (err) {\n      handleRequestError(err as ResponseError);\n    }\n  }\n\n  function setValidationErrors(errors: Record<ParamName, ValidationError[]>) {\n    Object.entries(errors).forEach(([paramName, errors]) => {\n      formikRef?.current?.setFieldError(paramName, errors[0].message);\n    });\n  }\n\n  function overWriteCurrentPricing(resultingPricing: PricingInProgress) {\n    const updatedPricings = produce(pricings, (draft) => {\n      draft[resultingPricing.id] = resultingPricing;\n      delete draft[pricingId];\n    });\n    const updatedSelectedIssuers = produce(selectedIssuers, (draft) => {\n      delete draft[pricingId];\n    });\n    ReactDOM.unstable_batchedUpdates(() => {\n      setPricings(updatedPricings);\n      setSelectedIssuers(updatedSelectedIssuers);\n      setPricingId(resultingPricing.id);\n    });\n  }\n\n  async function formSubmissionHandler(values: RequestFormValuesType) {\n    try {\n      const body = getFormSubmissionBody(\n        values,\n        selectedIssuers[pricingId],\n        rfqType\n      );\n      const resultingPricing = (await api.submitForm(body).unwrap()) as Pricing;\n      if (resultingPricing.state === PricingState.InProgress) {\n        overWriteCurrentPricing(resultingPricing as PricingInProgress);\n        const { id } = resultingPricing as PricingInProgress;\n        navigate(`/creationhub/${CreationHubPages.PricingView}/${id}`);\n      }\n      if (\n        resultingPricing.state === PricingState.InCreation &&\n        resultingPricing.productValidationErrors !== null\n      ) {\n        setValidationErrors(resultingPricing.productValidationErrors);\n      }\n    } catch (err) {\n      handleRequestError(err as ResponseError);\n    }\n  }\n\n  async function validateForm(values: RequestFormValuesType) {\n    try {\n      const modifiedParams = getModifiedParams(values);\n      const body = getFormValidationBody(values, modifiedParams);\n      const resultPricing = (await api\n        .postProductChanges(body)\n        .unwrap()) as PricingInCreation;\n      updateCurrentPricing(resultPricing);\n      if (resultPricing.productValidationErrors !== null) {\n        setValidationErrors(resultPricing.productValidationErrors);\n      }\n    } catch (err) {\n      handleRequestError(err as ResponseError);\n    }\n  }\n\n  function toggleIssuer(issuerId: IssuerId) {\n    let issuers = selectedIssuers[pricingId] ?? [];\n    const isSelected = issuers.includes(issuerId);\n    if (isSelected) {\n      issuers = issuers.filter((id) => id !== issuerId);\n    } else {\n      issuers = [...issuers, issuerId];\n    }\n    setSelectedIssuers({ ...selectedIssuers, [pricingId]: issuers });\n  }\n\n  function toggleAllIssuers(value: boolean) {\n    let issuers: IssuerId[] = [];\n    if (value) {\n      issuers = Object.keys((displayedPricing as PricingInCreation)?.issuers);\n    }\n    setSelectedIssuers({ ...selectedIssuers, [pricingId]: issuers });\n  }\n\n  async function handleRequestClone() {\n    let newPricing: Pricing;\n    let newSelectedIssuers: string[];\n\n    const cloneId = cloneCount + 1;\n    const originalPricingId = pricingId.split(` - ${CloneLabel}`)[0];\n    const newPricingId = `${originalPricingId} - ${CloneLabel}${cloneId}`;\n    if (displayedFormVariant === PricingFormVariants.NEW_PRICING) {\n      newPricing = produce(displayedPricing, (draft) => {\n        return draft;\n      }) as PricingInCreation;\n      newSelectedIssuers = produce(selectedIssuers[pricingId], (draft) => {\n        return draft;\n      }) as string[];\n    } else {\n      let values = displayedPricing.product.params;\n      const tradeDateName = 'INITIAL_FIXING_DATE';\n      const tradeDateValue = (values[tradeDateName] as LocalDateValue).value;\n      const today = new Date().toISOString().split('T')[0];\n      if (\n        typeof tradeDateValue === 'string' &&\n        new Date(tradeDateValue).getTime() < new Date(today).getTime()\n      ) {\n        values = produce(values, (draft) => {\n          (draft[tradeDateName] as LocalDateValue).value = today;\n        });\n      }\n      const body = getFormValidationBody(values, []);\n      newPricing = (await api\n        .postProductChanges(body)\n        .unwrap()) as PricingInCreation;\n      newSelectedIssuers = [];\n    }\n\n    ReactDOM.unstable_batchedUpdates(() => {\n      setCloneCount(cloneId);\n      setPricings({ ...pricings, [newPricingId]: newPricing });\n      setSelectedIssuers({\n        ...selectedIssuers,\n        [newPricingId]: newSelectedIssuers,\n      });\n      setPricingId(newPricingId);\n    });\n  }\n\n  function closeRequestTab(tabId: string) {\n    if (tabId === pricingId) {\n      const currentTabIndex = Object.keys(pricings).indexOf(tabId);\n      const newTabIndex = currentTabIndex > 0 ? currentTabIndex - 1 : 1;\n      setPricingId(Object.keys(pricings)[newTabIndex]);\n    }\n    const updatedPricings = produce(pricings, (draft) => {\n      delete draft[tabId];\n    });\n    const updatedSelectedIssuers = produce(selectedIssuers, (draft) => {\n      delete draft[tabId];\n    });\n    setPricings(updatedPricings);\n    setSelectedIssuers(updatedSelectedIssuers);\n  }\n\n  if (isInitialLoading) {\n    return <Spinner />;\n  }\n\n  const shouldDisplayTabs =\n    formVariant !== PricingFormVariants.NEW_PRICING ||\n    Object.keys(pricings).length > 1;\n  const onTabClick = (tabId: string) => {\n    if (!isFormRequestPending) {\n      setPricingId(tabId);\n    }\n  };\n\n  function onKeyDown(keyEvent: KeyboardEvent) {\n    if (keyEvent.key === 'Enter') {\n      keyEvent.preventDefault();\n    }\n  }\n  return (\n    <>\n      <LumaModal\n        isOpen={!!errorCode}\n        appElement=\"#root\"\n        onAfterOpen={() =>\n          setTimeout(() => {\n            getNewPricing();\n            setErrorCode('');\n          }, 4000)\n        }\n      >\n        <h1>{errorCode}</h1>\n        <p>{errorCode ? errorMessages[errorCode] : null}</p>\n      </LumaModal>\n      <Formik\n        initialValues={memoizedGetFormValues()}\n        enableReinitialize={true}\n        validateOnChange={false}\n        onSubmit={formSubmissionHandler}\n        innerRef={formikRef}\n      >\n        {({\n          values,\n          setFieldValue,\n          errors,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => {\n          return (\n            <CH2Form\n              onSubmit={handleSubmit}\n              onKeyDown={onKeyDown}\n              data-testid=\"pricing-form\"\n            >\n              <PricingFormWrapper>\n                <RequestTabsRow>\n                  {shouldDisplayTabs && (\n                    <RequestTabs\n                      activeTab={pricingId}\n                      requestTabs={Object.keys(pricings)}\n                      onTabClick={onTabClick}\n                      formVariant={formVariant}\n                      closeTab={closeRequestTab}\n                    />\n                  )}\n                </RequestTabsRow>\n                <FormsRow>\n                  <FormLeftPanel mode={pricingMode}>\n                    <ConfigurableFormGroups\n                      pricing={displayedPricing}\n                      values={values}\n                      errors={errors}\n                      handleChange={handleChange}\n                      handleBlur={handleBlur}\n                      handleValidation={validateForm}\n                      setFieldValue={setFieldValue}\n                      isEditable={isFormEditable}\n                    />\n                  </FormLeftPanel>\n                  <FormRightPanel mode={pricingMode}>\n                    <UpperRightGroup>\n                      <BottomRightGroup>\n                        <ButtonsGroup>\n                          <LumaButton\n                            size=\"small\"\n                            variant=\"secondary\"\n                            data-testid=\"button-clone\"\n                            onClick={handleRequestClone}\n                          >\n                            Clone\n                          </LumaButton>\n                        </ButtonsGroup>\n                      </BottomRightGroup>\n                      <FormGroupWrapper>\n                        {displayedFormVariant ===\n                          PricingFormVariants.NEW_PRICING && (\n                          <QuotingInCreation\n                            issuers={\n                              (displayedPricing as PricingInCreation)?.issuers\n                            }\n                            selectedIssuers={selectedIssuers[pricingId]}\n                            toggleIssuer={toggleIssuer}\n                            toggleAllIssuers={toggleAllIssuers}\n                          />\n                        )}\n                        {displayedFormVariant ===\n                          PricingFormVariants.PRICING && (\n                          <QuotingInProgress\n                            pricing={displayedPricing as PricingInProgress}\n                            updatePricing={updatePricingHandler}\n                            isMutationPending={\n                              api.isLoading.updatePricing ||\n                              api.isLoading.cancelRfq\n                            }\n                            cancelRfq={cancelRfqHandler}\n                            createRfq={createRfqHandler}\n                          />\n                        )}\n                        {displayedFormVariant === PricingFormVariants.RFQ && (\n                          <RFQ\n                            rfq={displayedPricing as Rfq}\n                            updateRfq={updateRfqHandler}\n                            isUpdateRfqPending={api.isLoading.updateRfq}\n                          />\n                        )}\n                      </FormGroupWrapper>\n                      {formVariant === PricingFormVariants.RFQ &&\n                        (displayedPricing as Rfq)?.actions?.includes(\n                          RfqIssuerAction.ADD_DOCUMENT\n                        ) && (\n                          <FormGroupWrapper>\n                            <DocumentRequests\n                              rfq={displayedPricing as Rfq}\n                              updateRfq={updateCurrentPricing}\n                            />\n                          </FormGroupWrapper>\n                        )}\n                    </UpperRightGroup>\n                    <BottomRightGroup>\n                      <ButtonsGroup>\n                        {isFormEditable &&\n                          (\n                            Object.keys(RfqTypeEnum) as Array<\n                              keyof typeof RfqTypeEnum\n                            >\n                          ).map((type) => (\n                            <LumaButton\n                              disabled={disableSubmitButtons}\n                              variant=\"primary\"\n                              size=\"large\"\n                              className=\"button\"\n                              type=\"submit\"\n                              data-testid={`button-price_${type}`}\n                              key={type}\n                              onClick={() => setRfqType(RfqTypeEnum[type])}\n                              fullWidth={true}\n                            >\n                              {formatTypeLabel(type)} Price\n                            </LumaButton>\n                          ))}\n                      </ButtonsGroup>\n                    </BottomRightGroup>\n                  </FormRightPanel>\n                </FormsRow>\n                <Footer data-testid=\"footer\">\n                  <PricingFormFooter\n                    pricingMode={pricingMode}\n                    setPricingMode={setPricingMode}\n                  />\n                </Footer>\n              </PricingFormWrapper>\n            </CH2Form>\n          );\n        }}\n      </Formik>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}