{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaAgGrid/LumaAgGrid.tsx\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/src/styles/ag-grid.scss';\nimport 'ag-grid-community/src/styles/ag-theme-alpine/sass/ag-theme-alpine.scss';\nimport { AgGridWrapper, rowStyle } from './LumaAgGrid.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LumaAgGrid({\n  gridOptions,\n  gridStyles,\n  additionalStyles = ''\n}) {\n  return /*#__PURE__*/_jsxDEV(AgGridWrapper, {\n    additionalStyles: additionalStyles,\n    style: Object.assign({}, gridStyles),\n    className: \"ag-theme-alpine\",\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowStyle: rowStyle,\n      gridOptions: Object.assign({}, gridOptions)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = LumaAgGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"LumaAgGrid\");","map":{"version":3,"names":["AgGridReact","AgGridWrapper","rowStyle","LumaAgGrid","gridOptions","gridStyles","additionalStyles"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaAgGrid/LumaAgGrid.tsx"],"sourcesContent":["import { CSSProperties } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { GridOptions } from 'ag-grid-community';\nimport 'ag-grid-community/src/styles/ag-grid.scss';\nimport 'ag-grid-community/src/styles/ag-theme-alpine/sass/ag-theme-alpine.scss';\nimport { AgGridWrapper, rowStyle } from './LumaAgGrid.styles';\n\nexport type AgGridProps = {\n  gridOptions: GridOptions;\n  /**\n   * Additional styling for AgGrid (passed in as an object)\n   */\n  gridStyles?: CSSProperties;\n  /**\n   * Additional styling for AgGrid passed in as styled-component's string.\n   * Useful for styling nested elements of the grid.\n   */\n  additionalStyles?: string;\n};\n\nexport function LumaAgGrid({\n  gridOptions,\n  gridStyles,\n  additionalStyles = '',\n}: AgGridProps) {\n  return (\n    <AgGridWrapper\n      additionalStyles={additionalStyles}\n      style={{ ...gridStyles }}\n      className=\"ag-theme-alpine\"\n    >\n      <AgGridReact\n        rowStyle={rowStyle}\n        gridOptions={{ ...gridOptions }}\n      ></AgGridReact>\n    </AgGridWrapper>\n  );\n}\n"],"mappings":";;AACA,SAASA,WAAT,QAA4B,eAA5B;AAEA,OAAO,2CAAP;AACA,OAAO,wEAAP;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,qBAAxC;;AAeA,OAAO,SAASC,UAAT,CAAoB;EACzBC,WADyB;EAEzBC,UAFyB;EAGzBC,gBAAgB,GAAG;AAHM,CAApB,EAIS;EACd,oBACE,QAAC,aAAD;IACE,gBAAgB,EAAEA,gBADpB;IAEE,KAAK,oBAAOD,UAAP,CAFP;IAGE,SAAS,EAAC,iBAHZ;IAAA,uBAKE,QAAC,WAAD;MACE,QAAQ,EAAEH,QADZ;MAEE,WAAW,oBAAOE,WAAP;IAFb;MAAA;MAAA;MAAA;IAAA;EALF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;KAjBeD,U"},"metadata":{},"sourceType":"module"}