{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/components/PortfolioWidget/StructuredProducts/StructuredProductsToggle/StructuredProductsToggle.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { useState } from 'react';\nimport { SingleSelect } from '@luma-fe-workspace/design-system';\nimport { MobileWrapper, PortfolioWidgetToggle, ToggleContainer, TypesButton } from '../../PortfolioWidget.styles';\nimport { StructuredProductsTypes } from '../structuredProductsPortfolioUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StructuredProductsToggle = ({\n  screenWidth,\n  setTableToRender,\n  tableToRender\n}) => {\n  _s();\n\n  const [typesDropdown, setTypesDropdown] = useState({\n    display: StructuredProductsTypes.ReturnType,\n    value: StructuredProductsTypes.ReturnType\n  });\n  const toggleStrings = [{\n    display: StructuredProductsTypes.ReturnType,\n    value: StructuredProductsTypes.ReturnType\n  }, {\n    display: StructuredProductsTypes.Issuer,\n    value: StructuredProductsTypes.Issuer\n  }];\n\n  const updateTypesSelection = item => {\n    if (!item) return;\n\n    if (item.display === StructuredProductsTypes.ReturnType) {\n      setTableToRender(StructuredProductsTypes.ReturnType);\n      setTypesDropdown(item);\n    } else {\n      setTableToRender(StructuredProductsTypes.Issuer);\n      setTypesDropdown(item);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ToggleContainer, {\n    children: screenWidth > 544 ? /*#__PURE__*/_jsxDEV(PortfolioWidgetToggle, {\n      children: [/*#__PURE__*/_jsxDEV(TypesButton, {\n        isActive: tableToRender === StructuredProductsTypes.ReturnType,\n        onClick: () => {\n          setTableToRender(StructuredProductsTypes.ReturnType);\n        },\n        StructuredProductsTypes: StructuredProductsTypes.ReturnType,\n        variant: \"secondary\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TypesButton, {\n        isActive: tableToRender === StructuredProductsTypes.Issuer,\n        onClick: () => {\n          setTableToRender(StructuredProductsTypes.Issuer);\n        },\n        StructuredProductsTypes: StructuredProductsTypes.Issuer,\n        variant: \"secondary\",\n        children: \"Issuers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MobileWrapper, {\n      children: /*#__PURE__*/_jsxDEV(SingleSelect, {\n        items: toggleStrings,\n        placeholder: `${StructuredProductsTypes.ReturnType}`,\n        selectedItem: typesDropdown,\n        variant: 'secondary',\n        onChange: updateTypesSelection,\n        hasIndicator: true,\n        noHighlight: true,\n        iconCode: \"angle-down\",\n        iconPrefix: \"far\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StructuredProductsToggle, \"eKo00ExZCbM49UHpL0/H7D6InMM=\");\n\n_c = StructuredProductsToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"StructuredProductsToggle\");","map":{"version":3,"names":["useState","SingleSelect","MobileWrapper","PortfolioWidgetToggle","ToggleContainer","TypesButton","StructuredProductsTypes","StructuredProductsToggle","screenWidth","setTableToRender","tableToRender","typesDropdown","setTypesDropdown","display","ReturnType","value","toggleStrings","Issuer","updateTypesSelection","item"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/dashboard/src/components/PortfolioWidget/StructuredProducts/StructuredProductsToggle/StructuredProductsToggle.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useState } from 'react';\nimport {\n  MenuItemSingleType,\n  SingleSelect,\n} from '@luma-fe-workspace/design-system';\nimport {\n  MobileWrapper,\n  PortfolioWidgetToggle,\n  ToggleContainer,\n  TypesButton,\n} from '../../PortfolioWidget.styles';\nimport { StructuredProductsTypes } from '../structuredProductsPortfolioUtils';\n\ninterface ToggleProps {\n  screenWidth: number;\n  setTableToRender: Dispatch<SetStateAction<StructuredProductsTypes>>;\n  tableToRender: StructuredProductsTypes;\n}\nexport const StructuredProductsToggle = ({\n  screenWidth,\n  setTableToRender,\n  tableToRender,\n}: ToggleProps) => {\n  const [typesDropdown, setTypesDropdown] = useState<\n    MenuItemSingleType<StructuredProductsTypes>\n  >({\n    display: StructuredProductsTypes.ReturnType,\n    value: StructuredProductsTypes.ReturnType,\n  });\n\n  const toggleStrings: MenuItemSingleType<StructuredProductsTypes>[] = [\n    {\n      display: StructuredProductsTypes.ReturnType,\n      value: StructuredProductsTypes.ReturnType,\n    },\n    {\n      display: StructuredProductsTypes.Issuer,\n      value: StructuredProductsTypes.Issuer,\n    },\n  ];\n\n  const updateTypesSelection = (\n    item?: MenuItemSingleType<StructuredProductsTypes> | null\n  ) => {\n    if (!item) return;\n    if (item.display === StructuredProductsTypes.ReturnType) {\n      setTableToRender(StructuredProductsTypes.ReturnType);\n      setTypesDropdown(item);\n    } else {\n      setTableToRender(StructuredProductsTypes.Issuer);\n      setTypesDropdown(item);\n    }\n  };\n  return (\n    <ToggleContainer>\n      {screenWidth > 544 ? (\n        <PortfolioWidgetToggle>\n          <TypesButton\n            isActive={tableToRender === StructuredProductsTypes.ReturnType}\n            onClick={() => {\n              setTableToRender(StructuredProductsTypes.ReturnType);\n            }}\n            StructuredProductsTypes={StructuredProductsTypes.ReturnType}\n            variant=\"secondary\"\n          >\n            Type\n          </TypesButton>\n\n          <TypesButton\n            isActive={tableToRender === StructuredProductsTypes.Issuer}\n            onClick={() => {\n              setTableToRender(StructuredProductsTypes.Issuer);\n            }}\n            StructuredProductsTypes={StructuredProductsTypes.Issuer}\n            variant=\"secondary\"\n          >\n            Issuers\n          </TypesButton>\n        </PortfolioWidgetToggle>\n      ) : (\n        <MobileWrapper>\n          <SingleSelect\n            items={toggleStrings}\n            placeholder={`${StructuredProductsTypes.ReturnType}`}\n            selectedItem={typesDropdown}\n            variant={'secondary'}\n            onChange={updateTypesSelection}\n            hasIndicator={true}\n            noHighlight={true}\n            iconCode=\"angle-down\"\n            iconPrefix=\"far\"\n          />\n        </MobileWrapper>\n      )}\n    </ToggleContainer>\n  );\n};\n"],"mappings":";;;;;AAAA,SAAmCA,QAAnC,QAAmD,OAAnD;AACA,SAEEC,YAFF,QAGO,kCAHP;AAIA,SACEC,aADF,EAEEC,qBAFF,EAGEC,eAHF,EAIEC,WAJF,QAKO,8BALP;AAMA,SAASC,uBAAT,QAAwC,qCAAxC;;AAOA,OAAO,MAAMC,wBAAwB,GAAG,CAAC;EACvCC,WADuC;EAEvCC,gBAFuC;EAGvCC;AAHuC,CAAD,KAIrB;EAAA;;EACjB,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAEhD;IACAa,OAAO,EAAEP,uBAAuB,CAACQ,UADjC;IAEAC,KAAK,EAAET,uBAAuB,CAACQ;EAF/B,CAFgD,CAAlD;EAOA,MAAME,aAA4D,GAAG,CACnE;IACEH,OAAO,EAAEP,uBAAuB,CAACQ,UADnC;IAEEC,KAAK,EAAET,uBAAuB,CAACQ;EAFjC,CADmE,EAKnE;IACED,OAAO,EAAEP,uBAAuB,CAACW,MADnC;IAEEF,KAAK,EAAET,uBAAuB,CAACW;EAFjC,CALmE,CAArE;;EAWA,MAAMC,oBAAoB,GACxBC,IAD2B,IAExB;IACH,IAAI,CAACA,IAAL,EAAW;;IACX,IAAIA,IAAI,CAACN,OAAL,KAAiBP,uBAAuB,CAACQ,UAA7C,EAAyD;MACvDL,gBAAgB,CAACH,uBAAuB,CAACQ,UAAzB,CAAhB;MACAF,gBAAgB,CAACO,IAAD,CAAhB;IACD,CAHD,MAGO;MACLV,gBAAgB,CAACH,uBAAuB,CAACW,MAAzB,CAAhB;MACAL,gBAAgB,CAACO,IAAD,CAAhB;IACD;EACF,CAXD;;EAYA,oBACE,QAAC,eAAD;IAAA,UACGX,WAAW,GAAG,GAAd,gBACC,QAAC,qBAAD;MAAA,wBACE,QAAC,WAAD;QACE,QAAQ,EAAEE,aAAa,KAAKJ,uBAAuB,CAACQ,UADtD;QAEE,OAAO,EAAE,MAAM;UACbL,gBAAgB,CAACH,uBAAuB,CAACQ,UAAzB,CAAhB;QACD,CAJH;QAKE,uBAAuB,EAAER,uBAAuB,CAACQ,UALnD;QAME,OAAO,EAAC,WANV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAYE,QAAC,WAAD;QACE,QAAQ,EAAEJ,aAAa,KAAKJ,uBAAuB,CAACW,MADtD;QAEE,OAAO,EAAE,MAAM;UACbR,gBAAgB,CAACH,uBAAuB,CAACW,MAAzB,CAAhB;QACD,CAJH;QAKE,uBAAuB,EAAEX,uBAAuB,CAACW,MALnD;QAME,OAAO,EAAC,WANV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAyBC,QAAC,aAAD;MAAA,uBACE,QAAC,YAAD;QACE,KAAK,EAAED,aADT;QAEE,WAAW,EAAG,GAAEV,uBAAuB,CAACQ,UAAW,EAFrD;QAGE,YAAY,EAAEH,aAHhB;QAIE,OAAO,EAAE,WAJX;QAKE,QAAQ,EAAEO,oBALZ;QAME,YAAY,EAAE,IANhB;QAOE,WAAW,EAAE,IAPf;QAQE,QAAQ,EAAC,YARX;QASE,UAAU,EAAC;MATb;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EA1BJ;IAAA;IAAA;IAAA;EAAA,QADF;AA2CD,CA9EM;;GAAMX,wB;;KAAAA,wB"},"metadata":{},"sourceType":"module"}