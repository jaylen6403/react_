{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\";\nconst _excluded = [\"variant\", \"ariaLabel\", \"titleMessage\", \"helperMessage\", \"icon\", \"iconAnimate\", \"statusBorder\", \"renderContent\"];\nvar _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaStatus/LumaStatus.tsx\";\nimport \"core-js/modules/es.object.assign.js\";\nimport * as React from 'react';\nimport { Root, TitleMessageDefault, SubMessageDefault, DefaultStatusIcon } from './LumaStatus.style';\nimport { LumaIcon } from '../LumaIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Message = props => {\n  const {\n    icon,\n    titleMessage,\n    helperMessage,\n    iconAnimation\n  } = props.children[0];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [icon && /*#__PURE__*/_jsxDEV(DefaultStatusIcon, {\n      children: /*#__PURE__*/_jsxDEV(LumaIcon, {\n        iconCode: icon,\n        type: \"regular\",\n        className: `${iconAnimation ? iconAnimation : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), titleMessage && /*#__PURE__*/_jsxDEV(TitleMessageDefault, {\n      children: titleMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), helperMessage && /*#__PURE__*/_jsxDEV(SubMessageDefault, {\n      children: helperMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Message;\n\nconst LoadingMessage = props => {\n  const {\n    icon,\n    titleMessage,\n    iconAnimation\n  } = props.children[0];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [icon && /*#__PURE__*/_jsxDEV(DefaultStatusIcon, {\n      children: /*#__PURE__*/_jsxDEV(LumaIcon, {\n        className: `${iconAnimation ? iconAnimation : ''}`,\n        iconCode: icon,\n        type: \"regular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TitleMessageDefault, {\n      children: titleMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = LoadingMessage;\nexport const LumaStatus = _ref => {\n  let {\n    variant,\n    ariaLabel,\n    titleMessage = variant === 'failed' ? 'We didn’t find anything.' : 'Thinking...',\n    helperMessage = 'Try a specific symbol or company name for relevant results.',\n    icon = variant === 'failed' ? 'exclamation-circle' : 'spinner',\n    iconAnimate,\n    statusBorder = false,\n    renderContent = variant === 'failed' ? /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(LoadingMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 56\n    }, this)\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/_jsxDEV(Root, Object.assign({\n    \"arial-label\": ariaLabel,\n    statusBorder: statusBorder\n  }, rest, {\n    children: variant === 'failed' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/React.cloneElement(renderContent, {}, [{\n        titleMessage: titleMessage,\n        helperMessage: helperMessage,\n        icon: icon,\n        iconAnimation: iconAnimate\n      }])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/React.cloneElement(renderContent, {}, [{\n        titleMessage: titleMessage,\n        icon: icon,\n        iconAnimation: iconAnimate\n      }])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_c3 = LumaStatus;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"LoadingMessage\");\n$RefreshReg$(_c3, \"LumaStatus\");","map":{"version":3,"names":["React","Root","TitleMessageDefault","SubMessageDefault","DefaultStatusIcon","LumaIcon","Message","props","icon","titleMessage","helperMessage","iconAnimation","children","LoadingMessage","LumaStatus","variant","ariaLabel","iconAnimate","statusBorder","renderContent","rest","cloneElement"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaStatus/LumaStatus.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Root,\n  TitleMessageDefault,\n  SubMessageDefault,\n  DefaultStatusIcon,\n} from './LumaStatus.style';\nimport { LumaIcon } from '../LumaIcon';\n\nconst Message = (props: any) => {\n  const { icon, titleMessage, helperMessage, iconAnimation } =\n    props.children[0];\n  return (\n    <>\n      {icon && (\n        <DefaultStatusIcon>\n          <LumaIcon\n            iconCode={icon}\n            type=\"regular\"\n            className={`${iconAnimation ? iconAnimation : ''}`}\n          />\n        </DefaultStatusIcon>\n      )}\n      {titleMessage && (\n        <TitleMessageDefault>{titleMessage}</TitleMessageDefault>\n      )}\n      {helperMessage && <SubMessageDefault>{helperMessage}</SubMessageDefault>}\n    </>\n  );\n};\nconst LoadingMessage = (props: any) => {\n  const { icon, titleMessage, iconAnimation } = props.children[0];\n  return (\n    <>\n      {icon && (\n        <DefaultStatusIcon>\n          <LumaIcon\n            className={`${iconAnimation ? iconAnimation : ''}`}\n            iconCode={icon}\n            type=\"regular\"\n          />\n        </DefaultStatusIcon>\n      )}\n      <TitleMessageDefault>{titleMessage}</TitleMessageDefault>\n    </>\n  );\n};\n\nexport interface StatusProp {\n  /** Type of the status */\n  variant: 'progress' | 'failed';\n  /** status aria label */\n  ariaLabel: string;\n  /** for adding teplate  */\n  renderContent?: React.ReactElement<HTMLElement>;\n  /** To change Default message */\n  titleMessage?: string;\n  /** To change Default helper message */\n  helperMessage?: string;\n  /** To change or add icon to the status */\n  icon?: string;\n  /** To add icon animation to the status */\n  iconAnimate?: string;\n  /** To add icon animation to the status */\n  statusBorder?: boolean;\n}\n\nexport const LumaStatus = ({\n  variant,\n  ariaLabel,\n  titleMessage = variant === 'failed'\n    ? 'We didn’t find anything.'\n    : 'Thinking...',\n  helperMessage = 'Try a specific symbol or company name for relevant results.',\n  icon = variant === 'failed' ? 'exclamation-circle' : 'spinner',\n  iconAnimate,\n  statusBorder = false,\n  renderContent = variant === 'failed' ? <Message /> : <LoadingMessage />,\n  ...rest\n}: StatusProp) => {\n  return (\n    <Root arial-label={ariaLabel} statusBorder={statusBorder} {...rest}>\n      {variant === 'failed' ? (\n        <div>\n          {React.cloneElement(renderContent, {}, [\n            {\n              titleMessage: titleMessage,\n              helperMessage: helperMessage,\n              icon: icon,\n              iconAnimation: iconAnimate,\n            },\n          ])}\n        </div>\n      ) : (\n        <div>\n          {React.cloneElement(renderContent, {}, [\n            {\n              titleMessage: titleMessage,\n              icon: icon,\n              iconAnimation: iconAnimate,\n            },\n          ])}\n        </div>\n      )}\n    </Root>\n  );\n};\n"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,IADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,iBAJF,QAKO,oBALP;AAMA,SAASC,QAAT,QAAyB,aAAzB;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAgB;EAC9B,MAAM;IAAEC,IAAF;IAAQC,YAAR;IAAsBC,aAAtB;IAAqCC;EAArC,IACJJ,KAAK,CAACK,QAAN,CAAe,CAAf,CADF;EAEA,oBACE;IAAA,WACGJ,IAAI,iBACH,QAAC,iBAAD;MAAA,uBACE,QAAC,QAAD;QACE,QAAQ,EAAEA,IADZ;QAEE,IAAI,EAAC,SAFP;QAGE,SAAS,EAAG,GAAEG,aAAa,GAAGA,aAAH,GAAmB,EAAG;MAHnD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFJ,EAUGF,YAAY,iBACX,QAAC,mBAAD;MAAA,UAAsBA;IAAtB;MAAA;MAAA;MAAA;IAAA,QAXJ,EAaGC,aAAa,iBAAI,QAAC,iBAAD;MAAA,UAAoBA;IAApB;MAAA;MAAA;MAAA;IAAA,QAbpB;EAAA,gBADF;AAiBD,CApBD;;KAAMJ,O;;AAqBN,MAAMO,cAAc,GAAIN,KAAD,IAAgB;EACrC,MAAM;IAAEC,IAAF;IAAQC,YAAR;IAAsBE;EAAtB,IAAwCJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAA9C;EACA,oBACE;IAAA,WACGJ,IAAI,iBACH,QAAC,iBAAD;MAAA,uBACE,QAAC,QAAD;QACE,SAAS,EAAG,GAAEG,aAAa,GAAGA,aAAH,GAAmB,EAAG,EADnD;QAEE,QAAQ,EAAEH,IAFZ;QAGE,IAAI,EAAC;MAHP;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFJ,eAUE,QAAC,mBAAD;MAAA,UAAsBC;IAAtB;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA,gBADF;AAcD,CAhBD;;MAAMI,c;AAqCN,OAAO,MAAMC,UAAU,GAAG,QAYR;EAAA,IAZS;IACzBC,OADyB;IAEzBC,SAFyB;IAGzBP,YAAY,GAAGM,OAAO,KAAK,QAAZ,GACX,0BADW,GAEX,aALqB;IAMzBL,aAAa,GAAG,6DANS;IAOzBF,IAAI,GAAGO,OAAO,KAAK,QAAZ,GAAuB,oBAAvB,GAA8C,SAP5B;IAQzBE,WARyB;IASzBC,YAAY,GAAG,KATU;IAUzBC,aAAa,GAAGJ,OAAO,KAAK,QAAZ,gBAAuB,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAvB,gBAAqC,QAAC,cAAD;MAAA;MAAA;MAAA;IAAA;EAV5B,CAYT;EAAA,IADbK,IACa;;EAChB,oBACE,QAAC,IAAD;IAAM,eAAaJ,SAAnB;IAA8B,YAAY,EAAEE;EAA5C,GAA8DE,IAA9D;IAAA,UACGL,OAAO,KAAK,QAAZ,gBACC;MAAA,uBACGf,KAAK,CAACqB,YAAN,CAAmBF,aAAnB,EAAkC,EAAlC,EAAsC,CACrC;QACEV,YAAY,EAAEA,YADhB;QAEEC,aAAa,EAAEA,aAFjB;QAGEF,IAAI,EAAEA,IAHR;QAIEG,aAAa,EAAEM;MAJjB,CADqC,CAAtC;IADH;MAAA;MAAA;MAAA;IAAA,QADD,gBAYC;MAAA,uBACGjB,KAAK,CAACqB,YAAN,CAAmBF,aAAnB,EAAkC,EAAlC,EAAsC,CACrC;QACEV,YAAY,EAAEA,YADhB;QAEED,IAAI,EAAEA,IAFR;QAGEG,aAAa,EAAEM;MAHjB,CADqC,CAAtC;IADH;MAAA;MAAA;MAAA;IAAA;EAbJ;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CAvCM;MAAMH,U"},"metadata":{},"sourceType":"module"}