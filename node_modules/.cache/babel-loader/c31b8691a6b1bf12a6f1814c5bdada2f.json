{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"/Users/jchen/Documents/GitHub/luma-fe-workspace/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\";\nconst _excluded = [\"id\", \"label\", \"type\", \"className\", \"value\", \"onChange\", \"onBlur\", \"fullWidth\", \"helperText\", \"error\", \"disabled\", \"htmlFor\", \"sizeVariant\", \"readOnly\", \"icon\", \"variant\", \"useByDropdown\"];\nvar _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaTextEntry/LumaTextEntry.tsx\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { forwardRef } from 'react';\nimport { TextEntryContainer, TextEntryField, Input, TextEntryMockContainer, TextEntryMockLabel, TextEntryMockLabelContainer, TextEntryHelper, IconInsideTextEntry } from './LumaTextEntry.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar VariantEnum;\n\n(function (VariantEnum) {\n  VariantEnum[\"free\"] = \"free\";\n  VariantEnum[\"label\"] = \"label\";\n})(VariantEnum || (VariantEnum = {}));\n\nexport const LumaTextEntry = /*#__PURE__*/forwardRef(_c = function LumaTextEntry(componentProps, forwardedRef) {\n  const {\n    id,\n    label,\n    type,\n    className,\n    value,\n    onChange,\n    onBlur,\n    fullWidth,\n    helperText,\n    error = false,\n    disabled = false,\n    htmlFor,\n    sizeVariant = 'medium',\n    readOnly = false,\n    icon,\n    variant = VariantEnum.label,\n    useByDropdown = false\n  } = componentProps,\n        rest = _objectWithoutPropertiesLoose(componentProps, _excluded);\n\n  return /*#__PURE__*/_jsxDEV(TextEntryContainer, {\n    fullWidth: fullWidth,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsxDEV(TextEntryField, {\n      sizeVariant: sizeVariant,\n      disabled: disabled,\n      className: \"text-entry--outlined\",\n      error: error,\n      children: [/*#__PURE__*/_jsxDEV(Input, Object.assign({\n        ref: forwardedRef,\n        id: id,\n        type: type,\n        value: value,\n        className: className,\n        onChange: onChange,\n        onBlur: onBlur,\n        disabled: disabled,\n        readOnly: readOnly,\n        sizeVariant: sizeVariant,\n        variant: variant,\n        placeholder: variant === VariantEnum.free ? label : '',\n        useByDropdown: useByDropdown\n      }, rest), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), icon !== undefined && /*#__PURE__*/_jsxDEV(IconInsideTextEntry, {\n        tabIndex: -1,\n        disabled: disabled,\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextEntryMockContainer, {\n        className: \"TextEntryMockContainer--label\",\n        children: /*#__PURE__*/_jsxDEV(TextEntryMockLabelContainer, {\n          sizeVariant: sizeVariant,\n          className: `${value ? 'TextEntryMockLabel--focused' : ''} TextEntryMockLabelContainer`,\n          children: variant === VariantEnum.label && /*#__PURE__*/_jsxDEV(TextEntryMockLabel, {\n            htmlFor: htmlFor,\n            className: \"TextEntryMockLabel\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), helperText && /*#__PURE__*/_jsxDEV(TextEntryHelper, {\n      className: `${error ? 'TextEntryHelper--error' : ''} TextEntryHelper`,\n      children: helperText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n});\n_c2 = LumaTextEntry;\nexport default LumaTextEntry;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LumaTextEntry$forwardRef\");\n$RefreshReg$(_c2, \"LumaTextEntry\");","map":{"version":3,"names":["forwardRef","TextEntryContainer","TextEntryField","Input","TextEntryMockContainer","TextEntryMockLabel","TextEntryMockLabelContainer","TextEntryHelper","IconInsideTextEntry","VariantEnum","LumaTextEntry","componentProps","forwardedRef","id","label","type","className","value","onChange","onBlur","fullWidth","helperText","error","disabled","htmlFor","sizeVariant","readOnly","icon","variant","useByDropdown","rest","free","undefined"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/design-system/src/lib/components-Luma/components/LumaTextEntry/LumaTextEntry.tsx"],"sourcesContent":["import { ChangeEvent, FocusEvent, forwardRef, ReactNode, Ref } from 'react';\nimport {\n  TextEntryContainer,\n  TextEntryField,\n  Input,\n  TextEntryMockContainer,\n  TextEntryMockLabel,\n  TextEntryMockLabelContainer,\n  TextEntryHelper,\n  IconInsideTextEntry,\n} from './LumaTextEntry.styles';\n\nconst enum VariantEnum {\n  free = 'free',\n  label = 'label',\n}\n\nexport interface TextEntryProps {\n  /**a unique key for the field */\n  id?: string;\n  /**which act as placeholder initially when type anything it will act as label of the textbox */\n  label?: string;\n  /**htmlForwhich will help label will target for  */\n  htmlFor?: string;\n  /**Type of the field*/\n  type?: string;\n  /**it will be the value enter*/\n  value?: string;\n  /* defaultValue: default value will be adding usin this prop */\n  defaultValue?: string;\n  /* onChange action */\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  /**onBlur action*/\n  onBlur?: (e: FocusEvent<HTMLInputElement>) => void;\n  /* onFocus action */\n  onFocus?: (e: FocusEvent<HTMLInputElement>) => void;\n  /* ClassName is the normal class*/\n  className?: string;\n  /**Error will act when user need to show validation error*/\n  error?: boolean;\n  /**helpr will show below the input field*/\n  helperText?: string;\n  /**readonly : cannot Enter or fill value*/\n  readOnly?: boolean;\n  /**fullwidth will make the field 100% width*/\n  fullWidth?: boolean;\n  /**disabled will disable the field\n   * @default false\n   */\n  disabled?: boolean;\n  /**size will make the field small, medium or large size\n   *@default medium*/\n  sizeVariant?: 'small' | 'medium' | 'large';\n  /* The icon that will be displayed on the right in Text Entry */\n  icon?: ReactNode;\n  /* The icon that will be displayed on the right in Text Entry */\n  variant?: keyof typeof VariantEnum;\n  /* Specifies whether input is used by dropdown. */\n  useByDropdown?: boolean;\n  /* A regular expression for allowed entry format. */\n  pattern?: string;\n}\n\nexport const LumaTextEntry = forwardRef<HTMLInputElement, TextEntryProps>(\n  function LumaTextEntry(\n    componentProps: TextEntryProps,\n    forwardedRef: Ref<HTMLInputElement>\n  ) {\n    const {\n      id,\n      label,\n      type,\n      className,\n      value,\n      onChange,\n      onBlur,\n      fullWidth,\n      helperText,\n      error = false,\n      disabled = false,\n      htmlFor,\n      sizeVariant = 'medium',\n      readOnly = false,\n      icon,\n      variant = VariantEnum.label,\n      useByDropdown = false,\n      ...rest\n    } = componentProps;\n\n    return (\n      <TextEntryContainer fullWidth={fullWidth} disabled={disabled}>\n        <TextEntryField\n          sizeVariant={sizeVariant}\n          disabled={disabled}\n          className=\"text-entry--outlined\"\n          error={error}\n        >\n          <Input\n            ref={forwardedRef}\n            id={id}\n            type={type}\n            value={value}\n            className={className}\n            onChange={onChange}\n            onBlur={onBlur}\n            disabled={disabled}\n            readOnly={readOnly}\n            sizeVariant={sizeVariant}\n            variant={variant}\n            placeholder={variant === VariantEnum.free ? label : ''}\n            useByDropdown={useByDropdown}\n            {...rest}\n          />\n          {icon !== undefined && (\n            <IconInsideTextEntry tabIndex={-1} disabled={disabled}>\n              {icon}\n            </IconInsideTextEntry>\n          )}\n          <TextEntryMockContainer className=\"TextEntryMockContainer--label\">\n            <TextEntryMockLabelContainer\n              sizeVariant={sizeVariant}\n              className={`${\n                value ? 'TextEntryMockLabel--focused' : ''\n              } TextEntryMockLabelContainer`}\n            >\n              {variant === VariantEnum.label && (\n                <TextEntryMockLabel\n                  htmlFor={htmlFor}\n                  className=\"TextEntryMockLabel\"\n                >\n                  {label}\n                </TextEntryMockLabel>\n              )}\n            </TextEntryMockLabelContainer>\n          </TextEntryMockContainer>\n        </TextEntryField>\n        {helperText && (\n          <TextEntryHelper\n            className={`${\n              error ? 'TextEntryHelper--error' : ''\n            } TextEntryHelper`}\n          >\n            {helperText}\n          </TextEntryHelper>\n        )}\n      </TextEntryContainer>\n    );\n  }\n);\n\nexport default LumaTextEntry;\n"],"mappings":";;;;AAAA,SAAkCA,UAAlC,QAAoE,OAApE;AACA,SACEC,kBADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,sBAJF,EAKEC,kBALF,EAMEC,2BANF,EAOEC,eAPF,EAQEC,mBARF,QASO,wBATP;;IAWWC,W;;WAAAA,W;EAAAA,W;EAAAA,W;GAAAA,W,KAAAA,W;;AAmDX,OAAO,MAAMC,aAAa,gBAAGV,UAAU,MACrC,SAASU,aAAT,CACEC,cADF,EAEEC,YAFF,EAGE;EACA,MAAM;IACJC,EADI;IAEJC,KAFI;IAGJC,IAHI;IAIJC,SAJI;IAKJC,KALI;IAMJC,QANI;IAOJC,MAPI;IAQJC,SARI;IASJC,UATI;IAUJC,KAAK,GAAG,KAVJ;IAWJC,QAAQ,GAAG,KAXP;IAYJC,OAZI;IAaJC,WAAW,GAAG,QAbV;IAcJC,QAAQ,GAAG,KAdP;IAeJC,IAfI;IAgBJC,OAAO,GAAGnB,WAAW,CAACK,KAhBlB;IAiBJe,aAAa,GAAG;EAjBZ,IAmBFlB,cAnBJ;EAAA,MAkBKmB,IAlBL,iCAmBInB,cAnBJ;;EAqBA,oBACE,QAAC,kBAAD;IAAoB,SAAS,EAAES,SAA/B;IAA0C,QAAQ,EAAEG,QAApD;IAAA,wBACE,QAAC,cAAD;MACE,WAAW,EAAEE,WADf;MAEE,QAAQ,EAAEF,QAFZ;MAGE,SAAS,EAAC,sBAHZ;MAIE,KAAK,EAAED,KAJT;MAAA,wBAME,QAAC,KAAD;QACE,GAAG,EAAEV,YADP;QAEE,EAAE,EAAEC,EAFN;QAGE,IAAI,EAAEE,IAHR;QAIE,KAAK,EAAEE,KAJT;QAKE,SAAS,EAAED,SALb;QAME,QAAQ,EAAEE,QANZ;QAOE,MAAM,EAAEC,MAPV;QAQE,QAAQ,EAAEI,QARZ;QASE,QAAQ,EAAEG,QATZ;QAUE,WAAW,EAAED,WAVf;QAWE,OAAO,EAAEG,OAXX;QAYE,WAAW,EAAEA,OAAO,KAAKnB,WAAW,CAACsB,IAAxB,GAA+BjB,KAA/B,GAAuC,EAZtD;QAaE,aAAa,EAAEe;MAbjB,GAcMC,IAdN;QAAA;QAAA;QAAA;MAAA,QANF,EAsBGH,IAAI,KAAKK,SAAT,iBACC,QAAC,mBAAD;QAAqB,QAAQ,EAAE,CAAC,CAAhC;QAAmC,QAAQ,EAAET,QAA7C;QAAA,UACGI;MADH;QAAA;QAAA;QAAA;MAAA,QAvBJ,eA2BE,QAAC,sBAAD;QAAwB,SAAS,EAAC,+BAAlC;QAAA,uBACE,QAAC,2BAAD;UACE,WAAW,EAAEF,WADf;UAEE,SAAS,EAAG,GACVR,KAAK,GAAG,6BAAH,GAAmC,EACzC,8BAJH;UAAA,UAMGW,OAAO,KAAKnB,WAAW,CAACK,KAAxB,iBACC,QAAC,kBAAD;YACE,OAAO,EAAEU,OADX;YAEE,SAAS,EAAC,oBAFZ;YAAA,UAIGV;UAJH;YAAA;YAAA;YAAA;UAAA;QAPJ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QA3BF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EA8CGO,UAAU,iBACT,QAAC,eAAD;MACE,SAAS,EAAG,GACVC,KAAK,GAAG,wBAAH,GAA8B,EACpC,kBAHH;MAAA,UAKGD;IALH;MAAA;MAAA;MAAA;IAAA,QA/CJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0DD,CApFoC,CAAhC;MAAMX,a;AAuFb,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}