{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventConfirmations/EventConfirmationOptions/Filters/RegTypeFilterDropdown/RegTypeFilterDropdown.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.flat-map.js\";\nimport \"core-js/modules/es.array.unscopables.flat-map.js\";\nimport { useMemo } from 'react';\nimport { useEventConfirmationOptions } from '../../../../../utils/hooks/useEventConfirmationOptions';\nimport { FilterDropdown } from '../FilterDropdown/FilterDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegTypeFilterDropdown = () => {\n  _s();\n\n  const {\n    events,\n    regTypeFilter\n  } = useEventConfirmationOptions();\n  const regTypes = useMemo(() => [...new Set(events.data.flatMap(event => event.registrationType || []))], [events.data]);\n  const options = useMemo(() => regTypes.map(regType => ({\n    label: regType,\n    value: regType\n  })), [regTypes]);\n  return /*#__PURE__*/_jsxDEV(FilterDropdown, {\n    options: options,\n    label: `Registration Type`,\n    selected: regTypeFilter.value,\n    onChange: typeValue => //Sadly this must be any for the time being as the correct MenuItem is not export from the design-system\n    regTypeFilter.setFilter( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeValue.map(typeOption => typeOption.value) || [])\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegTypeFilterDropdown, \"s6SnANZFi/5zWS3gHTy9YXX5SIo=\", false, function () {\n  return [useEventConfirmationOptions];\n});\n\n_c = RegTypeFilterDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegTypeFilterDropdown\");","map":{"version":3,"names":["useMemo","useEventConfirmationOptions","FilterDropdown","RegTypeFilterDropdown","events","regTypeFilter","regTypes","Set","data","flatMap","event","registrationType","options","map","regType","label","value","typeValue","setFilter","typeOption"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/components/EventConfirmations/EventConfirmationOptions/Filters/RegTypeFilterDropdown/RegTypeFilterDropdown.tsx"],"sourcesContent":["import { useMemo } from 'react';\nimport { useEventConfirmationOptions } from '../../../../../utils/hooks/useEventConfirmationOptions';\nimport {\n  FilterDropdown,\n  FilterDropdownOptions,\n} from '../FilterDropdown/FilterDropdown';\n\nexport const RegTypeFilterDropdown = () => {\n  const { events, regTypeFilter } = useEventConfirmationOptions();\n  const regTypes = useMemo(\n    () => [\n      ...new Set(events.data.flatMap((event) => event.registrationType || [])),\n    ],\n    [events.data]\n  );\n\n  const options: FilterDropdownOptions<string>[] = useMemo(\n    () =>\n      regTypes.map((regType) => ({\n        label: regType,\n        value: regType,\n      })),\n    [regTypes]\n  );\n\n  return (\n    <FilterDropdown<string>\n      options={options}\n      label={`Registration Type`}\n      selected={regTypeFilter.value}\n      onChange={(typeValue) =>\n        //Sadly this must be any for the time being as the correct MenuItem is not export from the design-system\n        regTypeFilter.setFilter(\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          typeValue.map((typeOption: any) => typeOption.value) || []\n        )\n      }\n    />\n  );\n};\n"],"mappings":";;;;;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,2BAAT,QAA4C,wDAA5C;AACA,SACEC,cADF,QAGO,kCAHP;;AAKA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;EAAA;;EACzC,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAA4BJ,2BAA2B,EAA7D;EACA,MAAMK,QAAQ,GAAGN,OAAO,CACtB,MAAM,CACJ,GAAG,IAAIO,GAAJ,CAAQH,MAAM,CAACI,IAAP,CAAYC,OAAZ,CAAqBC,KAAD,IAAWA,KAAK,CAACC,gBAAN,IAA0B,EAAzD,CAAR,CADC,CADgB,EAItB,CAACP,MAAM,CAACI,IAAR,CAJsB,CAAxB;EAOA,MAAMI,OAAwC,GAAGZ,OAAO,CACtD,MACEM,QAAQ,CAACO,GAAT,CAAcC,OAAD,KAAc;IACzBC,KAAK,EAAED,OADkB;IAEzBE,KAAK,EAAEF;EAFkB,CAAd,CAAb,CAFoD,EAMtD,CAACR,QAAD,CANsD,CAAxD;EASA,oBACE,QAAC,cAAD;IACE,OAAO,EAAEM,OADX;IAEE,KAAK,EAAG,mBAFV;IAGE,QAAQ,EAAEP,aAAa,CAACW,KAH1B;IAIE,QAAQ,EAAGC,SAAD,IACR;IACAZ,aAAa,CAACa,SAAd,EACE;IACAD,SAAS,CAACJ,GAAV,CAAeM,UAAD,IAAqBA,UAAU,CAACH,KAA9C,KAAwD,EAF1D;EANJ;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAhCM;;GAAMb,qB;UACuBF,2B;;;KADvBE,qB"},"metadata":{},"sourceType":"module"}