{"ast":null,"code":"import { baseApi as api } from './marketplaceProductServiceBaseApi';\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: build => ({\n    checkIfUserCompletedTrainingUsingGet: build.query({\n      query: () => ({\n        url: `/product/training/completed/user`\n      })\n    }),\n    getUserTrainingStatusUsingGet: build.query({\n      query: () => ({\n        url: `/product/training/user`\n      })\n    })\n  }),\n  overrideExisting: false\n});\nexport { injectedRtkApi as marketplaceProductServiceApi };\nexport const {\n  useCheckIfUserCompletedTrainingUsingGetQuery,\n  useGetUserTrainingStatusUsingGetQuery\n} = injectedRtkApi;","map":{"version":3,"names":["baseApi","api","injectedRtkApi","injectEndpoints","endpoints","build","checkIfUserCompletedTrainingUsingGet","query","url","getUserTrainingStatusUsingGet","overrideExisting","marketplaceProductServiceApi","useCheckIfUserCompletedTrainingUsingGetQuery","useGetUserTrainingStatusUsingGetQuery"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/redux/marketplaceProductService/marketplaceProductServiceEndpoints.ts"],"sourcesContent":["import { baseApi as api } from './marketplaceProductServiceBaseApi';\nimport type { GetTrainingResponse } from './types';\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: (build) => ({\n    checkIfUserCompletedTrainingUsingGet: build.query<\n      CheckIfUserCompletedTrainingUsingGetApiResponse,\n      CheckIfUserCompletedTrainingUsingGetApiArg\n    >({\n      query: () => ({ url: `/product/training/completed/user` }),\n    }),\n    getUserTrainingStatusUsingGet: build.query<\n      GetUserTrainingStatusUsingGetApiResponse,\n      GetUserTrainingStatusUsingGetApiArg\n    >({\n      query: () => ({ url: `/product/training/user` }),\n    }),\n  }),\n  overrideExisting: false,\n});\nexport { injectedRtkApi as marketplaceProductServiceApi };\nexport type CheckIfUserCompletedTrainingUsingGetApiResponse = unknown;\nexport type CheckIfUserCompletedTrainingUsingGetApiArg = void;\nexport type GetUserTrainingStatusUsingGetApiResponse = GetTrainingResponse;\nexport type GetUserTrainingStatusUsingGetApiArg = void;\nexport const {\n  useCheckIfUserCompletedTrainingUsingGetQuery,\n  useGetUserTrainingStatusUsingGetQuery,\n} = injectedRtkApi;\n"],"mappings":"AAAA,SAASA,OAAO,IAAIC,GAApB,QAA+B,oCAA/B;AAEA,MAAMC,cAAc,GAAGD,GAAG,CAACE,eAAJ,CAAoB;EACzCC,SAAS,EAAGC,KAAD,KAAY;IACrBC,oCAAoC,EAAED,KAAK,CAACE,KAAN,CAGpC;MACAA,KAAK,EAAE,OAAO;QAAEC,GAAG,EAAG;MAAR,CAAP;IADP,CAHoC,CADjB;IAOrBC,6BAA6B,EAAEJ,KAAK,CAACE,KAAN,CAG7B;MACAA,KAAK,EAAE,OAAO;QAAEC,GAAG,EAAG;MAAR,CAAP;IADP,CAH6B;EAPV,CAAZ,CAD8B;EAezCE,gBAAgB,EAAE;AAfuB,CAApB,CAAvB;AAiBA,SAASR,cAAc,IAAIS,4BAA3B;AAKA,OAAO,MAAM;EACXC,4CADW;EAEXC;AAFW,IAGTX,cAHG"},"metadata":{},"sourceType":"module"}