{"ast":null,"code":"import store from '../redux/configureStore';\nimport { authApi } from '../redux/authService/slice';\nexport const fetchCstAndNavigate = createLinkFn => {\n  store.dispatch(authApi.endpoints.crossSiteCst.initiate()).then(response => {\n    const {\n      data: cst\n    } = response; // If CST returned navigate to URL\n\n    if (cst) {\n      window.location.href = createLinkFn(cst);\n    } else {\n      console.error(`Error: CST not retrieved for request to ${createLinkFn('_missing_cst_')} `, response);\n    }\n  });\n};","map":{"version":3,"names":["store","authApi","fetchCstAndNavigate","createLinkFn","dispatch","endpoints","crossSiteCst","initiate","then","response","data","cst","window","location","href","console","error"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/redux/src/utils/fetchCstAndNavigate.ts"],"sourcesContent":["import store from '../redux/configureStore';\nimport { authApi } from '../redux/authService/slice';\n\ntype CreateLinkFn = (cst: string) => string;\n\nexport const fetchCstAndNavigate = (createLinkFn: CreateLinkFn) => {\n  store.dispatch(authApi.endpoints.crossSiteCst.initiate()).then((response) => {\n    const { data: cst } = response;\n    // If CST returned navigate to URL\n    if (cst) {\n      window.location.href = createLinkFn(cst);\n    } else {\n      console.error(\n        `Error: CST not retrieved for request to ${createLinkFn(\n          '_missing_cst_'\n        )} `,\n        response\n      );\n    }\n  });\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,yBAAlB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AAIA,OAAO,MAAMC,mBAAmB,GAAIC,YAAD,IAAgC;EACjEH,KAAK,CAACI,QAAN,CAAeH,OAAO,CAACI,SAAR,CAAkBC,YAAlB,CAA+BC,QAA/B,EAAf,EAA0DC,IAA1D,CAAgEC,QAAD,IAAc;IAC3E,MAAM;MAAEC,IAAI,EAAEC;IAAR,IAAgBF,QAAtB,CAD2E,CAE3E;;IACA,IAAIE,GAAJ,EAAS;MACPC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBX,YAAY,CAACQ,GAAD,CAAnC;IACD,CAFD,MAEO;MACLI,OAAO,CAACC,KAAR,CACG,2CAA0Cb,YAAY,CACrD,eADqD,CAErD,GAHJ,EAIEM,QAJF;IAMD;EACF,CAbD;AAcD,CAfM"},"metadata":{},"sourceType":"module"}