{"ast":null,"code":"var _jsxFileName = \"/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/creationhub/src/components/PricingForm/groups/ConfigurableFormGroups/formElements/FormField.tsx\",\n    _s = $RefreshSig$();\n\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport produce from 'immer';\nimport { useCallback } from 'react';\nimport { LumaDatePicker, LumaTextEntry } from '@luma-fe-workspace/design-system';\nimport { ComputationMode, ValueTypes } from '@luma-fe-workspace/redux';\nimport { BasketSelect } from './basket';\nimport { getNumericValue, isModifiable } from './FormFieldUtils';\nimport DropdownWrapper from './dropdown/DropdownWrapper';\nimport MultiDropdownWrapper from './dropdown/MultiDropdownWrapper';\nimport { DateFormatter } from '@luma-fe-workspace/utility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const createDataTestId = (componentName, id) => {\n  const preparedId = id.toLowerCase().replace(/\\s/g, '_');\n  return `${componentName}-${preparedId}`;\n};\nexport function FormField({\n  field,\n  values,\n  handleValidation,\n  setFieldValue,\n  hasError,\n  constraints,\n  isEditable,\n  onValidation\n}) {\n  _s();\n\n  var _ref;\n\n  const {\n    paramName\n  } = field;\n  const label = 'label' in field ? field.label : '';\n  const value = values[paramName];\n  const fieldProps = {\n    id: paramName\n  };\n  const onChange = useCallback(newValue => {\n    setFieldValue(paramName, newValue);\n  }, [paramName, setFieldValue]);\n\n  const onUnderlierSelect = ({\n    id,\n    label\n  }) => {\n    const basket = value;\n    const isIdSelected = basket.underliers.some(({\n      underlier\n    }) => underlier.id === id);\n\n    if (!isIdSelected) {\n      const newBasket = produce(basket, draft => {\n        const newUnderlier = {\n          weight: undefined,\n          underlier: {\n            id,\n            label\n          }\n        };\n        draft.underliers.push(newUnderlier);\n      });\n      setFieldValue(paramName, newBasket);\n      onValidation(paramName, newBasket);\n    }\n  };\n\n  if (!value) {\n    return null;\n  }\n\n  const computationMode = 'computationMode' in value && value.computationMode || ComputationMode.MODIFIABLE;\n\n  if (computationMode === ComputationMode.SOLVED) {\n    return /*#__PURE__*/_jsxDEV(LumaTextEntry, Object.assign({\n      label: label,\n      type: \"string\",\n      readOnly: true,\n      value: \"Solve For\",\n      sizeVariant: \"large\"\n    }, fieldProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n  const isDisabled = !isEditable || !isModifiable(computationMode);\n\n  switch (value == null ? void 0 : value.type) {\n    case ValueTypes.Enum:\n      return /*#__PURE__*/_jsxDEV(DropdownWrapper, Object.assign({\n        paramName: paramName,\n        label: label,\n        value: value,\n        constraints: constraints,\n        onChange: onChange,\n        onValidation: newValue => onValidation(paramName, newValue),\n        isDisabled: isDisabled,\n        readOnly: false,\n        \"data-testid\": createDataTestId('dropdown', fieldProps.id)\n      }, fieldProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this);\n\n    case ValueTypes.MultiEnum:\n      return /*#__PURE__*/_jsxDEV(MultiDropdownWrapper, Object.assign({\n        paramName: paramName,\n        label: label,\n        value: value,\n        constraints: constraints,\n        onChange: onChange,\n        onBlur: () => {\n          handleValidation(values);\n        },\n        isDisabled: isDisabled,\n        readOnly: false,\n        \"data-testid\": createDataTestId('multidropdown', fieldProps.id)\n      }, fieldProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this);\n\n    case ValueTypes.WeightedBasket:\n    case ValueTypes.UnweightedBasket:\n      return /*#__PURE__*/_jsxDEV(BasketSelect, Object.assign({\n        onUnderlierSelect: onUnderlierSelect,\n        isEditable: isEditable,\n        \"data-testid\": createDataTestId('basket', fieldProps.id)\n      }, fieldProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this);\n\n    case ValueTypes.LocalDate:\n      return /*#__PURE__*/_jsxDEV(LumaDatePicker, Object.assign({\n        label: label,\n        variant: \"datetime\",\n        inputFormat: \"yyyy-MM-dd\",\n        disabled: isDisabled,\n        error: hasError,\n        defaultValue: new Date(value == null ? void 0 : value.value),\n        onChange: date => {\n          const param = {\n            type: ValueTypes.LocalDate,\n            value: DateFormatter.formatLocalDate(date),\n            computationMode\n          };\n          onChange(param);\n          onValidation(paramName, param);\n        },\n        size: \"large\",\n        \"data-testid\": createDataTestId('datepicker', fieldProps.id)\n      }, fieldProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this);\n\n    case ValueTypes.Numeric:\n      return /*#__PURE__*/_jsxDEV(LumaTextEntry, Object.assign({\n        label: label,\n        type: \"number\",\n        disabled: isDisabled,\n        readOnly: false,\n        value: ((_ref = value == null ? void 0 : value.value) != null ? _ref : '').toString(),\n        onChange: e => onChange(getNumericValue(e, computationMode)),\n        onBlur: e => onValidation(paramName, getNumericValue(e, computationMode)),\n        error: hasError,\n        sizeVariant: \"large\",\n        \"data-testid\": createDataTestId('input', fieldProps.id)\n      }, fieldProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return null;\n  }\n}\n\n_s(FormField, \"Iu2IEcVwb9j0g1NdDLJZGcgLzxw=\");\n\n_c = FormField;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormField\");","map":{"version":3,"names":["produce","useCallback","LumaDatePicker","LumaTextEntry","ComputationMode","ValueTypes","BasketSelect","getNumericValue","isModifiable","DropdownWrapper","MultiDropdownWrapper","DateFormatter","createDataTestId","componentName","id","preparedId","toLowerCase","replace","FormField","field","values","handleValidation","setFieldValue","hasError","constraints","isEditable","onValidation","paramName","label","value","fieldProps","onChange","newValue","onUnderlierSelect","basket","isIdSelected","underliers","some","underlier","newBasket","draft","newUnderlier","weight","undefined","push","computationMode","MODIFIABLE","SOLVED","isDisabled","type","Enum","MultiEnum","WeightedBasket","UnweightedBasket","LocalDate","Date","date","param","formatLocalDate","Numeric","toString","e"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/creationhub/src/components/PricingForm/groups/ConfigurableFormGroups/formElements/FormField.tsx"],"sourcesContent":["import produce from 'immer';\nimport { useCallback } from 'react';\nimport {\n  LumaDatePicker,\n  LumaTextEntry,\n} from '@luma-fe-workspace/design-system';\nimport {\n  Basket,\n  ComputationMode,\n  EnumValue,\n  LocalDateValue,\n  MultiEnumValue,\n  NumericValue,\n  ParamConstraints,\n  ParamName,\n  ParamValue,\n  SectionField,\n  UnderlierDetails,\n  ValueTypes,\n} from '@luma-fe-workspace/redux';\nimport { PricingFormProps } from '../../../PricingForm';\nimport { BasketSelect } from './basket';\nimport { getNumericValue, isModifiable } from './FormFieldUtils';\nimport DropdownWrapper from './dropdown/DropdownWrapper';\nimport MultiDropdownWrapper from './dropdown/MultiDropdownWrapper';\nimport { DateFormatter } from '@luma-fe-workspace/utility';\ninterface FieldProps extends PricingFormProps {\n  field: SectionField;\n  constraints?: Record<ParamName, ParamConstraints>;\n  hasError: boolean;\n  name: string;\n  onValidation: (\n    paramName: ParamName,\n    newValue: ParamValue | undefined\n  ) => void;\n}\n\nexport const createDataTestId = (componentName: string, id: string) => {\n  const preparedId = id.toLowerCase().replace(/\\s/g, '_');\n  return `${componentName}-${preparedId}`;\n};\n\nexport function FormField({\n  field,\n  values,\n  handleValidation,\n  setFieldValue,\n  hasError,\n  constraints,\n  isEditable,\n  onValidation,\n}: FieldProps): JSX.Element | null {\n  const { paramName } = field;\n  const label = 'label' in field ? field.label : '';\n  const value = values[paramName];\n  const fieldProps = {\n    id: paramName,\n  };\n  const onChange = useCallback(\n    (newValue: ParamValue | undefined) => {\n      setFieldValue(paramName, newValue as ParamValue);\n    },\n    [paramName, setFieldValue]\n  );\n\n  const onUnderlierSelect = ({ id, label }: UnderlierDetails) => {\n    const basket = value as Basket;\n    const isIdSelected = basket.underliers.some(\n      ({ underlier }) => underlier.id === id\n    );\n    if (!isIdSelected) {\n      const newBasket = produce(basket, (draft) => {\n        const newUnderlier = { weight: undefined, underlier: { id, label } };\n        draft.underliers.push(newUnderlier);\n      });\n      setFieldValue(paramName, newBasket);\n      onValidation(paramName, newBasket);\n    }\n  };\n\n  if (!value) {\n    return null;\n  }\n\n  const computationMode =\n    ('computationMode' in value && value.computationMode) ||\n    ComputationMode.MODIFIABLE;\n  if (computationMode === ComputationMode.SOLVED) {\n    return (\n      <LumaTextEntry\n        label={label}\n        type=\"string\"\n        readOnly={true}\n        value=\"Solve For\"\n        sizeVariant=\"large\"\n        {...fieldProps}\n      />\n    );\n  }\n  const isDisabled = !isEditable || !isModifiable(computationMode);\n  switch (value?.type) {\n    case ValueTypes.Enum:\n      return (\n        <DropdownWrapper\n          paramName={paramName}\n          label={label}\n          value={value as EnumValue}\n          constraints={constraints}\n          onChange={onChange}\n          onValidation={(newValue) => onValidation(paramName, newValue)}\n          isDisabled={isDisabled}\n          readOnly={false}\n          data-testid={createDataTestId('dropdown', fieldProps.id)}\n          {...fieldProps}\n        />\n      );\n    case ValueTypes.MultiEnum:\n      return (\n        <MultiDropdownWrapper\n          paramName={paramName}\n          label={label}\n          value={value as MultiEnumValue}\n          constraints={constraints}\n          onChange={onChange}\n          onBlur={() => {\n            handleValidation(values);\n          }}\n          isDisabled={isDisabled}\n          readOnly={false}\n          data-testid={createDataTestId('multidropdown', fieldProps.id)}\n          {...fieldProps}\n        />\n      );\n    case ValueTypes.WeightedBasket:\n    case ValueTypes.UnweightedBasket:\n      return (\n        <BasketSelect\n          onUnderlierSelect={onUnderlierSelect}\n          isEditable={isEditable}\n          data-testid={createDataTestId('basket', fieldProps.id)}\n          {...fieldProps}\n        />\n      );\n    case ValueTypes.LocalDate:\n      return (\n        <LumaDatePicker\n          label={label}\n          variant=\"datetime\"\n          inputFormat=\"yyyy-MM-dd\"\n          disabled={isDisabled}\n          error={hasError}\n          defaultValue={new Date((value as LocalDateValue)?.value as string)}\n          onChange={(date) => {\n            const param = {\n              type: ValueTypes.LocalDate,\n              value: DateFormatter.formatLocalDate(date),\n              computationMode,\n            };\n            onChange(param);\n            onValidation(paramName, param);\n          }}\n          size=\"large\"\n          data-testid={createDataTestId('datepicker', fieldProps.id)}\n          {...fieldProps}\n        />\n      );\n    case ValueTypes.Numeric:\n      return (\n        <LumaTextEntry\n          label={label}\n          type=\"number\"\n          disabled={isDisabled}\n          readOnly={false}\n          value={(((value as NumericValue)?.value as number) ?? '').toString()}\n          onChange={(e) => onChange(getNumericValue(e, computationMode))}\n          onBlur={(e) =>\n            onValidation(paramName, getNumericValue(e, computationMode))\n          }\n          error={hasError}\n          sizeVariant=\"large\"\n          data-testid={createDataTestId('input', fieldProps.id)}\n          {...fieldProps}\n        />\n      );\n\n    default:\n      return null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}