{"ast":null,"code":"import \"core-js/modules/es.object.assign.js\";\nexport const formsFilledCheck = ({\n  allValuesFilled,\n  noValuesFilled,\n  setFormsStatus,\n  formsStatus\n}) => {\n  if (noValuesFilled) {\n    setFormsStatus(Object.assign({}, formsStatus, {\n      noValuesFilled: true,\n      allValuesFilled: false,\n      atLeastOneValueFilled: false\n    }));\n  } else if (allValuesFilled) {\n    setFormsStatus(Object.assign({}, formsStatus, {\n      allValuesFilled: true,\n      noValuesFilled: false,\n      atLeastOneValueFilled: false\n    }));\n  } else {\n    setFormsStatus(Object.assign({}, formsStatus, {\n      atLeastOneValueFilled: true,\n      allValuesFilled: false,\n      noValuesFilled: false\n    }));\n  }\n\n  return formsStatus;\n};\nexport const validateButtonsCashForm = values => {\n  const transformedValues = {\n    Confirmed: Number(values.Confirmed),\n    Luma: Number(values.Luma),\n    Issuer: Number(values.Issuer)\n  };\n  const allButtonsDisabled = false;\n  const canReview = Boolean(!values.Confirmed && (values.Issuer || values.Luma) && values.Issuer !== values.Luma);\n  const canConfirm = Boolean(values.Confirmed || values.Issuer && values.Luma && values.Issuer === values.Luma);\n  const canNotConfirm = Boolean(!transformedValues.Confirmed && !transformedValues.Luma && !transformedValues.Issuer);\n  return {\n    allButtonsDisabled: allButtonsDisabled,\n    canReview: canReview,\n    canConfirm: canConfirm,\n    canNotConfirm: canNotConfirm\n  };\n};\nexport const validateButtonsPhysicalForm = (values, selectedUnderlier) => {\n  const transformedValues = {\n    lumaShares: Number(values.lumaShares),\n    issuerShares: Number(values.issuerShares),\n    confirmedShares: Number(values.confirmedShares),\n    lumaCash: Number(values.lumaCash),\n    issuerCash: Number(values.issuerCash),\n    confirmedCash: Number(values.confirmedCash)\n  };\n  const allButtonsDisabled = !selectedUnderlier.display; //Can confirm if confirmed shares exist, or luma/issuer values are the same\n\n  const canConfirm = Boolean(transformedValues.confirmedShares) || Boolean((transformedValues.lumaShares || transformedValues.lumaCash) && (transformedValues == null ? void 0 : transformedValues.lumaShares) === (transformedValues == null ? void 0 : transformedValues.issuerShares) && (transformedValues == null ? void 0 : transformedValues.lumaCash) === (transformedValues == null ? void 0 : transformedValues.issuerCash));\n  let canReview = false;\n  if (canConfirm) canReview = false;else {\n    canReview = Boolean(transformedValues.lumaShares || transformedValues.lumaCash || transformedValues.issuerShares || transformedValues.issuerCash);\n  }\n  const canNotConfirm = !transformedValues.lumaShares && !transformedValues.issuerShares && !transformedValues.confirmedShares && !transformedValues.lumaCash && !transformedValues.issuerCash && !transformedValues.confirmedCash;\n  return {\n    allButtonsDisabled: allButtonsDisabled,\n    canReview: canReview,\n    canConfirm: canConfirm,\n    canNotConfirm: canNotConfirm\n  };\n};","map":{"version":3,"names":["formsFilledCheck","allValuesFilled","noValuesFilled","setFormsStatus","formsStatus","atLeastOneValueFilled","validateButtonsCashForm","values","transformedValues","Confirmed","Number","Luma","Issuer","allButtonsDisabled","canReview","Boolean","canConfirm","canNotConfirm","validateButtonsPhysicalForm","selectedUnderlier","lumaShares","issuerShares","confirmedShares","lumaCash","issuerCash","confirmedCash","display"],"sources":["/Users/jchen/Documents/GitHub/luma-fe-workspace/libs/luma/confirmation/src/utils/formValidators.ts"],"sourcesContent":["import { Dispatch, SetStateAction } from 'react';\nimport {\n  initialCashValues,\n  initialPhysicalValues,\n  Underlier,\n} from './modalUtils';\n\ninterface FormStatus {\n  allValuesFilled: boolean;\n  atLeastOneValueFilled: boolean;\n  noValuesFilled: boolean;\n}\n\ninterface Props {\n  allValuesFilled: boolean;\n  noValuesFilled: boolean;\n  setFormsStatus: Dispatch<SetStateAction<FormStatus>>;\n  formsStatus: FormStatus;\n}\n\nexport const formsFilledCheck = ({\n  allValuesFilled,\n  noValuesFilled,\n  setFormsStatus,\n  formsStatus,\n}: Props) => {\n  if (noValuesFilled) {\n    setFormsStatus({\n      ...formsStatus,\n      noValuesFilled: true,\n      allValuesFilled: false,\n      atLeastOneValueFilled: false,\n    });\n  } else if (allValuesFilled) {\n    setFormsStatus({\n      ...formsStatus,\n      allValuesFilled: true,\n      noValuesFilled: false,\n      atLeastOneValueFilled: false,\n    });\n  } else {\n    setFormsStatus({\n      ...formsStatus,\n      atLeastOneValueFilled: true,\n      allValuesFilled: false,\n      noValuesFilled: false,\n    });\n  }\n  return formsStatus;\n};\n\nexport interface FormButtonValidation {\n  allButtonsDisabled: boolean;\n  canReview: boolean;\n  canConfirm: boolean;\n  canNotConfirm: boolean;\n}\n\nexport const validateButtonsCashForm = (\n  values: initialCashValues\n): FormButtonValidation => {\n  const transformedValues = {\n    Confirmed: Number(values.Confirmed),\n    Luma: Number(values.Luma),\n    Issuer: Number(values.Issuer),\n  };\n  const allButtonsDisabled = false;\n  const canReview = Boolean(\n    !values.Confirmed &&\n      (values.Issuer || values.Luma) &&\n      values.Issuer !== values.Luma\n  );\n  const canConfirm = Boolean(\n    values.Confirmed ||\n      (values.Issuer && values.Luma && values.Issuer === values.Luma)\n  );\n  const canNotConfirm = Boolean(\n    !transformedValues.Confirmed &&\n      !transformedValues.Luma &&\n      !transformedValues.Issuer\n  );\n\n  return {\n    allButtonsDisabled: allButtonsDisabled,\n    canReview: canReview,\n    canConfirm: canConfirm,\n    canNotConfirm: canNotConfirm,\n  };\n};\n\nexport const validateButtonsPhysicalForm = (\n  values: initialPhysicalValues,\n  selectedUnderlier: Underlier\n): FormButtonValidation => {\n  const transformedValues = {\n    lumaShares: Number(values.lumaShares),\n    issuerShares: Number(values.issuerShares),\n    confirmedShares: Number(values.confirmedShares),\n    lumaCash: Number(values.lumaCash),\n    issuerCash: Number(values.issuerCash),\n    confirmedCash: Number(values.confirmedCash),\n  };\n  const allButtonsDisabled = !selectedUnderlier.display;\n\n  //Can confirm if confirmed shares exist, or luma/issuer values are the same\n  const canConfirm =\n    Boolean(transformedValues.confirmedShares) ||\n    Boolean(\n      (transformedValues.lumaShares || transformedValues.lumaCash) &&\n        transformedValues?.lumaShares === transformedValues?.issuerShares &&\n        transformedValues?.lumaCash === transformedValues?.issuerCash\n    );\n\n  let canReview = false;\n  if (canConfirm) canReview = false;\n  else {\n    canReview = Boolean(\n      transformedValues.lumaShares ||\n        transformedValues.lumaCash ||\n        transformedValues.issuerShares ||\n        transformedValues.issuerCash\n    );\n  }\n\n  const canNotConfirm =\n    !transformedValues.lumaShares &&\n    !transformedValues.issuerShares &&\n    !transformedValues.confirmedShares &&\n    !transformedValues.lumaCash &&\n    !transformedValues.issuerCash &&\n    !transformedValues.confirmedCash;\n\n  return {\n    allButtonsDisabled: allButtonsDisabled,\n    canReview: canReview,\n    canConfirm: canConfirm,\n    canNotConfirm: canNotConfirm,\n  };\n};\n"],"mappings":";AAoBA,OAAO,MAAMA,gBAAgB,GAAG,CAAC;EAC/BC,eAD+B;EAE/BC,cAF+B;EAG/BC,cAH+B;EAI/BC;AAJ+B,CAAD,KAKnB;EACX,IAAIF,cAAJ,EAAoB;IAClBC,cAAc,mBACTC,WADS;MAEZF,cAAc,EAAE,IAFJ;MAGZD,eAAe,EAAE,KAHL;MAIZI,qBAAqB,EAAE;IAJX,GAAd;EAMD,CAPD,MAOO,IAAIJ,eAAJ,EAAqB;IAC1BE,cAAc,mBACTC,WADS;MAEZH,eAAe,EAAE,IAFL;MAGZC,cAAc,EAAE,KAHJ;MAIZG,qBAAqB,EAAE;IAJX,GAAd;EAMD,CAPM,MAOA;IACLF,cAAc,mBACTC,WADS;MAEZC,qBAAqB,EAAE,IAFX;MAGZJ,eAAe,EAAE,KAHL;MAIZC,cAAc,EAAE;IAJJ,GAAd;EAMD;;EACD,OAAOE,WAAP;AACD,CA7BM;AAsCP,OAAO,MAAME,uBAAuB,GAClCC,MADqC,IAEZ;EACzB,MAAMC,iBAAiB,GAAG;IACxBC,SAAS,EAAEC,MAAM,CAACH,MAAM,CAACE,SAAR,CADO;IAExBE,IAAI,EAAED,MAAM,CAACH,MAAM,CAACI,IAAR,CAFY;IAGxBC,MAAM,EAAEF,MAAM,CAACH,MAAM,CAACK,MAAR;EAHU,CAA1B;EAKA,MAAMC,kBAAkB,GAAG,KAA3B;EACA,MAAMC,SAAS,GAAGC,OAAO,CACvB,CAACR,MAAM,CAACE,SAAR,KACGF,MAAM,CAACK,MAAP,IAAiBL,MAAM,CAACI,IAD3B,KAEEJ,MAAM,CAACK,MAAP,KAAkBL,MAAM,CAACI,IAHJ,CAAzB;EAKA,MAAMK,UAAU,GAAGD,OAAO,CACxBR,MAAM,CAACE,SAAP,IACGF,MAAM,CAACK,MAAP,IAAiBL,MAAM,CAACI,IAAxB,IAAgCJ,MAAM,CAACK,MAAP,KAAkBL,MAAM,CAACI,IAFpC,CAA1B;EAIA,MAAMM,aAAa,GAAGF,OAAO,CAC3B,CAACP,iBAAiB,CAACC,SAAnB,IACE,CAACD,iBAAiB,CAACG,IADrB,IAEE,CAACH,iBAAiB,CAACI,MAHM,CAA7B;EAMA,OAAO;IACLC,kBAAkB,EAAEA,kBADf;IAELC,SAAS,EAAEA,SAFN;IAGLE,UAAU,EAAEA,UAHP;IAILC,aAAa,EAAEA;EAJV,CAAP;AAMD,CA9BM;AAgCP,OAAO,MAAMC,2BAA2B,GAAG,CACzCX,MADyC,EAEzCY,iBAFyC,KAGhB;EACzB,MAAMX,iBAAiB,GAAG;IACxBY,UAAU,EAAEV,MAAM,CAACH,MAAM,CAACa,UAAR,CADM;IAExBC,YAAY,EAAEX,MAAM,CAACH,MAAM,CAACc,YAAR,CAFI;IAGxBC,eAAe,EAAEZ,MAAM,CAACH,MAAM,CAACe,eAAR,CAHC;IAIxBC,QAAQ,EAAEb,MAAM,CAACH,MAAM,CAACgB,QAAR,CAJQ;IAKxBC,UAAU,EAAEd,MAAM,CAACH,MAAM,CAACiB,UAAR,CALM;IAMxBC,aAAa,EAAEf,MAAM,CAACH,MAAM,CAACkB,aAAR;EANG,CAA1B;EAQA,MAAMZ,kBAAkB,GAAG,CAACM,iBAAiB,CAACO,OAA9C,CATyB,CAWzB;;EACA,MAAMV,UAAU,GACdD,OAAO,CAACP,iBAAiB,CAACc,eAAnB,CAAP,IACAP,OAAO,CACL,CAACP,iBAAiB,CAACY,UAAlB,IAAgCZ,iBAAiB,CAACe,QAAnD,KACE,CAAAf,iBAAiB,QAAjB,YAAAA,iBAAiB,CAAEY,UAAnB,OAAkCZ,iBAAlC,oBAAkCA,iBAAiB,CAAEa,YAArD,CADF,IAEE,CAAAb,iBAAiB,QAAjB,YAAAA,iBAAiB,CAAEe,QAAnB,OAAgCf,iBAAhC,oBAAgCA,iBAAiB,CAAEgB,UAAnD,CAHG,CAFT;EAQA,IAAIV,SAAS,GAAG,KAAhB;EACA,IAAIE,UAAJ,EAAgBF,SAAS,GAAG,KAAZ,CAAhB,KACK;IACHA,SAAS,GAAGC,OAAO,CACjBP,iBAAiB,CAACY,UAAlB,IACEZ,iBAAiB,CAACe,QADpB,IAEEf,iBAAiB,CAACa,YAFpB,IAGEb,iBAAiB,CAACgB,UAJH,CAAnB;EAMD;EAED,MAAMP,aAAa,GACjB,CAACT,iBAAiB,CAACY,UAAnB,IACA,CAACZ,iBAAiB,CAACa,YADnB,IAEA,CAACb,iBAAiB,CAACc,eAFnB,IAGA,CAACd,iBAAiB,CAACe,QAHnB,IAIA,CAACf,iBAAiB,CAACgB,UAJnB,IAKA,CAAChB,iBAAiB,CAACiB,aANrB;EAQA,OAAO;IACLZ,kBAAkB,EAAEA,kBADf;IAELC,SAAS,EAAEA,SAFN;IAGLE,UAAU,EAAEA,UAHP;IAILC,aAAa,EAAEA;EAJV,CAAP;AAMD,CAhDM"},"metadata":{},"sourceType":"module"}