import type { OpenAPIV3 } from 'openapi-types';
export declare type OperationDefinition = {
    path: string;
    verb: typeof operationKeys[number];
    pathItem: OpenAPIV3.PathItemObject;
    operation: OpenAPIV3.OperationObject;
};
declare type Require<T, K extends keyof T> = {
    [k in K]-?: NonNullable<T[k]>;
} & Omit<T, K>;
declare type Optional<T, K extends keyof T> = {
    [k in K]?: NonNullable<T[k]>;
} & Omit<T, K>;
declare type Id<T> = {
    [K in keyof T]: T[K];
} & {};
export declare const operationKeys: readonly ["get", "put", "post", "delete", "options", "head", "patch", "trace"];
export declare type GenerationOptions = Id<CommonOptions & Optional<OutputFileOptions, 'outputFile'> & {
    isDataResponse?(code: string, response: OpenAPIV3.ResponseObject, allResponses: OpenAPIV3.ResponsesObject): boolean;
}>;
export interface CommonOptions {
    apiFile: string;
    /**
     * filename or url
     */
    schemaFile: string;
    /**
     * defaults to "api"
     */
    apiImport?: string;
    /**
     * defaults to "enhancedApi"
     */
    exportName?: string;
    /**
     * defaults to "ApiArg"
     */
    argSuffix?: string;
    /**
     * defaults to "ApiResponse"
     */
    responseSuffix?: string;
    /**
     * defaults to false
     */
    hooks?: boolean;
}
export declare type TextMatcher = string | RegExp | (string | RegExp)[];
export declare type EndpointMatcherFunction = (operationName: string, operationDefinition: OperationDefinition) => boolean;
export declare type EndpointMatcher = TextMatcher | EndpointMatcherFunction;
export interface OutputFileOptions extends Partial<CommonOptions> {
    outputFile: string;
    filterEndpoints?: EndpointMatcher;
    endpointOverrides?: EndpointOverrides[];
}
export interface EndpointOverrides {
    pattern: EndpointMatcher;
    type: 'mutation' | 'query';
}
export declare type ConfigFile = Id<Require<CommonOptions & OutputFileOptions, 'outputFile'>> | Id<Omit<CommonOptions, 'outputFile'> & {
    outputFiles: {
        [outputFile: string]: Omit<OutputFileOptions, 'outputFile'>;
    };
}>;
export {};
