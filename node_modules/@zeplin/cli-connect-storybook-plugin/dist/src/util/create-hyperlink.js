"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createStoryHyperlink = void 0;
const proper_url_join_1 = __importDefault(require("proper-url-join"));
function toLegacyQuery({ selectedKind, selectedStory }) {
    return { selectedKind, selectedStory };
}
function shouldUseTrailingSlash(url) {
    try {
        const path = new URL(url).pathname;
        // Trailing slash is required if the Storybook is hosted under a path but if
        // BaseUrl just points to the iframe.html or index.html, trailing slash should not exist
        return !(/\.\w+$/.test(path));
    }
    catch (e) {
        return false;
    }
}
function createStoryHyperlink(baseUrl, params, { format = "new", useDocsPage = false } = {}) {
    const trailingSlash = shouldUseTrailingSlash(baseUrl);
    if (format === "old") {
        return proper_url_join_1.default(baseUrl, {
            trailingSlash,
            query: toLegacyQuery(params)
        });
    }
    // Docs hyperlinks somehow cause error if iframe.html is accessed directly
    // To workaround this /story/ is enforced even if a docs page exist
    const viewMode = params.hasDocsPage && useDocsPage && !baseUrl.endsWith("iframe.html")
        ? "docs"
        : "story";
    return proper_url_join_1.default(baseUrl, {
        trailingSlash,
        query: { path: `/${viewMode}/${params.storyId}` },
        queryOptions: { encode: false }
    });
}
exports.createStoryHyperlink = createStoryHyperlink;
//# sourceMappingURL=create-hyperlink.js.map