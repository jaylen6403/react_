"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updatePackageJson = void 0;
const devkit_1 = require("@nrwl/devkit");
const fileutils_1 = require("@nrwl/tao/src/utils/fileutils");
const path_1 = require("path");
function getMainFileDirRelativeToProjectRoot(main, projectRoot) {
    const mainFileDir = (0, path_1.dirname)(main);
    const relativeDir = (0, devkit_1.normalizePath)((0, path_1.relative)(projectRoot, mainFileDir));
    return relativeDir === '' ? `./` : `./${relativeDir}/`;
}
function updatePackageJson(main, outputPath, projectRoot, withTypings = true) {
    var _a, _b;
    const packageJson = (0, fileutils_1.readJsonFile)((0, path_1.join)(projectRoot, 'package.json'));
    if (packageJson.main && packageJson.typings) {
        return;
    }
    const mainFile = (0, path_1.basename)(main).replace(/\.[tj]s$/, '');
    const relativeMainFileDir = getMainFileDirRelativeToProjectRoot(main, projectRoot);
    const mainJsFile = `${relativeMainFileDir}${mainFile}.js`;
    const typingsFile = `${relativeMainFileDir}${mainFile}.d.ts`;
    packageJson.main = (_a = packageJson.main) !== null && _a !== void 0 ? _a : mainJsFile;
    if (withTypings) {
        packageJson.typings = (_b = packageJson.typings) !== null && _b !== void 0 ? _b : typingsFile;
    }
    const outputPackageJson = (0, path_1.join)(outputPath, 'package.json');
    (0, fileutils_1.writeJsonFile)(outputPackageJson, packageJson);
}
exports.updatePackageJson = updatePackageJson;
//# sourceMappingURL=update-package-json.js.map